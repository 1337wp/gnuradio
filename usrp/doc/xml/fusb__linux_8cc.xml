<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="fusb__linux_8cc" kind="file" language="C++">
    <compoundname>fusb_linux.cc</compoundname>
    <includes refid="fusb__linux_8h" local="no">fusb_linux.h</includes>
    <includes local="no">usb.h</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">linux/usbdevice_fs.h</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">cstdio</includes>
    <incdepgraph>
      <node id="708">
        <label>list</label>
      </node>
      <node id="712">
        <label>assert.h</label>
      </node>
      <node id="706">
        <label>usrp/libusb_types.h</label>
        <link refid="libusb__types_8h"/>
        <childnode refid="707" relation="include">
        </childnode>
      </node>
      <node id="715">
        <label>errno.h</label>
      </node>
      <node id="709">
        <label>stdexcept</label>
      </node>
      <node id="703">
        <label>fusb_linux.cc</label>
        <link refid="fusb_linux.cc"/>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="707" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
        <childnode refid="711" relation="include">
        </childnode>
        <childnode refid="712" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
      </node>
      <node id="711">
        <label>sys/ioctl.h</label>
      </node>
      <node id="705">
        <label>fusb.h</label>
        <link refid="fusb_8h"/>
        <childnode refid="706" relation="include">
        </childnode>
      </node>
      <node id="713">
        <label>string.h</label>
      </node>
      <node id="716">
        <label>cstdio</label>
      </node>
      <node id="710">
        <label>linux/usbdevice_fs.h</label>
      </node>
      <node id="704">
        <label>fusb_linux.h</label>
        <link refid="fusb__linux_8h"/>
        <childnode refid="705" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
      </node>
      <node id="707">
        <label>usb.h</label>
      </node>
      <node id="714">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="fusb__linux_8cc_1a5375e2e38a16451a109c60da1610c3d9" prot="public" static="no">
        <name>MINIMIZE_TX_BUFFERING</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" line="42" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" bodystart="42" bodyend="-1"/>
        <referencedby refid="classfusb__ephandle__linux_1af7000716d3733e2b4b3ed6510fd7ebcd" compoundref="fusb__linux_8cc" startline="301" endline="336">fusb_ephandle_linux::fusb_ephandle_linux</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fusb__linux_8cc_1a6f1f757649befe76c8a6c9595c0d33d2" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int MAX_BLOCK_SIZE</definition>
        <argsstring></argsstring>
        <name>MAX_BLOCK_SIZE</name>
        <initializer>= <ref refid="classfusb__sysconfig_1a984f66e5b11b677d810c0a11f33f4ef6" kindref="member">fusb_sysconfig::max_block_size</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" line="45" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fusb__linux_8cc_1ae845d2b87d5f1d6ec6223e803394d97a" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int DEFAULT_BLOCK_SIZE</definition>
        <argsstring></argsstring>
        <name>DEFAULT_BLOCK_SIZE</name>
        <initializer>= MAX_BLOCK_SIZE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" line="46" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fusb__linux_8cc_1a02b39ea72118a63496508b0dc061e2cc" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int DEFAULT_BUFFER_SIZE</definition>
        <argsstring></argsstring>
        <name>DEFAULT_BUFFER_SIZE</name>
        <initializer>= 4 * (1L &lt;&lt; 20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" line="47" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fusb__linux_8cc_1a6f3633bd946b26add42b3716fb4d35f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fd_from_usb_dev_handle</definition>
        <argsstring>(usb_dev_handle *udh)</argsstring>
        <name>fd_from_usb_dev_handle</name>
        <param>
          <type><ref refid="structusb__dev__handle" kindref="compound">usb_dev_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" line="57" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="fusb__linux_8cc_1abecf29eaba00ee105e778e61dbb885d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void urb_set_ephandle</definition>
        <argsstring>(usbdevfs_urb *urb, fusb_ephandle_linux *handle)</argsstring>
        <name>urb_set_ephandle</name>
        <param>
          <type>usbdevfs_urb *</type>
          <declname>urb</declname>
        </param>
        <param>
          <type><ref refid="classfusb__ephandle__linux" kindref="compound">fusb_ephandle_linux</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" line="63" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="fusb__linux_8cc_1a017c7c02b6da5a2b6c436a568368e572" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfusb__ephandle__linux" kindref="compound">fusb_ephandle_linux</ref> *</type>
        <definition>static fusb_ephandle_linux* urb_get_ephandle</definition>
        <argsstring>(usbdevfs_urb *urb)</argsstring>
        <name>urb_get_ephandle</name>
        <param>
          <type>usbdevfs_urb *</type>
          <declname>urb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" line="69" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="fusb__linux_8cc_1a7c74eb380d520b2e3a0752a3dbfeb594" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>usbdevfs_urb *</type>
        <definition>static usbdevfs_urb* alloc_urb</definition>
        <argsstring>(fusb_ephandle_linux *self, int buffer_length, int endpoint, bool input_p, unsigned char *write_buffer)</argsstring>
        <name>alloc_urb</name>
        <param>
          <type><ref refid="classfusb__ephandle__linux" kindref="compound">fusb_ephandle_linux</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buffer_length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>input_p</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>write_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" line="79" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" bodystart="79" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="fusb__linux_8cc_1a99afa4c4033e78d53e77388bc39f8a12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_urb</definition>
        <argsstring>(usbdevfs_urb *urb)</argsstring>
        <name>free_urb</name>
        <param>
          <type>usbdevfs_urb *</type>
          <declname>urb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" line="116" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc" bodystart="116" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2003<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fusb__linux_8h" kindref="compound">fusb_linux.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;usb.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>libusb<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LINUX_COMPILER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/compiler.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/usbdevice_fs.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>interface<sp/>to<sp/>kernel<sp/>portion<sp/>of<sp/>user<sp/>mode<sp/>usb<sp/>driver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/ioctl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="fusb__linux_8cc_1a5375e2e38a16451a109c60da1610c3d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MINIMIZE_TX_BUFFERING<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>must<sp/>be<sp/>defined<sp/>to<sp/>0<sp/>or<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_BLOCK_SIZE<sp/>=<sp/><ref refid="classfusb__sysconfig_1a984f66e5b11b677d810c0a11f33f4ef6" kindref="member">fusb_sysconfig::max_block_size</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hard<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEFAULT_BLOCK_SIZE<sp/>=<sp/>MAX_BLOCK_SIZE;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEFAULT_BUFFER_SIZE<sp/>=<sp/>4<sp/>*<sp/>(1L<sp/>&lt;&lt;<sp/>20);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4<sp/>MB<sp/>/<sp/>endpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Totally<sp/>evil<sp/>and<sp/>fragile<sp/>extraction<sp/>of<sp/>file<sp/>descriptor<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>guts<sp/>of<sp/>libusb.<sp/><sp/>They<sp/>don&apos;t<sp/>install<sp/>usbi.h,<sp/>which<sp/>is<sp/>what<sp/>we&apos;d<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>do<sp/>this<sp/>nicely.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME<sp/>if<sp/>everything<sp/>breaks<sp/>someday<sp/>in<sp/>the<sp/>future,<sp/>look<sp/>here...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">fd_from_usb_dev_handle<sp/>(<ref refid="structusb__dev__handle" kindref="compound">usb_dev_handle</ref><sp/>*udh)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>udh);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">urb_set_ephandle<sp/>(usbdevfs_urb<sp/>*urb,<sp/><ref refid="classfusb__ephandle__linux" kindref="compound">fusb_ephandle_linux</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>urb-&gt;usercontext<sp/>=<sp/>handle;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__linux" kindref="compound">fusb_ephandle_linux</ref><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="normal">urb_get_ephandle<sp/>(usbdevfs_urb<sp/>*urb)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle__linux" kindref="compound">fusb_ephandle_linux</ref><sp/>*)<sp/>urb-&gt;usercontext;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USB<sp/>request<sp/>block<sp/>(urb)<sp/>allocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>usbdevfs_urb<sp/>*</highlight></codeline>
<codeline lineno="79"><highlight class="normal">alloc_urb<sp/>(<ref refid="classfusb__ephandle__linux" kindref="compound">fusb_ephandle_linux</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buffer_length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endpoint,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*write_buffer)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>usbdevfs_urb<sp/><sp/>*urb<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>usbdevfs_urb;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>memset<sp/>(urb,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(*urb));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>urb-&gt;buffer_length<sp/>=<sp/>buffer_length;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>allocate<sp/>dedicated<sp/>memory<sp/>only<sp/>for<sp/>input<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>output<sp/>buffers<sp/>we<sp/>reuse<sp/>the<sp/>same<sp/>buffer<sp/>(the<sp/>kernel<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copies<sp/>the<sp/>data<sp/>at<sp/>submital<sp/>time)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_p)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>urb-&gt;buffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[buffer_length];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>urb-&gt;buffer<sp/>=<sp/>write_buffer;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>common<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>urb-&gt;type<sp/>=<sp/>USBDEVFS_URB_TYPE_BULK;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>urb-&gt;endpoint<sp/>=<sp/>(endpoint<sp/>&amp;<sp/>0x7f)<sp/>|<sp/>(input_p<sp/>?<sp/>0x80<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>USBDEVFS_URB_QUEUE_BULK<sp/>goes<sp/>away<sp/>in<sp/>linux<sp/>2.5,<sp/>but<sp/>is<sp/>needed<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>using<sp/>a<sp/>2.4<sp/>usb-uhci<sp/>host<sp/>controller<sp/>driver.<sp/><sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unlikely<sp/>since<sp/>we&apos;re<sp/>almost<sp/>always<sp/>going<sp/>to<sp/>be<sp/>plugged<sp/>into<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>high<sp/>speed<sp/>host<sp/>controller<sp/>(ehci)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/>&amp;&amp;<sp/>defined<sp/>(USBDEVFS_URB_QUEUE_BULK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>urb-&gt;flags<sp/>=<sp/>USBDEVFS_URB_QUEUE_BULK;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>urb-&gt;signr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>urb_set_ephandle<sp/>(urb,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>urb;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">free_urb<sp/>(usbdevfs_urb<sp/>*urb)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>was<sp/>an<sp/>input<sp/>urb,<sp/>free<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urb-&gt;endpoint<sp/>&amp;<sp/>0x80)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>urb-&gt;buffer);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>urb;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classfusb__devhandle__linux_1a7ec9b566290422e0e426c6506f7aabab" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__linux_1a7ec9b566290422e0e426c6506f7aabab" kindref="member">fusb_devhandle_linux::fusb_devhandle_linux</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">usb_dev_handle</ref><sp/>*udh)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classfusb__devhandle" kindref="compound">fusb_devhandle</ref><sp/>(udh)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that&apos;s<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classfusb__devhandle__linux_1a5eb1bc6de565eda51b02cecca43fde70" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__linux_1a5eb1bc6de565eda51b02cecca43fde70" kindref="member">fusb_devhandle_linux::~fusb_devhandle_linux</ref><sp/>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>any<sp/>pending<sp/>requests,<sp/>cancel<sp/>them<sp/>and<sp/>free<sp/>the<sp/>urbs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>std::list&lt;usbdevfs_urb*&gt;::reverse_iterator<sp/>it;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>d_pending_rqsts.rbegin<sp/>();<sp/>it<sp/>!=<sp/>d_pending_rqsts.rend<sp/>();<sp/>it++){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfusb__devhandle__linux_1aca4c020c61d55dd5948b487305debe68" kindref="member">_cancel_urb</ref><sp/>(*it);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>free_urb<sp/>(*it);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="classfusb__ephandle" kindref="compound">fusb_ephandle</ref><sp/>*</highlight></codeline>
<codeline lineno="148" refid="classfusb__devhandle__linux_1a5949f040f94ab716649147f3d4c160d2" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__linux_1a5949f040f94ab716649147f3d4c160d2" kindref="member">fusb_devhandle_linux::make_ephandle</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endpoint,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_p,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nblocks)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__linux" kindref="compound">fusb_ephandle_linux</ref><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>endpoint,<sp/>input_p,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_size,<sp/>nblocks);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>cancel<sp/>all<sp/>transactions<sp/>associated<sp/>with<sp/>eph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classfusb__devhandle__linux_1ac2e57831b7cf37e533f1c56a7ecb452f" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__linux_1ac2e57831b7cf37e533f1c56a7ecb452f" kindref="member">fusb_devhandle_linux::_cancel_pending_rqsts</ref><sp/>(<ref refid="classfusb__ephandle__linux" kindref="compound">fusb_ephandle_linux</ref><sp/>*eph)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>std::list&lt;usbdevfs_urb*&gt;::reverse_iterator<sp/>it;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>d_pending_rqsts.rbegin<sp/>();<sp/>it<sp/>!=<sp/>d_pending_rqsts.rend<sp/>();<sp/>it++){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urb_get_ephandle<sp/>(*it)<sp/>==<sp/>eph)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfusb__devhandle__linux_1aca4c020c61d55dd5948b487305debe68" kindref="member">_cancel_urb</ref><sp/>(*it);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal">fusb_devhandle_linux::pending_add<sp/>(usbdevfs_urb<sp/>*urb)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>d_pending_rqsts.push_back<sp/>(urb);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">usbdevfs_urb<sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="normal">fusb_devhandle_linux::pending_get<sp/>()</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_pending_rqsts.empty<sp/>())</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>usbdevfs_urb<sp/>*urb<sp/>=<sp/>d_pending_rqsts.front<sp/>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>d_pending_rqsts.pop_front<sp/>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>urb;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">fusb_devhandle_linux::pending_remove<sp/>(usbdevfs_urb<sp/>*urb)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>std::list&lt;usbdevfs_urb*&gt;::iterator<sp/><sp/><sp/><sp/>result<sp/>=<sp/>find<sp/>(d_pending_rqsts.begin<sp/>(),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_pending_rqsts.end<sp/>(),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>urb);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>d_pending_rqsts.end<sp/>()){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;fusb::pending_remove:<sp/>failed<sp/>to<sp/>find<sp/>urb<sp/>in<sp/>pending_rqsts:<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>urb);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>d_pending_rqsts.erase<sp/>(result);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>Submit<sp/>the<sp/>urb<sp/>to<sp/>the<sp/>kernel.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>iff<sp/>successful,<sp/>the<sp/>urb<sp/>will<sp/>be<sp/>placed<sp/>on<sp/>the<sp/>devhandle&apos;s<sp/>pending<sp/>list.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classfusb__devhandle__linux_1ad35214661f5e6fe85a34008e760fa49f" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__linux_1ad35214661f5e6fe85a34008e760fa49f" kindref="member">fusb_devhandle_linux::_submit_urb</ref><sp/>(usbdevfs_urb<sp/>*urb)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>ioctl<sp/>(fd_from_usb_dev_handle<sp/>(<ref refid="classfusb__devhandle_1a6252a726fbddc4dccd936e46b59f7f0a" kindref="member">d_udh</ref>),<sp/>USBDEVFS_SUBMITURB,<sp/>urb);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;fusb::_submit_urb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>pending_add<sp/>(urb);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>Attempt<sp/>to<sp/>cancel<sp/>the<sp/>in<sp/>pending<sp/>or<sp/>in-progress<sp/>urb<sp/>transaction.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>Return<sp/>true<sp/>iff<sp/>transaction<sp/>was<sp/>sucessfully<sp/>cancelled.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>Failure<sp/>to<sp/>cancel<sp/>should<sp/>not<sp/>be<sp/>considered<sp/>a<sp/>problem.<sp/><sp/>This<sp/>frequently</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>occurs<sp/>if<sp/>the<sp/>transaction<sp/>has<sp/>already<sp/>completed<sp/>in<sp/>the<sp/>kernel<sp/>but<sp/>hasn&apos;t</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>yet<sp/>been<sp/>reaped<sp/>by<sp/>the<sp/>user<sp/>mode<sp/>code.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>urbs<sp/>which<sp/>were<sp/>cancelled<sp/>have<sp/>their<sp/>status<sp/>field<sp/>set<sp/>to<sp/>-ENOENT<sp/>when</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>they<sp/>are<sp/>reaped.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classfusb__devhandle__linux_1aca4c020c61d55dd5948b487305debe68" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__linux_1aca4c020c61d55dd5948b487305debe68" kindref="member">fusb_devhandle_linux::_cancel_urb</ref><sp/>(usbdevfs_urb<sp/>*urb)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>ioctl<sp/>(fd_from_usb_dev_handle<sp/>(<ref refid="classfusb__devhandle_1a6252a726fbddc4dccd936e46b59f7f0a" kindref="member">d_udh</ref>),<sp/>USBDEVFS_DISCARDURB,<sp/>urb);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perror<sp/>(&quot;fusb::_cancel_urb&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>Check<sp/>with<sp/>the<sp/>kernel<sp/>and<sp/>see<sp/>if<sp/>any<sp/>of<sp/>our<sp/>outstanding<sp/>requests</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>have<sp/>completed.<sp/><sp/>For<sp/>each<sp/>completed<sp/>transaction,<sp/>remove<sp/>it<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>devhandle&apos;s<sp/>pending<sp/>list<sp/>and<sp/>append<sp/>it<sp/>to<sp/>the<sp/>completed<sp/>list<sp/>for</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>the<sp/>corresponding<sp/>endpoint.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>If<sp/>any<sp/>transactions<sp/>are<sp/>reaped<sp/>return<sp/>true.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>If<sp/>ok_to_block_p<sp/>is<sp/>true,<sp/>then<sp/>this<sp/>will<sp/>block<sp/>until<sp/>at<sp/>least<sp/>one</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>transaction<sp/>completes<sp/>or<sp/>an<sp/>unrecoverable<sp/>error<sp/>occurs.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classfusb__devhandle__linux_1a9825994b3a8346f1a8284de755f1d6e0" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__linux_1a9825994b3a8346f1a8284de755f1d6e0" kindref="member">fusb_devhandle_linux::_reap</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok_to_block_p)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nreaped<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>usbdevfs_urb<sp/><sp/>*urb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>fd<sp/>=<sp/>fd_from_usb_dev_handle<sp/>(<ref refid="classfusb__devhandle_1a6252a726fbddc4dccd936e46b59f7f0a" kindref="member">d_udh</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>reap<sp/>as<sp/>many<sp/>as<sp/>possible<sp/>without<sp/>blocking...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ret<sp/>=<sp/>ioctl<sp/>(fd,<sp/>USBDEVFS_REAPURBNDELAY,<sp/>&amp;urb))<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urb-&gt;status<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>urb-&gt;status<sp/>!=<sp/>-ENOENT){</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;_reap:<sp/>usb-&gt;status<sp/>=<sp/>%d,<sp/>actual_length<sp/>=<sp/>%5d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>urb-&gt;status,<sp/>urb-&gt;actual_length);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>pending_remove<sp/>(urb);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>urb_get_ephandle<sp/>(urb)-&gt;<ref refid="classfusb__ephandle__linux_1a5d4f19af3499104c7e146d61afc3cbd5" kindref="member">completed_list_add</ref><sp/>(urb);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>nreaped++;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nreaped<sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>got<sp/>any,<sp/>return<sp/>w/o<sp/>blocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok_to_block_p)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>ioctl<sp/>(fd,<sp/>USBDEVFS_REAPURB,<sp/>&amp;urb);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;fusb::_reap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>pending_remove<sp/>(urb);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>urb_get_ephandle<sp/>(urb)-&gt;<ref refid="classfusb__ephandle__linux_1a5d4f19af3499104c7e146d61afc3cbd5" kindref="member">completed_list_add</ref><sp/>(urb);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classfusb__devhandle__linux_1addd226a9f8221e6742551ea8171b35a6" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__linux_1addd226a9f8221e6742551ea8171b35a6" kindref="member">fusb_devhandle_linux::_wait_for_completion</ref><sp/>()</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!d_pending_rqsts.empty<sp/>())</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classfusb__devhandle__linux_1a9825994b3a8346f1a8284de755f1d6e0" kindref="member">_reap</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>point<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classfusb__ephandle__linux_1af7000716d3733e2b4b3ed6510fd7ebcd" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1af7000716d3733e2b4b3ed6510fd7ebcd" kindref="member">fusb_ephandle_linux::fusb_ephandle_linux</ref><sp/>(<ref refid="classfusb__devhandle__linux" kindref="compound">fusb_devhandle_linux</ref><sp/>*devhandle,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endpoint,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_p,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nblocks)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classfusb__ephandle" kindref="compound">fusb_ephandle</ref><sp/>(endpoint,<sp/>input_p,<sp/>block_size,<sp/>nblocks),</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>d_devhandle<sp/>(devhandle),<sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>d_write_work_in_progress<sp/>(0),<sp/>d_write_buffer<sp/>(0),</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_work_in_progress<sp/>(0),<sp/>d_read_buffer<sp/>(0),<sp/>d_read_buffer_end<sp/>(0)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_block_size<sp/>&lt;<sp/>0<sp/>||<sp/>d_block_size<sp/>&gt;<sp/>MAX_BLOCK_SIZE)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range<sp/>(</highlight><highlight class="stringliteral">&quot;fusb_ephandle_linux:<sp/>block_size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle_1a3d38bb3ad76925c044fe8e14ecb408e7" kindref="member">d_nblocks</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range<sp/>(</highlight><highlight class="stringliteral">&quot;fusb_ephandle_linux:<sp/>nblocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle_1aa8b4afe1f6aaa45491d9ae0dfdad3c0b" kindref="member">d_block_size</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle_1aa8b4afe1f6aaa45491d9ae0dfdad3c0b" kindref="member">d_block_size</ref><sp/>=<sp/>DEFAULT_BLOCK_SIZE;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle_1a3d38bb3ad76925c044fe8e14ecb408e7" kindref="member">d_nblocks</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle_1a3d38bb3ad76925c044fe8e14ecb408e7" kindref="member">d_nblocks</ref><sp/>=<sp/>std::max<sp/>(1,<sp/>DEFAULT_BUFFER_SIZE<sp/>/<sp/><ref refid="classfusb__ephandle_1aa8b4afe1f6aaa45491d9ae0dfdad3c0b" kindref="member">d_block_size</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="fusb__linux_8cc_1a5375e2e38a16451a109c60da1610c3d9" kindref="member">MINIMIZE_TX_BUFFERING</ref>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_write_buffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[<ref refid="classfusb__ephandle_1aa8b4afe1f6aaa45491d9ae0dfdad3c0b" kindref="member">d_block_size</ref>];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_linux::ctor:<sp/>d_block_size<sp/>=<sp/>%d<sp/><sp/>d_nblocks<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle_1aa8b4afe1f6aaa45491d9ae0dfdad3c0b" kindref="member">d_block_size</ref>,<sp/><ref refid="classfusb__ephandle_1a3d38bb3ad76925c044fe8e14ecb408e7" kindref="member">d_nblocks</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>urbs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classfusb__ephandle_1a3d38bb3ad76925c044fe8e14ecb408e7" kindref="member">d_nblocks</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>d_free_list.push_back<sp/>(alloc_urb<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classfusb__ephandle_1aa8b4afe1f6aaa45491d9ae0dfdad3c0b" kindref="member">d_block_size</ref>,<sp/><ref refid="classfusb__ephandle_1a136e1ab7ba9e180a78ea5085739dd018" kindref="member">d_endpoint</ref>,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref>,<sp/>d_write_buffer));</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classfusb__ephandle__linux_1a5978d6295cbfe0f8fa8961d0a24e7ba3" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1a5978d6295cbfe0f8fa8961d0a24e7ba3" kindref="member">fusb_ephandle_linux::~fusb_ephandle_linux</ref><sp/>()</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__linux_1a0ab27c7fa6bacaa042a89de22cb36e91" kindref="member">stop</ref><sp/>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>usbdevfs_urb<sp/>*urb;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((urb<sp/>=<sp/><ref refid="classfusb__ephandle__linux_1ab8edb43836585a3f1f1ae817686e4231" kindref="member">free_list_get</ref><sp/>())<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>free_urb<sp/>(urb);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((urb<sp/>=<sp/><ref refid="classfusb__ephandle__linux_1a668168194e27bfd84a708acd93560df7" kindref="member">completed_list_get</ref><sp/>())<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>free_urb<sp/>(urb);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_write_work_in_progress)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>free_urb<sp/>(d_write_work_in_progress);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>d_write_buffer;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_read_work_in_progress)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>free_urb<sp/>(d_read_work_in_progress);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="classfusb__ephandle__linux_1a765993be306d930b5c0fda742d21e87e" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1a765993be306d930b5c0fda742d21e87e" kindref="member">fusb_ephandle_linux::start</ref><sp/>()</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref>){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fire<sp/>off<sp/>all<sp/>the<sp/>reads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>usbdevfs_urb<sp/>*urb;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nerrors<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((urb<sp/>=<sp/><ref refid="classfusb__ephandle__linux_1ab8edb43836585a3f1f1ae817686e4231" kindref="member">free_list_get</ref><sp/>())<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>nerrors<sp/>&lt;<sp/><ref refid="classfusb__ephandle_1a3d38bb3ad76925c044fe8e14ecb408e7" kindref="member">d_nblocks</ref>){</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!submit_urb<sp/>(urb))</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nerrors++;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kill<sp/>all<sp/>i/o<sp/>in<sp/>progress.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kill<sp/>any<sp/>completed<sp/>but<sp/>unprocessed<sp/>transactions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="classfusb__ephandle__linux_1a0ab27c7fa6bacaa042a89de22cb36e91" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1a0ab27c7fa6bacaa042a89de22cb36e91" kindref="member">fusb_ephandle_linux::stop</ref><sp/>()</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_write_work_in_progress){</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle__linux_1a57c578355685f5b86d976c2204f38f36" kindref="member">free_list_add</ref><sp/>(d_write_work_in_progress);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>d_write_work_in_progress<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_read_work_in_progress){</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle__linux_1a57c578355685f5b86d976c2204f38f36" kindref="member">free_list_add</ref><sp/>(d_read_work_in_progress);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_work_in_progress<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_buffer_end<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>d_devhandle-&gt;<ref refid="classfusb__devhandle__linux_1ac2e57831b7cf37e533f1c56a7ecb452f" kindref="member">_cancel_pending_rqsts</ref><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>d_devhandle-&gt;<ref refid="classfusb__devhandle__linux_1a9825994b3a8346f1a8284de755f1d6e0" kindref="member">_reap</ref><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>usbdevfs_urb<sp/>*urb;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((urb<sp/>=<sp/><ref refid="classfusb__ephandle__linux_1a668168194e27bfd84a708acd93560df7" kindref="member">completed_list_get</ref><sp/>())<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle__linux_1a57c578355685f5b86d976c2204f38f36" kindref="member">free_list_add</ref><sp/>(urb);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_free_list.size<sp/>()<sp/>==<sp/>(unsigned)<sp/><ref refid="classfusb__ephandle_1a3d38bb3ad76925c044fe8e14ecb408e7" kindref="member">d_nblocks</ref>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d_devhandle-&gt;<ref refid="classfusb__devhandle__linux_1a9825994b3a8346f1a8284de755f1d6e0" kindref="member">_reap</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>routines<sp/>for<sp/>writing<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(MINIMIZE_TX_BUFFERING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="430" refid="classfusb__ephandle__linux_1adfe7bf7550c1a8f19308de1d889ecc37" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1adfe7bf7550c1a8f19308de1d889ecc37" kindref="member">fusb_ephandle_linux::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref>)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>assert(nbytes<sp/>%<sp/>512<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buffer;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>nbytes){</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>usbdevfs_urb<sp/>*urb<sp/>=<sp/>get_write_work_in_progress();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!urb)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(urb-&gt;actual_length<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>std::min(nbytes<sp/>-<sp/>n,<sp/>MAX_BLOCK_SIZE);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>urb-&gt;buffer<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>urb-&gt;buffer_length<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>m;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>m;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!submit_urb(urb))</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>d_write_work_in_progress<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1adfe7bf7550c1a8f19308de1d889ecc37" kindref="member">fusb_ephandle_linux::write</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref>)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buffer;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>nbytes){</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>usbdevfs_urb<sp/>*urb<sp/>=<sp/>get_write_work_in_progress<sp/>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!urb)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>urb-&gt;buffer;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>std::min<sp/>(nbytes<sp/>-<sp/>n,<sp/>urb-&gt;buffer_length<sp/>-<sp/>urb-&gt;actual_length);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(&amp;dst[urb-&gt;actual_length],<sp/>&amp;src[n],<sp/>m);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>urb-&gt;actual_length<sp/>+=<sp/>m;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>m;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urb-&gt;actual_length<sp/>==<sp/>urb-&gt;buffer_length){</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!submit_urb<sp/>(urb))</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_write_work_in_progress<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">usbdevfs_urb<sp/>*</highlight></codeline>
<codeline lineno="504"><highlight class="normal">fusb_ephandle_linux::get_write_work_in_progress<sp/>()</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;ve<sp/>already<sp/>got<sp/>some<sp/>work<sp/>in<sp/>progress,<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_write_work_in_progress)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_write_work_in_progress;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1){</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>reap_complete_writes<sp/>();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>usbdevfs_urb<sp/>*urb<sp/>=<sp/><ref refid="classfusb__ephandle__linux_1ab8edb43836585a3f1f1ae817686e4231" kindref="member">free_list_get</ref><sp/>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urb<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(urb-&gt;actual_length<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_write_work_in_progress<sp/>=<sp/>urb;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>urb;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>free<sp/>list<sp/>is<sp/>empty.<sp/><sp/>Tell<sp/>the<sp/>device<sp/>handle<sp/>to<sp/>reap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Anything<sp/>it<sp/>reaps<sp/>for<sp/>us<sp/>will<sp/>end<sp/>up<sp/>on<sp/>our<sp/>completed<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d_devhandle-&gt;<ref refid="classfusb__devhandle__linux_1a9825994b3a8346f1a8284de755f1d6e0" kindref="member">_reap</ref><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">fusb_ephandle_linux::reap_complete_writes<sp/>()</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>a<sp/>look<sp/>at<sp/>the<sp/>completed_list<sp/>and<sp/>xfer<sp/>to<sp/>free<sp/>list<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>checking<sp/>for<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>usbdevfs_urb<sp/>*urb;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((urb<sp/>=<sp/><ref refid="classfusb__ephandle__linux_1a668168194e27bfd84a708acd93560df7" kindref="member">completed_list_get</ref><sp/>())<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>any<sp/>errors<sp/>or<sp/>short<sp/>writes<sp/>that<sp/>were<sp/>reported<sp/>in<sp/>the<sp/>urb.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>kernel<sp/>sets<sp/>status,<sp/>actual_length<sp/>and<sp/>error_count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error_count<sp/>is<sp/>only<sp/>used<sp/>for<sp/>ISO<sp/>xfers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>status<sp/>is<sp/>0<sp/>if<sp/>successful,<sp/>else<sp/>is<sp/>an<sp/>errno<sp/>kind<sp/>of<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urb-&gt;status<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;fusb:<sp/>(status<sp/>%d)<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>urb-&gt;status,<sp/>strerror<sp/>(-urb-&gt;status));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urb-&gt;actual_length<sp/>!=<sp/>urb-&gt;buffer_length){</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;fusb:<sp/>short<sp/>write<sp/>xfer:<sp/>%d<sp/>!=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>urb-&gt;actual_length,<sp/>urb-&gt;buffer_length);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle__linux_1a57c578355685f5b86d976c2204f38f36" kindref="member">free_list_add</ref><sp/>(urb);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="classfusb__ephandle__linux_1ad84618ba52ecfe49c8848cba69b0a04c" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1ad84618ba52ecfe49c8848cba69b0a04c" kindref="member">fusb_ephandle_linux::wait_for_completion</ref><sp/>()</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>d_devhandle-&gt;<ref refid="classfusb__devhandle__linux_1addd226a9f8221e6742551ea8171b35a6" kindref="member">_wait_for_completion</ref><sp/>();</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>routines<sp/>for<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="classfusb__ephandle__linux_1a7dff0426304357101b6e34e5918d6098" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1a7dff0426304357101b6e34e5918d6098" kindref="member">fusb_ephandle_linux::read</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes)</highlight></codeline>
<codeline lineno="570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref>)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref>)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buffer;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>nbytes){</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_read_buffer<sp/>&gt;=<sp/>d_read_buffer_end)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reload_read_buffer<sp/>())</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>std::min<sp/>(nbytes<sp/>-<sp/>n,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(d_read_buffer_end<sp/>-<sp/>d_read_buffer));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(&amp;dst[n],<sp/>d_read_buffer,<sp/>m);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_buffer<sp/>+=<sp/>m;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>m;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal">fusb_ephandle_linux::reload_read_buffer<sp/>()</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>assert<sp/>(d_read_buffer<sp/>&gt;=<sp/>d_read_buffer_end);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>usbdevfs_urb<sp/>*urb;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_read_work_in_progress){</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>done<sp/>with<sp/>this<sp/>urb.<sp/><sp/>Fire<sp/>off<sp/>a<sp/>read<sp/>to<sp/>refill<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>urb<sp/>=<sp/>d_read_work_in_progress;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_work_in_progress<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_buffer_end<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>urb-&gt;actual_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!submit_urb<sp/>(urb))</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1){</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((urb<sp/>=<sp/><ref refid="classfusb__ephandle__linux_1a668168194e27bfd84a708acd93560df7" kindref="member">completed_list_get</ref><sp/>())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d_devhandle-&gt;<ref refid="classfusb__devhandle__linux_1a9825994b3a8346f1a8284de755f1d6e0" kindref="member">_reap</ref><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>result<sp/>of<sp/>completed<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urb-&gt;status<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>got<sp/>a<sp/>problem.<sp/>Report<sp/>it<sp/>and<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;fusb:<sp/>(rd<sp/>status<sp/>%d)<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>urb-&gt;status,<sp/>strerror<sp/>(-urb-&gt;status));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>urb-&gt;actual_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle__linux_1a57c578355685f5b86d976c2204f38f36" kindref="member">free_list_add</ref><sp/>(urb);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>got<sp/>a<sp/>happy<sp/>urb,<sp/>full<sp/>of<sp/>data...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_work_in_progress<sp/>=<sp/>urb;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>urb-&gt;buffer;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>d_read_buffer_end<sp/>=<sp/>d_read_buffer<sp/>+<sp/>urb-&gt;actual_length;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="classfusb__ephandle__linux_1a57c578355685f5b86d976c2204f38f36" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1a57c578355685f5b86d976c2204f38f36" kindref="member">fusb_ephandle_linux::free_list_add</ref><sp/>(usbdevfs_urb<sp/>*urb)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>assert<sp/>(urb_get_ephandle<sp/>(urb)<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>urb-&gt;actual_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>d_free_list.push_back<sp/>(urb);</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal">usbdevfs_urb<sp/>*</highlight></codeline>
<codeline lineno="651" refid="classfusb__ephandle__linux_1ab8edb43836585a3f1f1ae817686e4231" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1ab8edb43836585a3f1f1ae817686e4231" kindref="member">fusb_ephandle_linux::free_list_get</ref><sp/>()</highlight></codeline>
<codeline lineno="652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_free_list.empty<sp/>())</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>usbdevfs_urb<sp/>*urb<sp/>=<sp/>d_free_list.front<sp/>();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>d_free_list.pop_front<sp/>();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>urb;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="classfusb__ephandle__linux_1a5d4f19af3499104c7e146d61afc3cbd5" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1a5d4f19af3499104c7e146d61afc3cbd5" kindref="member">fusb_ephandle_linux::completed_list_add</ref><sp/>(usbdevfs_urb<sp/>*urb)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>assert<sp/>(urb_get_ephandle<sp/>(urb)<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>d_completed_list.push_back<sp/>(urb);</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal">usbdevfs_urb<sp/>*</highlight></codeline>
<codeline lineno="669" refid="classfusb__ephandle__linux_1a668168194e27bfd84a708acd93560df7" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__linux_1a668168194e27bfd84a708acd93560df7" kindref="member">fusb_ephandle_linux::completed_list_get</ref><sp/>()</highlight></codeline>
<codeline lineno="670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_completed_list.empty<sp/>())</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>usbdevfs_urb<sp/>*urb<sp/>=<sp/>d_completed_list.front<sp/>();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>d_completed_list.pop_front<sp/>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>urb;</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/>*<sp/>Submit<sp/>the<sp/>urb.<sp/><sp/>If<sp/>successful<sp/>the<sp/>urb<sp/>ends<sp/>up<sp/>on<sp/>the<sp/>devhandle&apos;s</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/>*<sp/>pending<sp/>list,<sp/>otherwise,<sp/>it&apos;s<sp/>back<sp/>on<sp/>our<sp/>free<sp/>list.</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal">fusb_ephandle_linux::submit_urb<sp/>(usbdevfs_urb<sp/>*urb)</highlight></codeline>
<codeline lineno="685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d_devhandle-&gt;<ref refid="classfusb__devhandle__linux_1ad35214661f5e6fe85a34008e760fa49f" kindref="member">_submit_urb</ref><sp/>(urb)){<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>record<sp/>the<sp/>problem<sp/>somewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;_submit_urb<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle__linux_1a57c578355685f5b86d976c2204f38f36" kindref="member">free_list_add</ref><sp/>(urb);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_linux.cc"/>
  </compounddef>
</doxygen>
