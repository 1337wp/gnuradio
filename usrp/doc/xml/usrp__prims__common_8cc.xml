<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="usrp__prims__common_8cc" kind="file" language="C++">
    <compoundname>usrp_prims_common.cc</compoundname>
    <includes refid="usrp__primsi_8h" local="yes">usrp_primsi.h</includes>
    <includes local="yes">usrp_commands.h</includes>
    <includes local="yes">usrp_ids.h</includes>
    <includes local="yes">usrp_i2c_addr.h</includes>
    <includes local="yes">fpga_regs_common.h</includes>
    <includes local="yes">fpga_regs_standard.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">algorithm</includes>
    <includes refid="ad9862_8h" local="no">ad9862.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="std__paths_8h" local="yes">std_paths.h</includes>
    <includes refid="md5_8h" local="yes">md5.h</includes>
    <incdepgraph>
      <node id="1112">
        <label>md5.h</label>
        <link refid="md5_8h"/>
        <childnode refid="1102" relation="include">
        </childnode>
        <childnode refid="1113" relation="include">
        </childnode>
      </node>
      <node id="1110">
        <label>assert.h</label>
      </node>
      <node id="1100">
        <label>fpga_regs_standard.h</label>
      </node>
      <node id="1093">
        <label>usrp/libusb_types.h</label>
        <link refid="libusb__types_8h"/>
        <childnode refid="1094" relation="include">
        </childnode>
      </node>
      <node id="1104">
        <label>stdlib.h</label>
      </node>
      <node id="1101">
        <label>errno.h</label>
      </node>
      <node id="1092">
        <label>usrp/usrp_slots.h</label>
        <link refid="usrp__slots_8h"/>
      </node>
      <node id="1095">
        <label>string</label>
      </node>
      <node id="1109">
        <label>ad9862.h</label>
        <link refid="ad9862_8h"/>
      </node>
      <node id="1113">
        <label>limits.h</label>
      </node>
      <node id="1105">
        <label>string.h</label>
      </node>
      <node id="1090">
        <label>usrp_primsi.h</label>
        <link refid="usrp__primsi_8h"/>
        <childnode refid="1091" relation="include">
        </childnode>
      </node>
      <node id="1089">
        <label>usrp_prims_common.cc</label>
        <link refid="usrp_prims_common.cc"/>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1096" relation="include">
        </childnode>
        <childnode refid="1097" relation="include">
        </childnode>
        <childnode refid="1098" relation="include">
        </childnode>
        <childnode refid="1099" relation="include">
        </childnode>
        <childnode refid="1100" relation="include">
        </childnode>
        <childnode refid="1101" relation="include">
        </childnode>
        <childnode refid="1102" relation="include">
        </childnode>
        <childnode refid="1103" relation="include">
        </childnode>
        <childnode refid="1104" relation="include">
        </childnode>
        <childnode refid="1105" relation="include">
        </childnode>
        <childnode refid="1106" relation="include">
        </childnode>
        <childnode refid="1107" relation="include">
        </childnode>
        <childnode refid="1108" relation="include">
        </childnode>
        <childnode refid="1109" relation="include">
        </childnode>
        <childnode refid="1110" relation="include">
        </childnode>
        <childnode refid="1111" relation="include">
        </childnode>
        <childnode refid="1112" relation="include">
        </childnode>
      </node>
      <node id="1103">
        <label>unistd.h</label>
      </node>
      <node id="1096">
        <label>usrp_commands.h</label>
      </node>
      <node id="1098">
        <label>usrp_i2c_addr.h</label>
      </node>
      <node id="1107">
        <label>time.h</label>
      </node>
      <node id="1106">
        <label>ctype.h</label>
      </node>
      <node id="1097">
        <label>usrp_ids.h</label>
      </node>
      <node id="1111">
        <label>std_paths.h</label>
        <link refid="std__paths_8h"/>
      </node>
      <node id="1094">
        <label>usb.h</label>
      </node>
      <node id="1099">
        <label>fpga_regs_common.h</label>
      </node>
      <node id="1091">
        <label>usrp/usrp_prims.h</label>
        <link refid="usrp__prims_8h"/>
        <childnode refid="1092" relation="include">
        </childnode>
        <childnode refid="1093" relation="include">
        </childnode>
        <childnode refid="1095" relation="include">
        </childnode>
      </node>
      <node id="1108">
        <label>algorithm</label>
      </node>
      <node id="1102">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="usrp__prims__common_8cc_1a42f8c497a1968074f38bf5055c650dca" prot="public" static="no">
        <name>VERBOSE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="49" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="usrp__prims__common_8cc_1a4e2239b8f5925fec7476cb09e17b08d3" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int FIRMWARE_HASH_SLOT</definition>
        <argsstring></argsstring>
        <name>FIRMWARE_HASH_SLOT</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="53" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="usrp__prims__common_8cc_1a808dd7c5e431f183100c25389f5cdbde" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int FPGA_HASH_SLOT</definition>
        <argsstring></argsstring>
        <name>FPGA_HASH_SLOT</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="54" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="usrp__prims__common_8cc_1ab8c2b63e3e892959ed886d67fef10d22" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int hash_slot_addr[2]</definition>
        <argsstring>[2]</argsstring>
        <name>hash_slot_addr</name>
        <initializer>= {
  USRP_HASH_SLOT_0_ADDR,
  USRP_HASH_SLOT_1_ADDR
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="56" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="usrp__prims__common_8cc_1a67d8314e39e88153c632d3e369f2e52b" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* default_firmware_filename</definition>
        <argsstring></argsstring>
        <name>default_firmware_filename</name>
        <initializer>= &quot;std.ihx&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="61" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="usrp__prims__common_8cc_1a447add070ca6b3e25db658687cb30702" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* default_fpga_filename</definition>
        <argsstring></argsstring>
        <name>default_fpga_filename</name>
        <initializer>= &quot;std_2rxhb_2tx.rbf&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="62" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="usrp__prims__common_8cc_1a797be5bee48ac28a0667dd52c6bf85da" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int EEPROM_PAGESIZE</definition>
        <argsstring></argsstring>
        <name>EEPROM_PAGESIZE</name>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="957" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="957" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="usrp__prims__common_8cc_1a41422534ea79a4554d01791dc164d222" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* find_file</definition>
        <argsstring>(const char *filename, int hw_rev)</argsstring>
        <name>find_file</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hw_rev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="65" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="65" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a4e3c01397673d38f6864c1616923d558" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* get_proto_filename</definition>
        <argsstring>(const std::string user_filename, const char *env_var, const char *def)</argsstring>
        <name>get_proto_filename</name>
        <param>
          <type>const std::string</type>
          <declname>user_filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>env_var</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="88" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="88" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a82d93b85e96f2efa9c1855b8697e6546" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void power_down_9862s</definition>
        <argsstring>(libusb_device_handle *udh)</argsstring>
        <name>power_down_9862s</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="101" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="938" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int usrp_hw_rev</definition>
        <argsstring>(libusb_device *q)</argsstring>
        <name>usrp_hw_rev</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="111" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="111" bodyend="115"/>
        <references refid="usrp__prims__libusb0_8cc_1af38af19bb9cf384e358bb63c9a7204f8" compoundref="usrp__prims__libusb0_8cc" startline="56" endline="59">_get_usb_device_descriptor</references>
        <referencedby refid="usrp__prims__common_8cc_1a4ffbe7a8f1f34c079f4e48dd63d5332b" compoundref="usrp__prims__common_8cc" startline="926" endline="935">usrp_9862_write_many_all</referencedby>
        <referencedby refid="classusrp__basic_1ac72f072eb9220e798019b60b3fe48af6" compoundref="usrp__basic_8cc" startline="102" endline="155">usrp_basic::usrp_basic</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1acc60eeb92cdcb6e0fcf37e1e5857819a" compoundref="usrp__prims__common_8cc" startline="734" endline="794">usrp_load_standard_bits</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a7e80adc49e58e5acb7a69b0458ac7095" compoundref="usrp__prims__common_8cc" startline="503" endline="512">usrp_read_fpga_reg</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a648e709e72577e0551174e2cdc2bc7f8" compoundref="usrp__prims__common_8cc" startline="144" endline="147">usrp_usrp0_p</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad38836dac84e93debba03be7be6c1433" compoundref="usrp__prims__common_8cc" startline="150" endline="153">usrp_usrp1_p</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a419e1f9fc226a5dba5fec58e54c366fe" compoundref="usrp__prims__common_8cc" startline="156" endline="159">usrp_usrp2_p</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1aaef8715cc33a0cd06fb53e76de13d1eb" compoundref="usrp__prims__common_8cc" startline="491" endline="500">usrp_write_fpga_reg</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a3e93758c8d677768c13d207fb1b21030" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _usrp_configured_p</definition>
        <argsstring>(libusb_device *q)</argsstring>
        <name>_usrp_configured_p</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="121" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="121" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_usrp_p</definition>
        <argsstring>(libusb_device *q)</argsstring>
        <name>usrp_usrp_p</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="128" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="128" bodyend="133"/>
        <references refid="usrp__prims__libusb0_8cc_1af38af19bb9cf384e358bb63c9a7204f8" compoundref="usrp__prims__libusb0_8cc" startline="56" endline="59">_get_usb_device_descriptor</references>
        <referencedby refid="classusrp__basic_1ac72f072eb9220e798019b60b3fe48af6" compoundref="usrp__basic_8cc" startline="102" endline="155">usrp_basic::usrp_basic</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad201c17f46cc3d699c106cd1df7a036d" compoundref="usrp__prims__common_8cc" startline="169" endline="172">usrp_configured_usrp_p</referencedby>
        <referencedby refid="usrp__prims__libusb0_8cc_1aed590706e68b022e7767cb37eae0dded" compoundref="usrp__prims__libusb0_8cc" startline="126" endline="148">usrp_find_device</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1af4b1c62ea1cf039186177d614c5b95bb" compoundref="usrp__prims__common_8cc" startline="163" endline="166">usrp_unconfigured_usrp_p</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a648e709e72577e0551174e2cdc2bc7f8" compoundref="usrp__prims__common_8cc" startline="144" endline="147">usrp_usrp0_p</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad38836dac84e93debba03be7be6c1433" compoundref="usrp__prims__common_8cc" startline="150" endline="153">usrp_usrp1_p</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a419e1f9fc226a5dba5fec58e54c366fe" compoundref="usrp__prims__common_8cc" startline="156" endline="159">usrp_usrp2_p</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1afeb7e5fc77067223e229be02e78718ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_fx2_p</definition>
        <argsstring>(libusb_device *q)</argsstring>
        <name>usrp_fx2_p</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="136" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="136" bodyend="141"/>
        <references refid="usrp__prims__libusb0_8cc_1af38af19bb9cf384e358bb63c9a7204f8" compoundref="usrp__prims__libusb0_8cc" startline="56" endline="59">_get_usb_device_descriptor</references>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__libusb0_8cc_1aed590706e68b022e7767cb37eae0dded" compoundref="usrp__prims__libusb0_8cc" startline="126" endline="148">usrp_find_device</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a648e709e72577e0551174e2cdc2bc7f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_usrp0_p</definition>
        <argsstring>(libusb_device *q)</argsstring>
        <name>usrp_usrp0_p</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="144" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="144" bodyend="147"/>
        <references refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" compoundref="usrp__prims__common_8cc" startline="111" endline="115">usrp_hw_rev</references>
        <references refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" compoundref="usrp__prims__common_8cc" startline="128" endline="133">usrp_usrp_p</references>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ad38836dac84e93debba03be7be6c1433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_usrp1_p</definition>
        <argsstring>(libusb_device *q)</argsstring>
        <name>usrp_usrp1_p</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="150" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="150" bodyend="153"/>
        <references refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" compoundref="usrp__prims__common_8cc" startline="111" endline="115">usrp_hw_rev</references>
        <references refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" compoundref="usrp__prims__common_8cc" startline="128" endline="133">usrp_usrp_p</references>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a419e1f9fc226a5dba5fec58e54c366fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_usrp2_p</definition>
        <argsstring>(libusb_device *q)</argsstring>
        <name>usrp_usrp2_p</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="156" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="156" bodyend="159"/>
        <references refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" compoundref="usrp__prims__common_8cc" startline="111" endline="115">usrp_hw_rev</references>
        <references refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" compoundref="usrp__prims__common_8cc" startline="128" endline="133">usrp_usrp_p</references>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1af4b1c62ea1cf039186177d614c5b95bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_unconfigured_usrp_p</definition>
        <argsstring>(libusb_device *q)</argsstring>
        <name>usrp_unconfigured_usrp_p</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="163" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="163" bodyend="166"/>
        <references refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" compoundref="usrp__prims__common_8cc" startline="128" endline="133">usrp_usrp_p</references>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ad201c17f46cc3d699c106cd1df7a036d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_configured_usrp_p</definition>
        <argsstring>(libusb_device *q)</argsstring>
        <name>usrp_configured_usrp_p</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="169" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="169" bodyend="172"/>
        <references refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" compoundref="usrp__prims__common_8cc" startline="128" endline="133">usrp_usrp_p</references>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ac2d83cf2d42d90dec9f28edbd4e5df78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
        <definition>libusb_device_handle* usrp_open_cmd_interface</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>usrp_open_cmd_interface</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>given a libusb_device return an instance of the appropriate libusb_device_handle </para>        </briefdescription>
        <detaileddescription>
<para>These routines claim the specified interface and select the correct alternate interface. (USB nomenclature is totally screwed!)</para><para>If interface can&apos;t be opened, or is already claimed by some other process, 0 is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="179" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="179" bodyend="182"/>
        <references refid="usrp__prims__libusb0_8cc_1a80dcac93d4db26c5f64dc1df7b07b8f9" compoundref="usrp__prims__libusb0_8cc" startline="151" endline="197">usrp_open_interface</references>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a95b32b91b15d143ace5e52b1a6a45170" compoundref="usrp__prims__common_8cc" startline="609" endline="616">usrp_load_fpga</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a8747aae7fe65e85b35e8f6c6d2b25406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
        <definition>libusb_device_handle* usrp_open_rx_interface</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>usrp_open_rx_interface</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="185" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="185" bodyend="188"/>
        <references refid="usrp__prims__libusb0_8cc_1a80dcac93d4db26c5f64dc1df7b07b8f9" compoundref="usrp__prims__libusb0_8cc" startline="151" endline="197">usrp_open_interface</references>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
        <definition>libusb_device_handle* usrp_open_tx_interface</definition>
        <argsstring>(libusb_device *dev)</argsstring>
        <name>usrp_open_tx_interface</name>
        <param>
          <type><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="191" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="191" bodyend="194"/>
        <references refid="usrp__prims__libusb0_8cc_1ac41f970d1a4728b9522763fa78b2b170" compoundref="usrp__prims__libusb0_8cc" startline="77" endline="89">_usb_control_transfer</references>
        <references refid="usrp__prims__libusb0_8cc_1a80dcac93d4db26c5f64dc1df7b07b8f9" compoundref="usrp__prims__libusb0_8cc" startline="151" endline="197">usrp_open_interface</references>
        <references refid="usrp__prims__common_8cc_1a010a01fbc5a1ee5fa8d3692e774aa7f3" compoundref="usrp__prims__common_8cc" startline="515" endline="518">usrp_set_fpga_reset</references>
        <references refid="usrp__prims__common_8cc_1a36a947567043a250ae605dee5eb78bf4" compoundref="usrp__prims__common_8cc" startline="527" endline="530">usrp_set_fpga_rx_enable</references>
        <references refid="usrp__prims__common_8cc_1acb37b3d6745ae54aa7e280187f919787" compoundref="usrp__prims__common_8cc" startline="539" endline="542">usrp_set_fpga_rx_reset</references>
        <references refid="usrp__prims__common_8cc_1afdda6f72700cfeb73b9c3337cc4c7607" compoundref="usrp__prims__common_8cc" startline="521" endline="524">usrp_set_fpga_tx_enable</references>
        <references refid="usrp__prims__common_8cc_1a8dbb4b5a64714763d57d2d269c27b047" compoundref="usrp__prims__common_8cc" startline="533" endline="536">usrp_set_fpga_tx_reset</references>
        <references refid="usrp__prims__common_8cc_1a5a4f5c3849c508f01aee76116c403514" compoundref="usrp__prims__common_8cc" startline="414" endline="427">usrp_set_hash</references>
        <references refid="usrp__prims__common_8cc_1ac856910e04aa0da0a7e1d946a268b7f2" compoundref="usrp__prims__common_8cc" startline="406" endline="411">usrp_set_led</references>
        <references refid="usrp__prims__common_8cc_1aaef8715cc33a0cd06fb53e76de13d1eb" compoundref="usrp__prims__common_8cc" startline="491" endline="500">usrp_write_fpga_reg</references>
        <references refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" compoundref="usrp__prims__libusb0_8cc" startline="212" endline="229">write_cmd</references>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a869e38c170b75972e67021a0899b0d97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool write_internal_ram</definition>
        <argsstring>(libusb_device_handle *udh, unsigned char *buf, int start_addr, size_t len)</argsstring>
        <name>write_internal_ram</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_addr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="201" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="201" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a4dfaff31a331192f13311c236f5760ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool reset_cpu</definition>
        <argsstring>(libusb_device_handle *udh, bool reset_p)</argsstring>
        <name>reset_cpu</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reset_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="230" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="230" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a3777fe25f46ca7f792d624ba9e23c36f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _usrp_load_firmware</definition>
        <argsstring>(libusb_device_handle *udh, const char *filename, unsigned char hash[USRP_HASH_SIZE])</argsstring>
        <name>_usrp_load_firmware</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>hash</declname>
          <array>[USRP_HASH_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="246" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="246" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a5cba843260b06b8f963f3be4190b3865" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _usrp_load_fpga</definition>
        <argsstring>(libusb_device_handle *udh, const char *filename, unsigned char hash[USRP_HASH_SIZE])</argsstring>
        <name>_usrp_load_fpga</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>hash</declname>
          <array>[USRP_HASH_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="328" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="328" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ac856910e04aa0da0a7e1d946a268b7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_set_led</definition>
        <argsstring>(libusb_device_handle *udh, int which, bool on)</argsstring>
        <name>usrp_set_led</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="406" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="406" bodyend="411"/>
        <references refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" compoundref="usrp__prims__libusb0_8cc" startline="212" endline="229">write_cmd</references>
        <referencedby refid="classusrp__basic_1a4585f9c7df7084a6acb29bd6d7950892" compoundref="usrp__basic_8cc" startline="476" endline="479">usrp_basic::_set_led</referencedby>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" compoundref="usrp__prims__common_8cc" startline="191" endline="194">usrp_open_tx_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a5a4f5c3849c508f01aee76116c403514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_set_hash</definition>
        <argsstring>(libusb_device_handle *udh, int which, const unsigned char hash[USRP_HASH_SIZE])</argsstring>
        <name>usrp_set_hash</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>hash</declname>
          <array>[USRP_HASH_SIZE]</array>
        </param>
        <briefdescription>
<para>copy the given <computeroutput>hash</computeroutput> into the USRP hash slot <computeroutput>which</computeroutput>. The usrp implements two hash slots, 0 and 1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="414" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="414" bodyend="427"/>
        <references refid="usrp__prims__libusb0_8cc_1ac41f970d1a4728b9522763fa78b2b170" compoundref="usrp__prims__libusb0_8cc" startline="77" endline="89">_usb_control_transfer</references>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" compoundref="usrp__prims__common_8cc" startline="191" endline="194">usrp_open_tx_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ab78856b82dd0ded8eba5a39b1555a3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_get_hash</definition>
        <argsstring>(libusb_device_handle *udh, int which, unsigned char hash[USRP_HASH_SIZE])</argsstring>
        <name>usrp_get_hash</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>hash</declname>
          <array>[USRP_HASH_SIZE]</array>
        </param>
        <briefdescription>
<para>retrieve the <computeroutput>hash</computeroutput> from the USRP hash slot <computeroutput>which</computeroutput>. The usrp implements two hash slots, 0 and 1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="430" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="430" bodyend="443"/>
        <references refid="usrp__prims__libusb0_8cc_1ac41f970d1a4728b9522763fa78b2b170" compoundref="usrp__prims__libusb0_8cc" startline="77" endline="89">_usb_control_transfer</references>
        <references refid="usrp__prims__common_8cc_1a53e607aa5d7526e5da357ac2ee8d499b" compoundref="usrp__prims__common_8cc" startline="863" endline="874">usrp_spi_read</references>
        <references refid="usrp__prims__common_8cc_1a19684ae63c0ce40110e347152742e898" compoundref="usrp__prims__common_8cc" startline="848" endline="859">usrp_spi_write</references>
        <references refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" compoundref="usrp__prims__libusb0_8cc" startline="212" endline="229">write_cmd</references>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1acb37b3d6745ae54aa7e280187f919787" compoundref="usrp__prims__common_8cc" startline="539" endline="542">usrp_set_fpga_rx_reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a2c687f46874e5d076343e12cff67ecc6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usrp_set_switch</definition>
        <argsstring>(libusb_device_handle *udh, int cmd_byte, bool on)</argsstring>
        <name>usrp_set_switch</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd_byte</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="448" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="448" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1abf0da550bd70a3c05e41dfd1edb00656" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usrp1_fpga_write</definition>
        <argsstring>(libusb_device_handle *udh, int regno, int value)</argsstring>
        <name>usrp1_fpga_write</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>regno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="454" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="454" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a0845fd697d92a71dc780cc5d1fa47aa1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool usrp1_fpga_read</definition>
        <argsstring>(libusb_device_handle *udh, int regno, int *value)</argsstring>
        <name>usrp1_fpga_read</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>regno</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="473" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="473" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1aaef8715cc33a0cd06fb53e76de13d1eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_write_fpga_reg</definition>
        <argsstring>(libusb_device_handle *udh, int reg, int value)</argsstring>
        <name>usrp_write_fpga_reg</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="491" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="491" bodyend="500"/>
        <references refid="usrp__prims__libusb0_8cc_1ab425dbdad132f9c06cad9bac93f36491" compoundref="usrp__prims__libusb0_8cc" startline="50" endline="53">_get_usb_device</references>
        <references refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" compoundref="usrp__prims__common_8cc" startline="111" endline="115">usrp_hw_rev</references>
        <referencedby refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" compoundref="usrp__basic_8cc" startline="380" endline="391">usrp_basic::_write_fpga_reg</referencedby>
        <referencedby refid="classusrp__basic_1a0c200dc2d39d68d7a77e92859c5228a0" compoundref="usrp__basic_8cc" startline="394" endline="407">usrp_basic::_write_fpga_reg_masked</referencedby>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" compoundref="usrp__prims__common_8cc" startline="191" endline="194">usrp_open_tx_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a7e80adc49e58e5acb7a69b0458ac7095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_read_fpga_reg</definition>
        <argsstring>(libusb_device_handle *udh, int reg, int *value)</argsstring>
        <name>usrp_read_fpga_reg</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="503" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="503" bodyend="512"/>
        <references refid="usrp__prims__libusb0_8cc_1ab425dbdad132f9c06cad9bac93f36491" compoundref="usrp__prims__libusb0_8cc" startline="50" endline="53">_get_usb_device</references>
        <references refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" compoundref="usrp__prims__common_8cc" startline="111" endline="115">usrp_hw_rev</references>
        <referencedby refid="classusrp__basic_1a4fa26bd8164bd5782adf7fbe00b3d411" compoundref="usrp__basic_8cc" startline="411" endline="414">usrp_basic::_read_fpga_reg</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a010a01fbc5a1ee5fa8d3692e774aa7f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_set_fpga_reset</definition>
        <argsstring>(libusb_device_handle *udh, bool on)</argsstring>
        <name>usrp_set_fpga_reset</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="515" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="515" bodyend="518"/>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" compoundref="usrp__prims__common_8cc" startline="191" endline="194">usrp_open_tx_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1afdda6f72700cfeb73b9c3337cc4c7607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_set_fpga_tx_enable</definition>
        <argsstring>(libusb_device_handle *udh, bool on)</argsstring>
        <name>usrp_set_fpga_tx_enable</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="521" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="521" bodyend="524"/>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="classusrp__basic__tx_1a13148a03a6d6df2be95679bc2bbea896" compoundref="usrp__basic_8cc" startline="1367" endline="1372">usrp_basic_tx::set_tx_enable</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" compoundref="usrp__prims__common_8cc" startline="191" endline="194">usrp_open_tx_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a36a947567043a250ae605dee5eb78bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_set_fpga_rx_enable</definition>
        <argsstring>(libusb_device_handle *udh, bool on)</argsstring>
        <name>usrp_set_fpga_rx_enable</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="527" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="527" bodyend="530"/>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="classusrp__basic__rx_1a14fa02bdeea1bc11d5611b879dae5405" compoundref="usrp__basic_8cc" startline="961" endline="965">usrp_basic_rx::set_rx_enable</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" compoundref="usrp__prims__common_8cc" startline="191" endline="194">usrp_open_tx_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a8dbb4b5a64714763d57d2d269c27b047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_set_fpga_tx_reset</definition>
        <argsstring>(libusb_device_handle *udh, bool on)</argsstring>
        <name>usrp_set_fpga_tx_reset</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="533" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="533" bodyend="536"/>
        <referencedby refid="classusrp__basic__tx_1ab8bb942f1c956624553ac18b0a838bd6" compoundref="usrp__basic_8cc" startline="1171" endline="1227">usrp_basic_tx::usrp_basic_tx</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" compoundref="usrp__prims__common_8cc" startline="191" endline="194">usrp_open_tx_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1acb37b3d6745ae54aa7e280187f919787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_set_fpga_rx_reset</definition>
        <argsstring>(libusb_device_handle *udh, bool on)</argsstring>
        <name>usrp_set_fpga_rx_reset</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="539" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="539" bodyend="542"/>
        <references refid="md5_8h_1a59105467b3fc9dc939e92f16836341b4">md5_stream</references>
        <references refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a6d74db49055b241d7d030a8dbaf46f42" compoundref="usrp__prims_8h" startline="34">ULS_ALREADY_LOADED</references>
        <references refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" compoundref="usrp__prims_8h" startline="34">ULS_ERROR</references>
        <references refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2ad0f9fbcbeef4760445bc66d20339957a" compoundref="usrp__prims_8h" startline="34">ULS_OK</references>
        <references refid="usrp__prims__common_8cc_1ab78856b82dd0ded8eba5a39b1555a3b6" compoundref="usrp__prims__common_8cc" startline="430" endline="443">usrp_get_hash</references>
        <referencedby refid="classusrp__basic__rx_1acbda9587edf161df5aa2c504e42096ff" compoundref="usrp__basic_8cc" startline="765" endline="824">usrp_basic_rx::usrp_basic_rx</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" compoundref="usrp__prims__common_8cc" startline="191" endline="194">usrp_open_tx_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a59c154044085d1eb6c31a99aa77f0d99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool compute_hash</definition>
        <argsstring>(const char *filename, unsigned char hash[USRP_HASH_SIZE])</argsstring>
        <name>compute_hash</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>hash</declname>
          <array>[USRP_HASH_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="549" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="549" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1aa5711c990ec5faaccba4e5596cbe3b7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref></type>
        <definition>static usrp_load_status_t usrp_conditionally_load_something</definition>
        <argsstring>(libusb_device_handle *udh, const char *filename, bool force, int slot, bool loader(libusb_device_handle *, const char *, unsigned char[USRP_HASH_SIZE]))</argsstring>
        <name>usrp_conditionally_load_something</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>bool </type>
          <declname>loader</declname>
          <array>libusb_device_handle *, const char *, unsigned char[USRP_HASH_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="566" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="566" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a2b4f03982b4e0e78095bb51e7e48eb5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref></type>
        <definition>usrp_load_status_t usrp_load_firmware</definition>
        <argsstring>(libusb_device_handle *udh, const char *filename, bool force)</argsstring>
        <name>usrp_load_firmware</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>load intel hex format file into USRP/Cypress FX2 (8051). </para>        </briefdescription>
        <detaileddescription>
<para>The filename extension is typically *.ihx</para><para>Note that loading firmware may cause the device to renumerate. I.e., change its configuration, invalidating the current device handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="599" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="599" bodyend="606"/>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ade1cc92ee674cec5291c42dc701eca05" compoundref="usrp__prims__common_8cc" startline="671" endline="708">usrp_load_firmware_nth</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a95b32b91b15d143ace5e52b1a6a45170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref></type>
        <definition>usrp_load_status_t usrp_load_fpga</definition>
        <argsstring>(libusb_device_handle *udh, const char *filename, bool force)</argsstring>
        <name>usrp_load_fpga</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>load fpga configuration bitstream </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="609" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="609" bodyend="616"/>
        <references refid="usrp__prims_8h_1a91bc9c618e75323cfb96673a135269a9" compoundref="usrp__prims__libusb0_8cc" startline="126" endline="148">usrp_find_device</references>
        <references refid="usrp__prims__common_8cc_1ac2d83cf2d42d90dec9f28edbd4e5df78" compoundref="usrp__prims__common_8cc" startline="179" endline="182">usrp_open_cmd_interface</references>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1acc60eeb92cdcb6e0fcf37e1e5857819a" compoundref="usrp__prims__common_8cc" startline="734" endline="794">usrp_load_standard_bits</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1aba48b473c799e99d90c782d692c0f692" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
        <definition>static libusb_device_handle* open_nth_cmd_interface</definition>
        <argsstring>(int nth, libusb_context *ctx)</argsstring>
        <name>open_nth_cmd_interface</name>
        <param>
          <type>int</type>
          <declname>nth</declname>
        </param>
        <param>
          <type>libusb_context *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="619" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="619" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1af6bf2fe605ce6bdb74aef4169936828e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool our_nanosleep</definition>
        <argsstring>(const struct timespec *delay)</argsstring>
        <name>our_nanosleep</name>
        <param>
          <type>const struct timespec *</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="642" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="642" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a758b5150ee8cd5564637c7a7506142b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool mdelay</definition>
        <argsstring>(int millisecs)</argsstring>
        <name>mdelay</name>
        <param>
          <type>int</type>
          <declname>millisecs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="661" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="661" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ade1cc92ee674cec5291c42dc701eca05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref></type>
        <definition>usrp_load_status_t usrp_load_firmware_nth</definition>
        <argsstring>(int nth, const char *filename, bool force, libusb_context *ctx)</argsstring>
        <name>usrp_load_firmware_nth</name>
        <param>
          <type>int</type>
          <declname>nth</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
        </param>
        <param>
          <type>libusb_context *</type>
          <declname>ctx</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>load intel hex format file into USRP FX2 (8051). </para>        </briefdescription>
        <detaileddescription>
<para>The filename extension is typically *.ihx</para><para>Note that loading firmware may cause the device to renumerate. I.e., change its configuration, invalidating the current device handle. If the result is ULS_OK, usrp_load_firmware_nth delays 1 second then rescans the busses and devices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="671" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="671" bodyend="708"/>
        <references refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a6d74db49055b241d7d030a8dbaf46f42" compoundref="usrp__prims_8h" startline="34">ULS_ALREADY_LOADED</references>
        <references refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" compoundref="usrp__prims_8h" startline="34">ULS_ERROR</references>
        <references refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2ad0f9fbcbeef4760445bc66d20339957a" compoundref="usrp__prims_8h" startline="34">ULS_OK</references>
        <references refid="usrp__prims_8h_1a5b0fcfee6e1328858c7927d386d0c92a" compoundref="usrp__prims__libusb0_8cc" startline="200" endline="204">usrp_close_interface</references>
        <references refid="usrp__prims__common_8cc_1a2b4f03982b4e0e78095bb51e7e48eb5b" compoundref="usrp__prims__common_8cc" startline="599" endline="606">usrp_load_firmware</references>
        <references refid="usrp__prims_8h_1a0b59ad04d1bc23fb5a070983f60572bf" compoundref="usrp__prims__libusb0_8cc" startline="115" endline="119">usrp_rescan</references>
        <referencedby refid="usrp__prims__common_8cc_1acc60eeb92cdcb6e0fcf37e1e5857819a" compoundref="usrp__prims__common_8cc" startline="734" endline="794">usrp_load_standard_bits</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a4b5708e37519e7f1f2a003e97ccffb4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void load_status_msg</definition>
        <argsstring>(usrp_load_status_t s, const char *type, const char *filename)</argsstring>
        <name>load_status_msg</name>
        <param>
          <type><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="711" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="711" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1acc60eeb92cdcb6e0fcf37e1e5857819a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_load_standard_bits</definition>
        <argsstring>(int nth, bool force, const std::string fpga_filename, const std::string firmware_filename, libusb_context *ctx)</argsstring>
        <name>usrp_load_standard_bits</name>
        <param>
          <type>int</type>
          <declname>nth</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>fpga_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string</type>
          <declname>firmware_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>libusb_context *</type>
          <declname>ctx</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>load the regular firmware and fpga bitstream in the Nth USRP. </para>        </briefdescription>
        <detaileddescription>
<para>This is the normal starting point... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="734" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="734" bodyend="794"/>
        <references refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" compoundref="usrp__prims_8h" startline="34">ULS_ERROR</references>
        <references refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2ad0f9fbcbeef4760445bc66d20339957a" compoundref="usrp__prims_8h" startline="34">ULS_OK</references>
        <references refid="usrp__prims_8h_1a5b0fcfee6e1328858c7927d386d0c92a" compoundref="usrp__prims__libusb0_8cc" startline="200" endline="204">usrp_close_interface</references>
        <references refid="usrp__prims_8h_1a91bc9c618e75323cfb96673a135269a9" compoundref="usrp__prims__libusb0_8cc" startline="126" endline="148">usrp_find_device</references>
        <references refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" compoundref="usrp__prims__common_8cc" startline="111" endline="115">usrp_hw_rev</references>
        <references refid="usrp__prims__common_8cc_1ade1cc92ee674cec5291c42dc701eca05" compoundref="usrp__prims__common_8cc" startline="671" endline="708">usrp_load_firmware_nth</references>
        <references refid="usrp__prims__common_8cc_1a95b32b91b15d143ace5e52b1a6a45170" compoundref="usrp__prims__common_8cc" startline="609" endline="616">usrp_load_fpga</references>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="classusrp__basic_1ac72f072eb9220e798019b60b3fe48af6" compoundref="usrp__basic_8cc" startline="102" endline="155">usrp_basic::usrp_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1aa35770eefda58f0190190c3191bf10aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _usrp_get_status</definition>
        <argsstring>(libusb_device_handle *udh, int which, bool *trouble)</argsstring>
        <name>_usrp_get_status</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>trouble</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="798" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="798" bodyend="809"/>
        <references refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" compoundref="usrp__prims__libusb0_8cc" startline="212" endline="229">write_cmd</references>
        <referencedby refid="usrp__prims__common_8cc_1a158c774c3d49b0e4f12e29609ed94a33" compoundref="usrp__prims__common_8cc" startline="812" endline="815">usrp_check_rx_overrun</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ac901040cfe8868bf16bcb970454055a2" compoundref="usrp__prims__common_8cc" startline="818" endline="821">usrp_check_tx_underrun</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a158c774c3d49b0e4f12e29609ed94a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_check_rx_overrun</definition>
        <argsstring>(libusb_device_handle *udh, bool *overrun_p)</argsstring>
        <name>usrp_check_rx_overrun</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>overrun_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="812" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="812" bodyend="815"/>
        <references refid="usrp__prims__common_8cc_1aa35770eefda58f0190190c3191bf10aa" compoundref="usrp__prims__common_8cc" startline="798" endline="809">_usrp_get_status</references>
        <referencedby refid="classusrp__basic__rx_1ac339662f98db1292b636baf9f2db3d0a" compoundref="usrp__basic_8cc" startline="923" endline="958">usrp_basic_rx::read</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ac901040cfe8868bf16bcb970454055a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_check_tx_underrun</definition>
        <argsstring>(libusb_device_handle *udh, bool *underrun_p)</argsstring>
        <name>usrp_check_tx_underrun</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>underrun_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="818" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="818" bodyend="821"/>
        <references refid="usrp__prims__common_8cc_1aa35770eefda58f0190190c3191bf10aa" compoundref="usrp__prims__common_8cc" startline="798" endline="809">_usrp_get_status</references>
        <referencedby refid="classusrp__basic__tx_1a0dd15899a23869336f455fa948b725af" compoundref="usrp__basic_8cc" startline="1323" endline="1358">usrp_basic_tx::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a9b367498154b59e4b03fd3d4677734cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_i2c_write</definition>
        <argsstring>(libusb_device_handle *udh, int i2c_addr, const void *buf, int len)</argsstring>
        <name>usrp_i2c_write</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i2c_addr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="825" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="825" bodyend="833"/>
        <references refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" compoundref="usrp__prims__libusb0_8cc" startline="212" endline="229">write_cmd</references>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1afe37e9b1905cf7dc986c6c992d5f35a0" compoundref="usrp__prims__common_8cc" startline="985" endline="1006">usrp_eeprom_read</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a452984e181f220c9ed68f0f93d9831ee" compoundref="usrp__prims__common_8cc" startline="960" endline="982">usrp_eeprom_write</referencedby>
        <referencedby refid="classusrp__basic_1a664e5aa3a3fb8a4c50b752906fcb79a0" compoundref="usrp__basic_8cc" startline="278" endline="281">usrp_basic::write_i2c</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a67b5af6739c0f41abeae074d2d9821cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_i2c_read</definition>
        <argsstring>(libusb_device_handle *udh, int i2c_addr, void *buf, int len)</argsstring>
        <name>usrp_i2c_read</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i2c_addr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="837" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="837" bodyend="845"/>
        <references refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" compoundref="usrp__prims__libusb0_8cc" startline="212" endline="229">write_cmd</references>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="classusrp__basic_1ab284caa2e15464f62aa80ad1f540ecc5" compoundref="usrp__basic_8cc" startline="284" endline="295">usrp_basic::read_i2c</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1afe37e9b1905cf7dc986c6c992d5f35a0" compoundref="usrp__prims__common_8cc" startline="985" endline="1006">usrp_eeprom_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a19684ae63c0ce40110e347152742e898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_spi_write</definition>
        <argsstring>(libusb_device_handle *udh, int optional_header, int enables, int format, const void *buf, int len)</argsstring>
        <name>usrp_spi_write</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optional_header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enables</declname>
        </param>
        <param>
          <type>int</type>
          <declname>format</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="848" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="848" bodyend="859"/>
        <references refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" compoundref="usrp__prims__libusb0_8cc" startline="212" endline="229">write_cmd</references>
        <referencedby refid="classusrp__basic_1aaf100fafc406ef75faafcf3e38df7849" compoundref="usrp__basic_8cc" startline="454" endline="458">usrp_basic::_write_spi</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" compoundref="usrp__prims__common_8cc" startline="877" endline="892">usrp_9862_write</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ab78856b82dd0ded8eba5a39b1555a3b6" compoundref="usrp__prims__common_8cc" startline="430" endline="443">usrp_get_hash</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a53e607aa5d7526e5da357ac2ee8d499b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_spi_read</definition>
        <argsstring>(libusb_device_handle *udh, int optional_header, int enables, int format, void *buf, int len)</argsstring>
        <name>usrp_spi_read</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optional_header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enables</declname>
        </param>
        <param>
          <type>int</type>
          <declname>format</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="863" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="863" bodyend="874"/>
        <references refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" compoundref="usrp__prims__libusb0_8cc" startline="212" endline="229">write_cmd</references>
        <referencedby refid="classusrp__basic_1a9b54622fec87c2ed9c7808078931371f" compoundref="usrp__basic_8cc" startline="461" endline="472">usrp_basic::_read_spi</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ab68e752026fa29aab0b24b31d440cbe3" compoundref="usrp__prims__common_8cc" startline="895" endline="902">usrp_9862_read</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ab78856b82dd0ded8eba5a39b1555a3b6" compoundref="usrp__prims__common_8cc" startline="430" endline="443">usrp_get_hash</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_9862_write</definition>
        <argsstring>(libusb_device_handle *udh, int which_codec, int regno, int value)</argsstring>
        <name>usrp_9862_write</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which_codec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>regno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="877" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="877" bodyend="892"/>
        <references refid="usrp__prims__common_8cc_1a19684ae63c0ce40110e347152742e898" compoundref="usrp__prims__common_8cc" startline="848" endline="859">usrp_spi_write</references>
        <referencedby refid="classusrp__basic_1a8a25444c83f59f7517d0ff687d2ff053" compoundref="usrp__basic_8cc" startline="426" endline="435">usrp_basic::_write_9862</referencedby>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1ace9c2bd3a87d1240b113db682dbcef09" compoundref="usrp__prims__common_8cc" startline="905" endline="922">usrp_9862_write_many</referencedby>
        <referencedby refid="classusrp__basic__rx_1acbda9587edf161df5aa2c504e42096ff" compoundref="usrp__basic_8cc" startline="765" endline="824">usrp_basic_rx::usrp_basic_rx</referencedby>
        <referencedby refid="classusrp__basic__tx_1ab8bb942f1c956624553ac18b0a838bd6" compoundref="usrp__basic_8cc" startline="1171" endline="1227">usrp_basic_tx::usrp_basic_tx</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a0c6f8c0f7a46bc4fe82029657d6f9be6" compoundref="usrp__prims__common_8cc" startline="1078" endline="1131">usrp_read_aux_adc</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a7b72a73c7153003a42f713aebd41e0ab" compoundref="usrp__prims__common_8cc" startline="1047" endline="1074">usrp_write_aux_dac</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ab68e752026fa29aab0b24b31d440cbe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_9862_read</definition>
        <argsstring>(libusb_device_handle *udh, int which_codec, int regno, unsigned char *value)</argsstring>
        <name>usrp_9862_read</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which_codec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>regno</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="895" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="895" bodyend="902"/>
        <references refid="usrp__prims__common_8cc_1a53e607aa5d7526e5da357ac2ee8d499b" compoundref="usrp__prims__common_8cc" startline="863" endline="874">usrp_spi_read</references>
        <referencedby refid="classusrp__basic_1a3814dc28edce07e3b5cb48bb3ebdf244" compoundref="usrp__basic_8cc" startline="439" endline="442">usrp_basic::_read_9862</referencedby>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a0c6f8c0f7a46bc4fe82029657d6f9be6" compoundref="usrp__prims__common_8cc" startline="1078" endline="1131">usrp_read_aux_adc</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ace9c2bd3a87d1240b113db682dbcef09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_9862_write_many</definition>
        <argsstring>(libusb_device_handle *udh, int which_codec, const unsigned char *buf, int len)</argsstring>
        <name>usrp_9862_write_many</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which_codec</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write multiple 9862 regs at once. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>buf</computeroutput> contains alternating register_number, register_value pairs. <computeroutput>len</computeroutput> must be even and is the length of buf in bytes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="905" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="905" bodyend="922"/>
        <references refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" compoundref="usrp__prims__common_8cc" startline="877" endline="892">usrp_9862_write</references>
        <referencedby refid="usrp__prims__common_8cc_1a4ffbe7a8f1f34c079f4e48dd63d5332b" compoundref="usrp__prims__common_8cc" startline="926" endline="935">usrp_9862_write_many_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a4ffbe7a8f1f34c079f4e48dd63d5332b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_9862_write_many_all</definition>
        <argsstring>(libusb_device_handle *udh, const unsigned char *buf, int len)</argsstring>
        <name>usrp_9862_write_many_all</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>write specified regs to all 9862&apos;s in the system </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="926" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="926" bodyend="935"/>
        <references refid="usrp__prims__libusb0_8cc_1ab425dbdad132f9c06cad9bac93f36491" compoundref="usrp__prims__libusb0_8cc" startline="50" endline="53">_get_usb_device</references>
        <references refid="ad9862_8h_1aa0fcba5d524230a122c57078342ad852" compoundref="ad9862_8h" startline="37">REG_RX_PWR_DN</references>
        <references refid="ad9862_8h_1ad5c63f9d7a28affa5c98fb7249a471e5" compoundref="ad9862_8h" startline="120">REG_TX_MODULATOR</references>
        <references refid="ad9862_8h_1a1c81d40cf59f1207a2e424977e580d07" compoundref="ad9862_8h" startline="72">REG_TX_PWR_DN</references>
        <references refid="usrp__prims__common_8cc_1ace9c2bd3a87d1240b113db682dbcef09" compoundref="usrp__prims__common_8cc" startline="905" endline="922">usrp_9862_write_many</references>
        <references refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" compoundref="usrp__prims__common_8cc" startline="111" endline="115">usrp_hw_rev</references>
        <referencedby refid="classusrp__basic_1ac72f072eb9220e798019b60b3fe48af6" compoundref="usrp__basic_8cc" startline="102" endline="155">usrp_basic::usrp_basic</referencedby>
        <referencedby refid="classusrp__basic__rx_1acbda9587edf161df5aa2c504e42096ff" compoundref="usrp__basic_8cc" startline="765" endline="824">usrp_basic_rx::usrp_basic_rx</referencedby>
        <referencedby refid="classusrp__basic__tx_1ab8bb942f1c956624553ac18b0a838bd6" compoundref="usrp__basic_8cc" startline="1171" endline="1227">usrp_basic_tx::usrp_basic_tx</referencedby>
        <referencedby refid="classusrp__standard__tx_1ab3ebe65a0203867b6c71edcf2d4ffb88" compoundref="usrp__standard_8cc" startline="812" endline="846">usrp_standard_tx::usrp_standard_tx</referencedby>
        <referencedby refid="classusrp__basic__rx_1ae50eef2481209ecaa7eb73bfd0cb513d" compoundref="usrp__basic_8cc" startline="830" endline="845">usrp_basic_rx::~usrp_basic_rx</referencedby>
        <referencedby refid="classusrp__basic__tx_1a1742407fda891ebf3eea8f297310e455" compoundref="usrp__basic_8cc" startline="1237" endline="1248">usrp_basic_tx::~usrp_basic_tx</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a452984e181f220c9ed68f0f93d9831ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_eeprom_write</definition>
        <argsstring>(libusb_device_handle *udh, int i2c_addr, int eeprom_offset, const void *buf, int len)</argsstring>
        <name>usrp_eeprom_write</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i2c_addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eeprom_offset</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="960" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="960" bodyend="982"/>
        <references refid="usrp__prims__common_8cc_1a9b367498154b59e4b03fd3d4677734cb" compoundref="usrp__prims__common_8cc" startline="825" endline="833">usrp_i2c_write</references>
        <referencedby refid="usrp__prims__common_8cc_1a36dee270c322aa161718efe0008e79bd" compoundref="usrp__prims__common_8cc" startline="1201" endline="1218">usrp_write_dboard_offsets</referencedby>
        <referencedby refid="classusrp__basic_1a3900d37e951b83c938669f5fa0255866" compoundref="usrp__basic_8cc" startline="258" endline="261">usrp_basic::write_eeprom</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1afe37e9b1905cf7dc986c6c992d5f35a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_eeprom_read</definition>
        <argsstring>(libusb_device_handle *udh, int i2c_addr, int eeprom_offset, void *buf, int len)</argsstring>
        <name>usrp_eeprom_read</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i2c_addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eeprom_offset</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="985" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="985" bodyend="1006"/>
        <references refid="usrp__prims__common_8cc_1a67b5af6739c0f41abeae074d2d9821cc" compoundref="usrp__prims__common_8cc" startline="837" endline="845">usrp_i2c_read</references>
        <references refid="usrp__prims__common_8cc_1a9b367498154b59e4b03fd3d4677734cb" compoundref="usrp__prims__common_8cc" startline="825" endline="833">usrp_i2c_write</references>
        <referencedby refid="classusrp__basic_1aefe7a2f10626831304091babff21dc0d" compoundref="usrp__basic_8cc" startline="264" endline="275">usrp_basic::read_eeprom</referencedby>
        <referencedby refid="usrp__prims__common_8cc_1a0c6f8c0f7a46bc4fe82029657d6f9be6" compoundref="usrp__prims__common_8cc" startline="1078" endline="1131">usrp_read_aux_adc</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a9b2a6f6d952871bf6cac0945598895ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool slot_to_codec</definition>
        <argsstring>(int slot, int *which_codec)</argsstring>
        <name>slot_to_codec</name>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>which_codec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1011" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1011" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a793a015fcfe1174f31f21de06c47011d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tx_slot_p</definition>
        <argsstring>(int slot)</argsstring>
        <name>tx_slot_p</name>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1034" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1034" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a7b72a73c7153003a42f713aebd41e0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_write_aux_dac</definition>
        <argsstring>(libusb_device_handle *udh, int slot, int which_dac, int value)</argsstring>
        <name>usrp_write_aux_dac</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>uhd</declname>
          <defname>udh</defname>
        </param>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which_dac</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>write to the specified aux dac. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>slot:</computeroutput> which Tx or Rx slot to write. N.B., SLOT_TX_A and SLOT_RX_A share the same AUX DAC&apos;s SLOT_TX_B and SLOT_RX_B share the same AUX DAC&apos;s</para><para><computeroutput>which_dac:</computeroutput> [0,3] RX slots must use only 0 and 1. TX slots must use only 2 and 3.</para><para>AUX DAC 3 is really the 9862 sigma delta output.</para><para><computeroutput>value</computeroutput> to write to aux dac. All dacs take straight binary values. Although dacs 0, 1 and 2 are 8-bit and dac 3 is 12-bit, the interface is in terms of 12-bit values [0,4095] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1047" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1047" bodyend="1074"/>
        <references refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" compoundref="usrp__prims__common_8cc" startline="877" endline="892">usrp_9862_write</references>
        <referencedby refid="classusrp__basic_1ab8870a35e0bdc63ee6655b5264a6d142" compoundref="usrp__basic_8cc" startline="236" endline="239">usrp_basic::_write_aux_dac</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a0c6f8c0f7a46bc4fe82029657d6f9be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_read_aux_adc</definition>
        <argsstring>(libusb_device_handle *udh, int slot, int which_adc, int *value)</argsstring>
        <name>usrp_read_aux_adc</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which_adc</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Read the specified aux adc. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>slot:</computeroutput> which Tx or Rx slot to read aux dac <computeroutput>which_adc:</computeroutput> [0,1] which of the two adcs to read <computeroutput>*value</computeroutput>: return value, 12-bit straight binary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1078" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1078" bodyend="1131"/>
        <references refid="ad9862_8h_1ac7e81b33a9d26b7248ee7d5c0a4700b6" compoundref="ad9862_8h" startline="174">AUX_ADC_CTRL_REFSEL_A</references>
        <references refid="ad9862_8h_1a5c3311e371cb2ff4e5eb3137daa0ff6c" compoundref="ad9862_8h" startline="170">AUX_ADC_CTRL_REFSEL_B</references>
        <references refid="ad9862_8h_1a0863c65a4aa73780b235e6f93be9aa7f" compoundref="ad9862_8h" startline="176">AUX_ADC_CTRL_SELECT_A1</references>
        <references refid="ad9862_8h_1a1d9799086c81500879a53a84d777996b" compoundref="ad9862_8h" startline="175">AUX_ADC_CTRL_SELECT_A2</references>
        <references refid="ad9862_8h_1a1c93d1ea3bc4295612dca1330b54fb0b" compoundref="ad9862_8h" startline="172">AUX_ADC_CTRL_SELECT_B1</references>
        <references refid="ad9862_8h_1a495d6e812cfa7f22a4af3f28f06f70d9" compoundref="ad9862_8h" startline="171">AUX_ADC_CTRL_SELECT_B2</references>
        <references refid="ad9862_8h_1a037e1c02a0021f34bfd57f4054269acf" compoundref="ad9862_8h" startline="177">AUX_ADC_CTRL_START_A</references>
        <references refid="ad9862_8h_1a15db6e983d54bb708d9a69610e595af0" compoundref="ad9862_8h" startline="173">AUX_ADC_CTRL_START_B</references>
        <references refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319ad40e7b8cbbd8ffbac091eaf5a3d5f800" compoundref="usrp__prims_8h" startline="277">UDBE_BAD_SLOT</references>
        <references refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a065b565a87b98cdb159a36fdbbbdc4a3" compoundref="usrp__prims_8h" startline="277">UDBE_INVALID_EEPROM</references>
        <references refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a52291acb7ae7f8b6ca4cc43a2a0c1444" compoundref="usrp__prims_8h" startline="277">UDBE_NO_EEPROM</references>
        <references refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a4511bf9a250718650f856819ec07132a" compoundref="usrp__prims_8h" startline="277">UDBE_OK</references>
        <references refid="usrp__prims__common_8cc_1ab68e752026fa29aab0b24b31d440cbe3" compoundref="usrp__prims__common_8cc" startline="895" endline="902">usrp_9862_read</references>
        <references refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" compoundref="usrp__prims__common_8cc" startline="877" endline="892">usrp_9862_write</references>
        <references refid="usrp__prims__common_8cc_1afe37e9b1905cf7dc986c6c992d5f35a0" compoundref="usrp__prims__common_8cc" startline="985" endline="1006">usrp_eeprom_read</references>
        <referencedby refid="classusrp__basic_1a8f92d2e9630ec614eedc61858756cce1" compoundref="usrp__basic_8cc" startline="242" endline="245">usrp_basic::_read_aux_adc</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1aef60494c27e0aec8e45fd2fab5e2480f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int slot_to_i2c_addr</definition>
        <argsstring>(int slot)</argsstring>
        <name>slot_to_i2c_addr</name>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1135" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1135" bodyend="1144"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a46d3b10e715bf8e37a844a92cc933f6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_chksum</definition>
        <argsstring>(unsigned char *buf)</argsstring>
        <name>set_chksum</name>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1147" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1147" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a3ede83f81e404f9c9f230dd907b0ef43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319" kindref="member">usrp_dbeeprom_status_t</ref></type>
        <definition>static usrp_dbeeprom_status_t read_dboard_eeprom</definition>
        <argsstring>(libusb_device_handle *udh, int slot_id, unsigned char *buf)</argsstring>
        <name>read_dboard_eeprom</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot_id</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1157" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1157" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a2bc4729b18234e966aadf42d50b882d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319" kindref="member">usrp_dbeeprom_status_t</ref></type>
        <definition>usrp_dbeeprom_status_t usrp_read_dboard_eeprom</definition>
        <argsstring>(libusb_device_handle *udh, int slot_id, usrp_dboard_eeprom *eeprom)</argsstring>
        <name>usrp_read_dboard_eeprom</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot_id</declname>
        </param>
        <param>
          <type><ref refid="structusrp__dboard__eeprom" kindref="compound">usrp_dboard_eeprom</ref> *</type>
          <declname>eeprom</declname>
        </param>
        <briefdescription>
<para>Read and return parsed daughterboard eeprom. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1181" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1181" bodyend="1198"/>
        <references refid="structusrp__dboard__eeprom_1abb084f9acf442d8b439c8e13479d0618" compoundref="usrp__prims_8h" startline="280">usrp_dboard_eeprom::id</references>
        <references refid="structusrp__dboard__eeprom_1a644392481788aabc0226af00d4371124" compoundref="usrp__prims_8h" startline="281">usrp_dboard_eeprom::oe</references>
        <references refid="structusrp__dboard__eeprom_1a55332624480ff6273a9910686286fab1" compoundref="usrp__prims_8h" startline="283">usrp_dboard_eeprom::offset</references>
        <references refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a4511bf9a250718650f856819ec07132a" compoundref="usrp__prims_8h" startline="277">UDBE_OK</references>
        <referencedby refid="classusrp__basic__rx_1a9edf0c0a2aeab58f7f12483a02dd14ee" compoundref="usrp__basic_8cc" startline="986" endline="1031">usrp_basic_rx::probe_rx_slots</referencedby>
        <referencedby refid="classusrp__basic__tx_1ac9e8934cb2136fd9c1f0bb2677991df0" compoundref="usrp__basic_8cc" startline="1393" endline="1438">usrp_basic_tx::probe_tx_slots</referencedby>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1a36dee270c322aa161718efe0008e79bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_write_dboard_offsets</definition>
        <argsstring>(libusb_device_handle *udh, int slot_id, short offset0, short offset1)</argsstring>
        <name>usrp_write_dboard_offsets</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slot_id</declname>
        </param>
        <param>
          <type>short</type>
          <declname>offset0</declname>
        </param>
        <param>
          <type>short</type>
          <declname>offset1</declname>
        </param>
        <briefdescription>
<para>write ADC/DAC offset calibration constants to d&apos;board eeprom </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1201" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1201" bodyend="1218"/>
        <references refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a4511bf9a250718650f856819ec07132a" compoundref="usrp__prims_8h" startline="277">UDBE_OK</references>
        <references refid="usrp__prims__common_8cc_1a452984e181f220c9ed68f0f93d9831ee" compoundref="usrp__prims__common_8cc" startline="960" endline="982">usrp_eeprom_write</references>
      </memberdef>
      <memberdef kind="function" id="usrp__prims__common_8cc_1ae687fb1de69502d465285db77cfe3830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string usrp_serial_number</definition>
        <argsstring>(libusb_device_handle *udh)</argsstring>
        <name>usrp_serial_number</name>
        <param>
          <type><ref refid="libusb__types_8h_1a7d5bb463830eeed919dfb59dc54eeb2b" kindref="member">libusb_device_handle</ref> *</type>
          <declname>udh</declname>
        </param>
        <briefdescription>
<para>return a usrp&apos;s serial number. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this only works on a configured usrp. <simplesect kind="return"><para>non-zero length string iff successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" line="1223" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc" bodystart="1223" bodyend="1237"/>
        <references refid="usrp__prims__libusb0_8cc_1ab425dbdad132f9c06cad9bac93f36491" compoundref="usrp__prims__libusb0_8cc" startline="50" endline="53">_get_usb_device</references>
        <references refid="usrp__prims__libusb0_8cc_1af38af19bb9cf384e358bb63c9a7204f8" compoundref="usrp__prims__libusb0_8cc" startline="56" endline="59">_get_usb_device_descriptor</references>
        <references refid="usrp__prims__libusb0_8cc_1ab7ec110cdc532509b7e8159acaf5e899" compoundref="usrp__prims__libusb0_8cc" startline="62" endline="74">_get_usb_string_descriptor</references>
        <referencedby refid="classusrp__basic_1a70a71308412a67eaf825c13399faa078" compoundref="usrp__basic_8cc" startline="298" endline="301">usrp_basic::serial_number</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2003,2004,2006,2009<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="usrp__primsi_8h" kindref="compound">usrp_primsi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;usrp_commands.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;usrp_ids.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;usrp_i2c_addr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fpga_regs_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fpga_regs_standard.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>should<sp/>check<sp/>with<sp/>autoconf<sp/>(nanosleep)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ad9862_8h" kindref="compound">ad9862.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="std__paths_8h" kindref="compound">std_paths.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="md5_8h" kindref="compound">md5.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="usrp__prims__common_8cc_1a42f8c497a1968074f38bf5055c650dca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacead9862" kindref="compound">ad9862</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FIRMWARE_HASH_SLOT<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FPGA_HASH_SLOT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash_slot_addr[2]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>USRP_HASH_SLOT_0_ADDR,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>USRP_HASH_SLOT_1_ADDR</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*default_firmware_filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;std.ihx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*default_fpga_filename<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;std_2rxhb_2tx.rbf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="normal">find_file<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hw_rev)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**sp<sp/>=<sp/>std_paths;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[1000];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;USRP_PATH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf<sp/>(path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(path),<sp/></highlight><highlight class="stringliteral">&quot;%s/rev%d/%s&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>hw_rev,<sp/>filename);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access<sp/>(path,<sp/>R_OK)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*sp){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf<sp/>(path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(path),<sp/></highlight><highlight class="stringliteral">&quot;%s/rev%d/%s&quot;</highlight><highlight class="normal">,<sp/>*sp,<sp/>hw_rev,<sp/>filename);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access<sp/>(path,<sp/>R_OK)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>sp++;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="88"><highlight class="normal">get_proto_filename(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>user_filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*env_var,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*def)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user_filename.length()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user_filename.c_str();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>getenv(env_var);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&amp;&amp;<sp/>*s)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>def;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>power_down_9862s<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>q<sp/>must<sp/>be<sp/>a<sp/>real<sp/>USRP,<sp/>not<sp/>an<sp/>FX2.<sp/><sp/>Return<sp/>its<sp/>hardware<sp/>rev<sp/>number.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" kindref="member">usrp_hw_rev</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*q)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="libusb__types_8h_1ac5e93e2ccaee6015c0e06cbb7bba88e4" kindref="member">libusb_device_descriptor</ref><sp/>desc<sp/>=<sp/><ref refid="usrp__prims__libusb0_8cc_1af38af19bb9cf384e358bb63c9a7204f8" kindref="member">_get_usb_device_descriptor</ref>(q);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc.bcdDevice<sp/>&amp;<sp/>0x00FF;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>q<sp/>must<sp/>be<sp/>a<sp/>real<sp/>USRP,<sp/>not<sp/>an<sp/>FX2.<sp/><sp/>Return<sp/>true<sp/>if<sp/>it&apos;s<sp/>configured.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">_usrp_configured_p<sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*q)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="libusb__types_8h_1ac5e93e2ccaee6015c0e06cbb7bba88e4" kindref="member">libusb_device_descriptor</ref><sp/>desc<sp/>=<sp/><ref refid="usrp__prims__libusb0_8cc_1af38af19bb9cf384e358bb63c9a7204f8" kindref="member">_get_usb_device_descriptor</ref>(q);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(desc.bcdDevice<sp/>&amp;<sp/>0xFF00)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" kindref="member">usrp_usrp_p</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*q)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="libusb__types_8h_1ac5e93e2ccaee6015c0e06cbb7bba88e4" kindref="member">libusb_device_descriptor</ref><sp/>desc<sp/>=<sp/><ref refid="usrp__prims__libusb0_8cc_1af38af19bb9cf384e358bb63c9a7204f8" kindref="member">_get_usb_device_descriptor</ref>(q);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(desc.idVendor<sp/>==<sp/>USB_VID_FSF</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>desc.idProduct<sp/>==<sp/>USB_PID_FSF_USRP);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="usrp__prims__common_8cc_1afeb7e5fc77067223e229be02e78718ee" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1afeb7e5fc77067223e229be02e78718ee" kindref="member">usrp_fx2_p</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*q)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="libusb__types_8h_1ac5e93e2ccaee6015c0e06cbb7bba88e4" kindref="member">libusb_device_descriptor</ref><sp/>desc<sp/>=<sp/><ref refid="usrp__prims__libusb0_8cc_1af38af19bb9cf384e358bb63c9a7204f8" kindref="member">_get_usb_device_descriptor</ref>(q);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(desc.idVendor<sp/>==<sp/>USB_VID_CYPRESS</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>desc.idProduct<sp/>==<sp/>USB_PID_CYPRESS_FX2);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="usrp__prims__common_8cc_1a648e709e72577e0551174e2cdc2bc7f8" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a648e709e72577e0551174e2cdc2bc7f8" kindref="member">usrp_usrp0_p</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*q)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" kindref="member">usrp_usrp_p</ref><sp/>(q)<sp/>&amp;&amp;<sp/><ref refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" kindref="member">usrp_hw_rev</ref><sp/>(q)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="usrp__prims__common_8cc_1ad38836dac84e93debba03be7be6c1433" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ad38836dac84e93debba03be7be6c1433" kindref="member">usrp_usrp1_p</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*q)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" kindref="member">usrp_usrp_p</ref><sp/>(q)<sp/>&amp;&amp;<sp/><ref refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" kindref="member">usrp_hw_rev</ref><sp/>(q)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="usrp__prims__common_8cc_1a419e1f9fc226a5dba5fec58e54c366fe" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a419e1f9fc226a5dba5fec58e54c366fe" kindref="member">usrp_usrp2_p</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*q)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" kindref="member">usrp_usrp_p</ref><sp/>(q)<sp/>&amp;&amp;<sp/><ref refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" kindref="member">usrp_hw_rev</ref><sp/>(q)<sp/>==<sp/>2;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="usrp__prims__common_8cc_1af4b1c62ea1cf039186177d614c5b95bb" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1af4b1c62ea1cf039186177d614c5b95bb" kindref="member">usrp_unconfigured_usrp_p</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*q)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" kindref="member">usrp_usrp_p</ref><sp/>(q)<sp/>&amp;&amp;<sp/>!_usrp_configured_p<sp/>(q);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="usrp__prims__common_8cc_1ad201c17f46cc3d699c106cd1df7a036d" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ad201c17f46cc3d699c106cd1df7a036d" kindref="member">usrp_configured_usrp_p</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*q)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a3f3e8476e3c78ba61820edde38477ac6" kindref="member">usrp_usrp_p</ref><sp/>(q)<sp/>&amp;&amp;<sp/>_usrp_configured_p<sp/>(q);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*</highlight></codeline>
<codeline lineno="179" refid="usrp__prims__common_8cc_1ac2d83cf2d42d90dec9f28edbd4e5df78" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ac2d83cf2d42d90dec9f28edbd4e5df78" kindref="member">usrp_open_cmd_interface</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__libusb0_8cc_1a80dcac93d4db26c5f64dc1df7b07b8f9" kindref="member">usrp_open_interface</ref><sp/>(dev,<sp/>USRP_CMD_INTERFACE,<sp/>USRP_CMD_ALTINTERFACE);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*</highlight></codeline>
<codeline lineno="185" refid="usrp__prims__common_8cc_1a8747aae7fe65e85b35e8f6c6d2b25406" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a8747aae7fe65e85b35e8f6c6d2b25406" kindref="member">usrp_open_rx_interface</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__libusb0_8cc_1a80dcac93d4db26c5f64dc1df7b07b8f9" kindref="member">usrp_open_interface</ref><sp/>(dev,<sp/>USRP_RX_INTERFACE,<sp/>USRP_RX_ALTINTERFACE);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*</highlight></codeline>
<codeline lineno="191" refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ad0b2eca342b62b862016a167de6b832a" kindref="member">usrp_open_tx_interface</ref><sp/>(<ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__libusb0_8cc_1a80dcac93d4db26c5f64dc1df7b07b8f9" kindref="member">usrp_open_interface</ref><sp/>(dev,<sp/>USRP_TX_INTERFACE,<sp/>USRP_TX_ALTINTERFACE);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>write<sp/>internal<sp/>ram<sp/>using<sp/>Cypress<sp/>vendor<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">write_internal_ram<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_addr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quanta<sp/>=<sp/>MAX_EP0_PKTSIZE;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(addr<sp/>=<sp/>start_addr;<sp/>addr<sp/>&lt;<sp/>start_addr<sp/>+<sp/>(int)<sp/>len;<sp/>addr<sp/>+=<sp/>quanta){</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len<sp/>+<sp/>start_addr<sp/>-<sp/>addr;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>quanta)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>quanta;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/><ref refid="usrp__prims__libusb0_8cc_1ac41f970d1a4728b9522763fa78b2b170" kindref="member">_usb_control_transfer</ref><sp/>(udh,<sp/>0x40,<sp/>0xA0,<sp/>addr,<sp/>0,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)(buf<sp/>+<sp/>(addr<sp/>-<sp/>start_addr)),<sp/>n,<sp/>1000);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;write_internal_ram<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>whack<sp/>the<sp/>CPUCS<sp/>register<sp/>using<sp/>the<sp/>upload<sp/>RAM<sp/>vendor<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">reset_cpu<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reset_p)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reset_p)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hold<sp/>processor<sp/>in<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>release<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>write_internal_ram<sp/>(udh,<sp/>&amp;v,<sp/>0xE600,<sp/>1);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>intel<sp/>format<sp/>file<sp/>into<sp/>cypress<sp/>FX2<sp/>(8051)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">_usrp_load_firmware<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hash[USRP_HASH_SIZE])</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>FILE<sp/><sp/>*f<sp/>=<sp/>fopen<sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;ra&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>perror<sp/>(filename);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reset_cpu<sp/>(udh,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hold<sp/>CPU<sp/>in<sp/>reset<sp/>while<sp/>loading<sp/>firmware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s[1024];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[256];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>checksum,<sp/>a;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!feof(f)){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(s,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(s),<sp/>f);<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>should<sp/>not<sp/>use<sp/>more<sp/>than<sp/>263<sp/>bytes<sp/>normally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s[0]!=</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;%s:<sp/>invalid<sp/>line:<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>filename,<sp/>s);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(s+1,<sp/></highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>&amp;length);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(s+3,<sp/></highlight><highlight class="stringliteral">&quot;%04x&quot;</highlight><highlight class="normal">,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(s+7,<sp/></highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>&amp;type);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type==0){</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a=length+(addr<sp/>&amp;0xff)+(addr&gt;&gt;8)+type;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;length;i++){</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf<sp/>(s+9+i*2,</highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>&amp;b);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i]=b;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=a+data[i];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sscanf<sp/>(s+9+length*2,</highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>&amp;b);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checksum=b;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((a+checksum)&amp;0xff)!=0x00){</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>**<sp/>Checksum<sp/>failed:<sp/>got<sp/>0x%02x<sp/>versus<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>(-a)&amp;0xff,<sp/>checksum);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_internal_ram<sp/>(udh,<sp/>data,<sp/>addr,<sp/>length))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>0x01){<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>0x02){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Extended<sp/>address:<sp/>whatever<sp/>I<sp/>do<sp/>with<sp/>it?\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>invalid<sp/>line:<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>filename,<sp/>s);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>jam<sp/>the<sp/>hash<sp/>value<sp/>into<sp/>the<sp/>FX2<sp/>memory<sp/>before<sp/>letting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>cpu<sp/>out<sp/>of<sp/>reset.<sp/><sp/>When<sp/>it<sp/>comes<sp/>out<sp/>of<sp/>reset<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>renumerate<sp/>which<sp/>will<sp/>invalidate<sp/>udh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="usrp__prims__common_8cc_1a5a4f5c3849c508f01aee76116c403514" kindref="member">usrp_set_hash</ref><sp/>(udh,<sp/>FIRMWARE_HASH_SLOT,<sp/>hash))</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>failed<sp/>to<sp/>write<sp/>firmware<sp/>hash<sp/>slot\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reset_cpu<sp/>(udh,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>CPU<sp/>out<sp/>of<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>fclose<sp/>(f);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/>fail:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>fclose<sp/>(f);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>load<sp/>fpga</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">_usrp_load_fpga<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hash[USRP_HASH_SIZE])</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>FILE<sp/><sp/>*fp<sp/>=<sp/>fopen<sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>perror<sp/>(filename);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[MAX_EP0_PKTSIZE];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>64<sp/>is<sp/>max<sp/>size<sp/>of<sp/>EP0<sp/>packet<sp/>on<sp/>FX2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims__common_8cc_1ac856910e04aa0da0a7e1d946a268b7f2" kindref="member">usrp_set_led</ref><sp/>(udh,<sp/>1,<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>led<sp/>1<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>FPGA<sp/>(and<sp/>on<sp/>rev1<sp/>both<sp/>AD9862&apos;s,<sp/>thus<sp/>killing<sp/>clock)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims__common_8cc_1a010a01fbc5a1ee5fa8d3692e774aa7f3" kindref="member">usrp_set_fpga_reset</ref><sp/>(udh,<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hold<sp/>fpga<sp/>in<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>VRQ_FPGA_LOAD,<sp/>0,<sp/>FL_BEGIN,<sp/>0,<sp/>0)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>fread<sp/>(buf,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buf),<sp/>fp))<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>VRQ_FPGA_LOAD,<sp/>0,<sp/>FL_XFER,<sp/>buf,<sp/>n)<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>VRQ_FPGA_LOAD,<sp/>0,<sp/>FL_END,<sp/>0,<sp/>0)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>fclose<sp/>(fp);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="usrp__prims__common_8cc_1a5a4f5c3849c508f01aee76116c403514" kindref="member">usrp_set_hash</ref><sp/>(udh,<sp/>FPGA_HASH_SLOT,<sp/>hash))</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>failed<sp/>to<sp/>write<sp/>fpga<sp/>hash<sp/>slot\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>rev1<sp/>USRP,<sp/>the<sp/>{tx,rx}_{enable,reset}<sp/>bits<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>controlled<sp/>over<sp/>the<sp/>serial<sp/>bus,<sp/>and<sp/>hence<sp/>aren&apos;t<sp/>observed<sp/>until</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>got<sp/>a<sp/>good<sp/>fpga<sp/>bitstream<sp/>loaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims__common_8cc_1a010a01fbc5a1ee5fa8d3692e774aa7f3" kindref="member">usrp_set_fpga_reset</ref><sp/>(udh,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fpga<sp/>out<sp/>of<sp/>master<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>these<sp/>commands<sp/>will<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1afdda6f72700cfeb73b9c3337cc4c7607" kindref="member">usrp_set_fpga_tx_enable</ref><sp/>(udh,<sp/>0);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1a36a947567043a250ae605dee5eb78bf4" kindref="member">usrp_set_fpga_rx_enable</ref><sp/>(udh,<sp/>0);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1a8dbb4b5a64714763d57d2d269c27b047" kindref="member">usrp_set_fpga_tx_reset</ref><sp/>(udh,<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>tx<sp/>and<sp/>rx<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1acb37b3d6745ae54aa7e280187f919787" kindref="member">usrp_set_fpga_rx_reset</ref><sp/>(udh,<sp/>1);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1a8dbb4b5a64714763d57d2d269c27b047" kindref="member">usrp_set_fpga_tx_reset</ref><sp/>(udh,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>tx<sp/>and<sp/>rx<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1acb37b3d6745ae54aa7e280187f919787" kindref="member">usrp_set_fpga_rx_reset</ref><sp/>(udh,<sp/>0);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>failed<sp/>to<sp/>reset<sp/>tx<sp/>and/or<sp/>rx<sp/>path\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Manually<sp/>reset<sp/>all<sp/>regs<sp/>except<sp/>master<sp/>control<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>may<sp/>want<sp/>to<sp/>remove<sp/>this<sp/>when<sp/>we<sp/>rework<sp/>FPGA<sp/>reset<sp/>strategy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>mean<sp/>while,<sp/>this<sp/>gets<sp/>us<sp/>reproducible<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>FR_USER_0;<sp/>i++){</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>FR_MASTER_CTRL)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrp__prims__common_8cc_1aaef8715cc33a0cd06fb53e76de13d1eb" kindref="member">usrp_write_fpga_reg</ref>(udh,<sp/>i,<sp/>0);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>power_down_9862s<sp/>(udh);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>rev1,<sp/>power<sp/>these<sp/>down!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims__common_8cc_1ac856910e04aa0da0a7e1d946a268b7f2" kindref="member">usrp_set_led</ref><sp/>(udh,<sp/>1,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>led<sp/>1<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/>fail:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>power_down_9862s<sp/>(udh);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>rev1,<sp/>power<sp/>these<sp/>down!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>fclose<sp/>(fp);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="usrp__prims__common_8cc_1ac856910e04aa0da0a7e1d946a268b7f2" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ac856910e04aa0da0a7e1d946a268b7f2" kindref="member">usrp_set_led</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>VRQ_SET_LED,<sp/>on,<sp/>which,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="usrp__prims__common_8cc_1a5a4f5c3849c508f01aee76116c403514" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a5a4f5c3849c508f01aee76116c403514" kindref="member">usrp_set_hash</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hash[USRP_HASH_SIZE])</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>which<sp/>&amp;=<sp/>1;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>the<sp/>Cypress<sp/>firmware<sp/>down<sp/>load<sp/>command<sp/>to<sp/>jam<sp/>it<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="usrp__prims__libusb0_8cc_1ac41f970d1a4728b9522763fa78b2b170" kindref="member">_usb_control_transfer</ref><sp/>(udh,<sp/>0x40,<sp/>0xa0,<sp/>hash_slot_addr[which],<sp/>0,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>hash,<sp/>USRP_HASH_SIZE,<sp/>1000);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>failed<sp/>to<sp/>set<sp/>hash\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>==<sp/>USRP_HASH_SIZE;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="usrp__prims__common_8cc_1ab78856b82dd0ded8eba5a39b1555a3b6" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ab78856b82dd0ded8eba5a39b1555a3b6" kindref="member">usrp_get_hash</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hash[USRP_HASH_SIZE])</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>which<sp/>&amp;=<sp/>1;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>the<sp/>Cypress<sp/>firmware<sp/>upload<sp/>command<sp/>to<sp/>fetch<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="usrp__prims__libusb0_8cc_1ac41f970d1a4728b9522763fa78b2b170" kindref="member">_usb_control_transfer</ref><sp/>(udh,<sp/>0xc0,<sp/>0xa0,<sp/>hash_slot_addr[which],<sp/>0,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>hash,<sp/>USRP_HASH_SIZE,<sp/>1000);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>failed<sp/>to<sp/>get<sp/>hash\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>==<sp/>USRP_HASH_SIZE;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">usrp_set_switch<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd_byte,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>cmd_byte,<sp/>on,<sp/>0,<sp/>0,<sp/>0)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">usrp1_fpga_write<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>rev1<sp/>usrp,<sp/>we<sp/>use<sp/>the<sp/>generic<sp/>spi_write<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[4];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>buf[0]<sp/>=<sp/>(value<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSB<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>buf[1]<sp/>=<sp/>(value<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>buf[2]<sp/>=<sp/>(value<sp/>&gt;&gt;<sp/><sp/>8)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>buf[3]<sp/>=<sp/>(value<sp/>&gt;&gt;<sp/><sp/>0)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a19684ae63c0ce40110e347152742e898" kindref="member">usrp_spi_write</ref><sp/>(udh,<sp/>0x00<sp/>|<sp/>(regno<sp/>&amp;<sp/>0x7f),</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI_ENABLE_FPGA,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI_FMT_MSB<sp/>|<sp/>SPI_FMT_HDR_1,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buf));</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">usrp1_fpga_read<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>*value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[4];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="usrp__prims__common_8cc_1a53e607aa5d7526e5da357ac2ee8d499b" kindref="member">usrp_spi_read</ref><sp/>(udh,<sp/>0x80<sp/>|<sp/>(regno<sp/>&amp;<sp/>0x7f),</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI_ENABLE_FPGA,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI_FMT_MSB<sp/>|<sp/>SPI_FMT_HDR_1,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buf));</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>(buf[0]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(buf[1]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(buf[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>buf[3];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="usrp__prims__common_8cc_1aaef8715cc33a0cd06fb53e76de13d1eb" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1aaef8715cc33a0cd06fb53e76de13d1eb" kindref="member">usrp_write_fpga_reg</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" kindref="member">usrp_hw_rev</ref><sp/>(<ref refid="usrp__prims__libusb0_8cc_1ab425dbdad132f9c06cad9bac93f36491" kindref="member">_get_usb_device</ref><sp/>(udh))){</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>supported<sp/>;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usrp1_fpga_write<sp/>(udh,<sp/>reg,<sp/>value);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="usrp__prims__common_8cc_1a7e80adc49e58e5acb7a69b0458ac7095" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a7e80adc49e58e5acb7a69b0458ac7095" kindref="member">usrp_read_fpga_reg</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" kindref="member">usrp_hw_rev</ref><sp/>(<ref refid="usrp__prims__libusb0_8cc_1ab425dbdad132f9c06cad9bac93f36491" kindref="member">_get_usb_device</ref><sp/>(udh))){</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>supported<sp/>;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usrp1_fpga_read<sp/>(udh,<sp/>reg,<sp/>value);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="usrp__prims__common_8cc_1a010a01fbc5a1ee5fa8d3692e774aa7f3" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a010a01fbc5a1ee5fa8d3692e774aa7f3" kindref="member">usrp_set_fpga_reset</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usrp_set_switch<sp/>(udh,<sp/>VRQ_FPGA_SET_RESET,<sp/>on);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="usrp__prims__common_8cc_1afdda6f72700cfeb73b9c3337cc4c7607" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1afdda6f72700cfeb73b9c3337cc4c7607" kindref="member">usrp_set_fpga_tx_enable</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usrp_set_switch<sp/>(udh,<sp/>VRQ_FPGA_SET_TX_ENABLE,<sp/>on);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="usrp__prims__common_8cc_1a36a947567043a250ae605dee5eb78bf4" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a36a947567043a250ae605dee5eb78bf4" kindref="member">usrp_set_fpga_rx_enable</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usrp_set_switch<sp/>(udh,<sp/>VRQ_FPGA_SET_RX_ENABLE,<sp/>on);</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="usrp__prims__common_8cc_1a8dbb4b5a64714763d57d2d269c27b047" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a8dbb4b5a64714763d57d2d269c27b047" kindref="member">usrp_set_fpga_tx_reset</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usrp_set_switch<sp/>(udh,<sp/>VRQ_FPGA_SET_TX_RESET,<sp/>on);</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="usrp__prims__common_8cc_1acb37b3d6745ae54aa7e280187f919787" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1acb37b3d6745ae54aa7e280187f919787" kindref="member">usrp_set_fpga_rx_reset</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usrp_set_switch<sp/>(udh,<sp/>VRQ_FPGA_SET_RX_RESET,<sp/>on);</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conditional<sp/>load<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">compute_hash<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hash[USRP_HASH_SIZE])</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>assert<sp/>(USRP_HASH_SIZE<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>memset<sp/>(hash,<sp/>0,<sp/>USRP_HASH_SIZE);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/>fopen<sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>perror<sp/>(filename);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="md5_8h_1a59105467b3fc9dc939e92f16836341b4" kindref="member">md5_stream</ref><sp/>(fp,<sp/>hash);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>fclose<sp/>(fp);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref></highlight></codeline>
<codeline lineno="566"><highlight class="normal">usrp_conditionally_load_something<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loader<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[USRP_HASH_SIZE]))</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>file_hash[USRP_HASH_SIZE];</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>usrp_hash[USRP_HASH_SIZE];</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access<sp/>(filename,<sp/>R_OK)<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>perror<sp/>(filename);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" kindref="member">ULS_ERROR</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!compute_hash<sp/>(filename,<sp/>file_hash))</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" kindref="member">ULS_ERROR</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!force</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="usrp__prims__common_8cc_1ab78856b82dd0ded8eba5a39b1555a3b6" kindref="member">usrp_get_hash</ref><sp/>(udh,<sp/>slot,<sp/>usrp_hash)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>memcmp<sp/>(file_hash,<sp/>usrp_hash,<sp/>USRP_HASH_SIZE)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a6d74db49055b241d7d030a8dbaf46f42" kindref="member">ULS_ALREADY_LOADED</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>loader<sp/>(udh,<sp/>filename,<sp/>file_hash);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!r)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" kindref="member">ULS_ERROR</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2ad0f9fbcbeef4760445bc66d20339957a" kindref="member">ULS_OK</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref></highlight></codeline>
<codeline lineno="599" refid="usrp__prims__common_8cc_1a2b4f03982b4e0e78095bb51e7e48eb5b" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a2b4f03982b4e0e78095bb51e7e48eb5b" kindref="member">usrp_load_firmware</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usrp_conditionally_load_something<sp/>(udh,<sp/>filename,<sp/>force,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FIRMWARE_HASH_SLOT,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_usrp_load_firmware);</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref></highlight></codeline>
<codeline lineno="609" refid="usrp__prims__common_8cc_1a95b32b91b15d143ace5e52b1a6a45170" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a95b32b91b15d143ace5e52b1a6a45170" kindref="member">usrp_load_fpga</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usrp_conditionally_load_something<sp/>(udh,<sp/>filename,<sp/>force,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FPGA_HASH_SLOT,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_usrp_load_fpga);</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*</highlight></codeline>
<codeline lineno="619"><highlight class="normal">open_nth_cmd_interface<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nth,<sp/>libusb_context<sp/>*ctx)</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*udev<sp/>=<sp/><ref refid="usrp__prims_8h_1a91bc9c618e75323cfb96673a135269a9" kindref="member">usrp_find_device</ref><sp/>(nth,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ctx);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udev<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>failed<sp/>to<sp/>find<sp/>usrp[%d]\n&quot;</highlight><highlight class="normal">,<sp/>nth);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>udh<sp/>=<sp/><ref refid="usrp__prims__common_8cc_1ac2d83cf2d42d90dec9f28edbd4e5df78" kindref="member">usrp_open_cmd_interface</ref><sp/>(udev);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udh<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>this<sp/>could<sp/>be<sp/>because<sp/>somebody<sp/>else<sp/>has<sp/>it<sp/>open.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>delay<sp/>and<sp/>retry...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;open_nth_cmd_interface:<sp/>open_cmd_interface<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>udh;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal">our_nanosleep<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*delay)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_delay<sp/>=<sp/>*delay;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><sp/><sp/><sp/><sp/><sp/><sp/>remainder;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1){</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>nanosleep<sp/>(&amp;new_delay,<sp/>&amp;remainder);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_delay<sp/>=<sp/>remainder;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;nanosleep&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal">mdelay<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>millisecs)</highlight></codeline>
<codeline lineno="662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>ts.tv_sec<sp/>=<sp/>millisecs<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>ts.tv_nsec<sp/>=<sp/>(millisecs<sp/>-<sp/>(1000<sp/>*<sp/>ts.tv_sec))<sp/>*<sp/>1000000;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>our_nanosleep<sp/>(&amp;ts);</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref></highlight></codeline>
<codeline lineno="671" refid="usrp__prims__common_8cc_1ade1cc92ee674cec5291c42dc701eca05" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ade1cc92ee674cec5291c42dc701eca05" kindref="member">usrp_load_firmware_nth</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nth,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force,<sp/>libusb_context<sp/>*ctx)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh<sp/>=<sp/>open_nth_cmd_interface<sp/>(nth,<sp/>ctx);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udh<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" kindref="member">ULS_ERROR</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref><sp/>s<sp/>=<sp/><ref refid="usrp__prims__common_8cc_1a2b4f03982b4e0e78095bb51e7e48eb5b" kindref="member">usrp_load_firmware</ref><sp/>(udh,<sp/>filename,<sp/>force);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims_8h_1a5b0fcfee6e1328858c7927d386d0c92a" kindref="member">usrp_close_interface</ref><sp/>(udh);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(s){</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a6d74db49055b241d7d030a8dbaf46f42" kindref="member">ULS_ALREADY_LOADED</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>changed...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a6d74db49055b241d7d030a8dbaf46f42" kindref="member">ULS_ALREADY_LOADED</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2ad0f9fbcbeef4760445bc66d20339957a" kindref="member">ULS_OK</ref>:</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>loaded<sp/>firmware<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>highly<sp/>likely<sp/>that<sp/>the<sp/>board<sp/>will<sp/>renumerate<sp/>(simulate<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disconnect/reconnect<sp/>sequence),<sp/>invalidating<sp/>our<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME.<sp/><sp/>Turn<sp/>this<sp/>into<sp/>a<sp/>loop<sp/>that<sp/>rescans<sp/>until<sp/>we<sp/>refind<sp/>ourselves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><sp/><sp/><sp/><sp/>t;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delay<sp/>for<sp/>2<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>t.tv_sec<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>t.tv_nsec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>our_nanosleep<sp/>(&amp;t);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrp__prims_8h_1a0b59ad04d1bc23fb5a070983f60572bf" kindref="member">usrp_rescan</ref><sp/>();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2ad0f9fbcbeef4760445bc66d20339957a" kindref="member">ULS_OK</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" kindref="member">ULS_ERROR</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>kind<sp/>of<sp/>problem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" kindref="member">ULS_ERROR</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal">load_status_msg<sp/>(<ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*e<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;USRP_VERBOSE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose<sp/>=<sp/>e<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(s){</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" kindref="member">ULS_ERROR</ref>:</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>failed<sp/>to<sp/>load<sp/>%s<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>type,<sp/>filename);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a6d74db49055b241d7d030a8dbaf46f42" kindref="member">ULS_ALREADY_LOADED</ref>:</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbose)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>%s<sp/>%s<sp/>already<sp/>loaded.\n&quot;</highlight><highlight class="normal">,<sp/>type,<sp/>filename);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2ad0f9fbcbeef4760445bc66d20339957a" kindref="member">ULS_OK</ref>:</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbose)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>%s<sp/>%s<sp/>loaded<sp/>successfully.\n&quot;</highlight><highlight class="normal">,<sp/>type,<sp/>filename);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="usrp__prims__common_8cc_1acc60eeb92cdcb6e0fcf37e1e5857819a" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1acc60eeb92cdcb6e0fcf37e1e5857819a" kindref="member">usrp_load_standard_bits</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nth,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>fpga_filename,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>firmware_filename,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libusb_context<sp/>*ctx)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2" kindref="member">usrp_load_status_t</ref><sp/><sp/><sp/><sp/>s;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*filename;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*proto_filename;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hw_rev;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first,<sp/>figure<sp/>out<sp/>what<sp/>hardware<sp/>rev<sp/>we&apos;re<sp/>dealing<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*udev<sp/>=<sp/><ref refid="usrp__prims_8h_1a91bc9c618e75323cfb96673a135269a9" kindref="member">usrp_find_device</ref><sp/>(nth,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ctx);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udev<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp:<sp/>failed<sp/>to<sp/>find<sp/>usrp[%d]\n&quot;</highlight><highlight class="normal">,<sp/>nth);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>hw_rev<sp/>=<sp/><ref refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" kindref="member">usrp_hw_rev</ref><sp/>(udev);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>by<sp/>loading<sp/>the<sp/>firmware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>proto_filename<sp/>=<sp/>get_proto_filename(firmware_filename,<sp/></highlight><highlight class="stringliteral">&quot;USRP_FIRMWARE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_firmware_filename);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>filename<sp/>=<sp/>find_file(proto_filename,<sp/>hw_rev);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>firmware:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>proto_filename);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/><ref refid="usrp__prims__common_8cc_1ade1cc92ee674cec5291c42dc701eca05" kindref="member">usrp_load_firmware_nth</ref><sp/>(nth,<sp/>filename,<sp/>force,<sp/>ctx);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>load_status_msg<sp/>(s,<sp/></highlight><highlight class="stringliteral">&quot;firmware&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" kindref="member">ULS_ERROR</ref>)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>actually<sp/>loaded<sp/>firmware,<sp/>we<sp/>must<sp/>reload<sp/>fpga<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2ad0f9fbcbeef4760445bc66d20339957a" kindref="member">ULS_OK</ref>)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>force<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>move<sp/>on<sp/>to<sp/>the<sp/>fpga<sp/>configuration<sp/>bitstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>proto_filename<sp/>=<sp/>get_proto_filename(fpga_filename,<sp/></highlight><highlight class="stringliteral">&quot;USRP_FPGA&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_fpga_filename);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>filename<sp/>=<sp/>find_file<sp/>(proto_filename,<sp/>hw_rev);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>fpga<sp/>bitstream:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>proto_filename);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh<sp/>=<sp/>open_nth_cmd_interface<sp/>(nth,<sp/>ctx);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udh<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/><ref refid="usrp__prims__common_8cc_1a95b32b91b15d143ace5e52b1a6a45170" kindref="member">usrp_load_fpga</ref><sp/>(udh,<sp/>filename,<sp/>force);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims_8h_1a5b0fcfee6e1328858c7927d386d0c92a" kindref="member">usrp_close_interface</ref><sp/>(udh);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>load_status_msg<sp/>(s,<sp/></highlight><highlight class="stringliteral">&quot;fpga<sp/>bitstream&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/><ref refid="usrp__prims_8h_1a516dbfb08540b8fabe7c291fd1942ba2a019b1cd5a5ade04e9a2a046da8838351" kindref="member">ULS_ERROR</ref>)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="usrp__prims__common_8cc_1aa35770eefda58f0190190c3191bf10aa" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1aa35770eefda58f0190190c3191bf10aa" kindref="member">_usrp_get_status</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*trouble)</highlight></codeline>
<codeline lineno="799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>*trouble<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>VRQ_GET_STATUS,<sp/>0,<sp/>which,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;status,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(status))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(status))</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>*trouble<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="usrp__prims__common_8cc_1a158c774c3d49b0e4f12e29609ed94a33" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a158c774c3d49b0e4f12e29609ed94a33" kindref="member">usrp_check_rx_overrun</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*overrun_p)</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1aa35770eefda58f0190190c3191bf10aa" kindref="member">_usrp_get_status</ref><sp/>(udh,<sp/>GS_RX_OVERRUN,<sp/>overrun_p);</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818" refid="usrp__prims__common_8cc_1ac901040cfe8868bf16bcb970454055a2" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ac901040cfe8868bf16bcb970454055a2" kindref="member">usrp_check_tx_underrun</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*underrun_p)</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1aa35770eefda58f0190190c3191bf10aa" kindref="member">_usrp_get_status</ref><sp/>(udh,<sp/>GS_TX_UNDERRUN,<sp/>underrun_p);</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="usrp__prims__common_8cc_1a9b367498154b59e4b03fd3d4677734cb" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a9b367498154b59e4b03fd3d4677734cb" kindref="member">usrp_i2c_write</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2c_addr,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>1<sp/>||<sp/>len<sp/>&gt;<sp/>MAX_EP0_PKTSIZE)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>VRQ_I2C_WRITE,<sp/>i2c_addr,<sp/>0,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buf,<sp/>len)<sp/>==<sp/>len;</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837" refid="usrp__prims__common_8cc_1a67b5af6739c0f41abeae074d2d9821cc" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a67b5af6739c0f41abeae074d2d9821cc" kindref="member">usrp_i2c_read</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2c_addr,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>1<sp/>||<sp/>len<sp/>&gt;<sp/>MAX_EP0_PKTSIZE)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>VRQ_I2C_READ,<sp/>i2c_addr,<sp/>0,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buf,<sp/>len)<sp/>==<sp/>len;</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="usrp__prims__common_8cc_1a19684ae63c0ce40110e347152742e898" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a19684ae63c0ce40110e347152742e898" kindref="member">usrp_spi_write</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optional_header,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enables,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0<sp/>||<sp/>len<sp/>&gt;<sp/>MAX_EP0_PKTSIZE)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>VRQ_SPI_WRITE,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optional_header,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enables<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(format<sp/>&amp;<sp/>0xff),</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buf,<sp/>len)<sp/>==<sp/>len;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="usrp__prims__common_8cc_1a53e607aa5d7526e5da357ac2ee8d499b" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a53e607aa5d7526e5da357ac2ee8d499b" kindref="member">usrp_spi_read</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optional_header,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enables,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0<sp/>||<sp/>len<sp/>&gt;<sp/>MAX_EP0_PKTSIZE)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__libusb0_8cc_1addfdacdd1db6de7cb77f1762c42d4ed9" kindref="member">write_cmd</ref><sp/>(udh,<sp/>VRQ_SPI_READ,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optional_header,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enables<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(format<sp/>&amp;<sp/>0xff),</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buf,<sp/>len)<sp/>==<sp/>len;</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" kindref="member">usrp_9862_write</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_codec,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_9862_write<sp/>which<sp/>=<sp/>%d,<sp/>reg<sp/>=<sp/>%2d,<sp/>val<sp/>=<sp/>%3d<sp/>(0x%02x)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which_codec,<sp/>regno,<sp/>value,<sp/>value);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[1];</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>buf[0]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a19684ae63c0ce40110e347152742e898" kindref="member">usrp_spi_write</ref><sp/>(udh,<sp/>0x00<sp/>|<sp/>(regno<sp/>&amp;<sp/>0x3f),</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which_codec<sp/>==<sp/>0<sp/>?<sp/>SPI_ENABLE_CODEC_A<sp/>:<sp/>SPI_ENABLE_CODEC_B,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI_FMT_MSB<sp/>|<sp/>SPI_FMT_HDR_1,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf,<sp/>1);</highlight></codeline>
<codeline lineno="892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895" refid="usrp__prims__common_8cc_1ab68e752026fa29aab0b24b31d440cbe3" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ab68e752026fa29aab0b24b31d440cbe3" kindref="member">usrp_9862_read</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_codec,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regno,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="897"><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a53e607aa5d7526e5da357ac2ee8d499b" kindref="member">usrp_spi_read</ref><sp/>(udh,<sp/>0x80<sp/>|<sp/>(regno<sp/>&amp;<sp/>0x3f),</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which_codec<sp/>==<sp/>0<sp/>?<sp/>SPI_ENABLE_CODEC_A<sp/>:<sp/>SPI_ENABLE_CODEC_B,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI_FMT_MSB<sp/>|<sp/>SPI_FMT_HDR_1,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>1);</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905" refid="usrp__prims__common_8cc_1ace9c2bd3a87d1240b113db682dbcef09" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ace9c2bd3a87d1240b113db682dbcef09" kindref="member">usrp_9862_write_many</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_codec,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&amp;<sp/>0x1)</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" kindref="member">usrp_9862_write</ref><sp/>(udh,<sp/>which_codec,<sp/>buf[0],<sp/>buf[1]);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926" refid="usrp__prims__common_8cc_1a4ffbe7a8f1f34c079f4e48dd63d5332b" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a4ffbe7a8f1f34c079f4e48dd63d5332b" kindref="member">usrp_9862_write_many_all</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>handle<sp/>2/2<sp/>and<sp/>4/4<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>result<sp/><sp/>=<sp/><ref refid="usrp__prims__common_8cc_1ace9c2bd3a87d1240b113db682dbcef09" kindref="member">usrp_9862_write_many</ref><sp/>(udh,<sp/>0,<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>result<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1ace9c2bd3a87d1240b113db682dbcef09" kindref="member">usrp_9862_write_many</ref><sp/>(udh,<sp/>1,<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal">power_down_9862s<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh)</highlight></codeline>
<codeline lineno="939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>regs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ad9862_8h_1aa0fcba5d524230a122c57078342ad852" kindref="member">REG_RX_PWR_DN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0x01,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ad9862_8h_1a1c81d40cf59f1207a2e424977e580d07" kindref="member">REG_TX_PWR_DN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0x0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pwr<sp/>dn<sp/>digital<sp/>and<sp/>analog_both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ad9862_8h_1ad5c63f9d7a28affa5c98fb7249a471e5" kindref="member">REG_TX_MODULATOR</ref>,<sp/><sp/><sp/>0x00<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coarse<sp/>&amp;<sp/>fine<sp/>modulators<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims__common_8cc_1a8928959b2e2d3ab52d7b6ad115baaff3" kindref="member">usrp_hw_rev</ref><sp/>(<ref refid="usrp__prims__libusb0_8cc_1ab425dbdad132f9c06cad9bac93f36491" kindref="member">_get_usb_device</ref><sp/>(udh))){</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrp__prims__common_8cc_1a4ffbe7a8f1f34c079f4e48dd63d5332b" kindref="member">usrp_9862_write_many_all</ref><sp/>(udh,<sp/>regs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(regs));</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EEPROM_PAGESIZE<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="usrp__prims__common_8cc_1a452984e181f220c9ed68f0f93d9831ee" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a452984e181f220c9ed68f0f93d9831ee" kindref="member">usrp_eeprom_write</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2c_addr,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eeprom_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cmd[2];</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buf;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>simplest<sp/>thing<sp/>that<sp/>could<sp/>possibly<sp/>work:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>all<sp/>writes<sp/>are<sp/>single<sp/>byte<sp/>writes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>speed<sp/>this<sp/>up<sp/>using<sp/>the<sp/>page<sp/>write<sp/>feature,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>write<sp/>so<sp/>infrequently,<sp/>why<sp/>bother...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len--<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd[0]<sp/>=<sp/>eeprom_offset++;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd[1]<sp/>=<sp/>*p++;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="usrp__prims__common_8cc_1a9b367498154b59e4b03fd3d4677734cb" kindref="member">usrp_i2c_write</ref><sp/>(udh,<sp/>i2c_addr,<sp/>cmd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(cmd));</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>mdelay<sp/>(10);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delay<sp/>10ms<sp/>worst<sp/>case<sp/>write<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!r)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985" refid="usrp__prims__common_8cc_1afe37e9b1905cf7dc986c6c992d5f35a0" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1afe37e9b1905cf7dc986c6c992d5f35a0" kindref="member">usrp_eeprom_read</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2c_addr,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eeprom_offset,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buf;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>setup<sp/>a<sp/>random<sp/>read<sp/>by<sp/>first<sp/>doing<sp/>a<sp/>&quot;zero<sp/>byte<sp/>write&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>carry<sp/>an<sp/>address.<sp/><sp/>Reads<sp/>use<sp/>an<sp/>implicit<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cmd[1];</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>cmd[0]<sp/>=<sp/>eeprom_offset;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="usrp__prims__common_8cc_1a9b367498154b59e4b03fd3d4677734cb" kindref="member">usrp_i2c_write</ref><sp/>(udh,<sp/>i2c_addr,<sp/>cmd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(cmd)))</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min<sp/>(len,<sp/>MAX_EP0_PKTSIZE);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="usrp__prims__common_8cc_1a67b5af6739c0f41abeae074d2d9821cc" kindref="member">usrp_i2c_read</ref><sp/>(udh,<sp/>i2c_addr,<sp/>p,<sp/>n))</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal">slot_to_codec<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*which_codec)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>*which_codec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(slot){</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_TX_A:</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_RX_A:</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>*which_codec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_TX_B:</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_RX_B:</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>*which_codec<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_prims:slot_to_codec:<sp/>invalid<sp/>slot<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>slot);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal">tx_slot_p<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(slot){</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_TX_A:</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_TX_B:</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047" refid="usrp__prims__common_8cc_1a7b72a73c7153003a42f713aebd41e0ab" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a7b72a73c7153003a42f713aebd41e0ab" kindref="member">usrp_write_aux_dac</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_dac,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_codec;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!slot_to_codec<sp/>(slot,<sp/>&amp;which_codec))</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(0<sp/>&lt;=<sp/>which_dac<sp/>&amp;&amp;<sp/>which_dac<sp/>&lt;<sp/>4)){</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_write_aux_dac:<sp/>invalid<sp/>dac<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>which_dac);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>value<sp/>&amp;=<sp/>0x0fff;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>to<sp/>12-bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which_dac<sp/>==<sp/>3){</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dac<sp/>3<sp/>is<sp/>really<sp/>12-bits.<sp/><sp/>Use<sp/>value<sp/>as<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" kindref="member">usrp_9862_write</ref><sp/>(udh,<sp/>which_codec,<sp/>43,<sp/>(value<sp/>&gt;&gt;<sp/>4));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>most<sp/>sig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" kindref="member">usrp_9862_write</ref><sp/>(udh,<sp/>which_codec,<sp/>42,<sp/>(value<sp/>&amp;<sp/>0xf)<sp/>&lt;&lt;<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>least<sp/>sig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dac<sp/>0,<sp/>1,<sp/>and<sp/>2<sp/>are<sp/>really<sp/>8<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>value<sp/>&gt;&gt;<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>value<sp/>appropriately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" kindref="member">usrp_9862_write</ref><sp/>(udh,<sp/>which_codec,<sp/>36<sp/>+<sp/>which_dac,<sp/>value);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078" refid="usrp__prims__common_8cc_1a0c6f8c0f7a46bc4fe82029657d6f9be6" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a0c6f8c0f7a46bc4fe82029657d6f9be6" kindref="member">usrp_read_aux_adc</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_adc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>*value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>which_codec;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!slot_to_codec<sp/>(slot,<sp/>&amp;which_codec))</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(0<sp/>&lt;=<sp/>which_codec<sp/>&amp;&amp;<sp/>which_codec<sp/>&lt;<sp/>2)){</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_read_aux_adc:<sp/>invalid<sp/>adc<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>which_adc);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>aux_adc_control<sp/>=</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ad9862_8h_1ac7e81b33a9d26b7248ee7d5c0a4700b6" kindref="member">AUX_ADC_CTRL_REFSEL_A</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>chip<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/><ref refid="ad9862_8h_1a5c3311e371cb2ff4e5eb3137daa0ff6c" kindref="member">AUX_ADC_CTRL_REFSEL_B</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>chip<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>rd_reg<sp/>=<sp/>26;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>address<sp/>of<sp/>two<sp/>regs<sp/>to<sp/>read<sp/>for<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>program<sp/>the<sp/>ADC<sp/>mux<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx_slot_p<sp/>(slot))</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>aux_adc_control<sp/>|=<sp/><ref refid="ad9862_8h_1a1d9799086c81500879a53a84d777996b" kindref="member">AUX_ADC_CTRL_SELECT_A2</ref><sp/>|<sp/><ref refid="ad9862_8h_1a495d6e812cfa7f22a4af3f28f06f70d9" kindref="member">AUX_ADC_CTRL_SELECT_B2</ref>;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>rd_reg<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>aux_adc_control<sp/>|=<sp/><ref refid="ad9862_8h_1a0863c65a4aa73780b235e6f93be9aa7f" kindref="member">AUX_ADC_CTRL_SELECT_A1</ref><sp/>|<sp/><ref refid="ad9862_8h_1a1c93d1ea3bc4295612dca1330b54fb0b" kindref="member">AUX_ADC_CTRL_SELECT_B1</ref>;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>I&apos;m<sp/>not<sp/>sure<sp/>if<sp/>we<sp/>can<sp/>set<sp/>the<sp/>mux<sp/>and<sp/>issue<sp/>a<sp/>start<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>same<sp/>cycle,<sp/>so<sp/>let&apos;s<sp/>do<sp/>them<sp/>one<sp/>at<sp/>a<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" kindref="member">usrp_9862_write</ref><sp/>(udh,<sp/>which_codec,<sp/>34,<sp/>aux_adc_control);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which_adc<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>aux_adc_control<sp/>|=<sp/><ref refid="ad9862_8h_1a037e1c02a0021f34bfd57f4054269acf" kindref="member">AUX_ADC_CTRL_START_A</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>rd_reg<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>aux_adc_control<sp/>|=<sp/><ref refid="ad9862_8h_1a15db6e983d54bb708d9a69610e595af0" kindref="member">AUX_ADC_CTRL_START_B</ref>;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>the<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims__common_8cc_1a5038d35fe755b8a3863082371b64782e" kindref="member">usrp_9862_write</ref><sp/>(udh,<sp/>which_codec,<sp/>34,<sp/>aux_adc_control);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>10-bit<sp/>result<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v_lo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v_hi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="usrp__prims__common_8cc_1ab68e752026fa29aab0b24b31d440cbe3" kindref="member">usrp_9862_read</ref><sp/>(udh,<sp/>which_codec,<sp/>rd_reg,<sp/>&amp;v_lo);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>r<sp/>&amp;=<sp/><ref refid="usrp__prims__common_8cc_1ab68e752026fa29aab0b24b31d440cbe3" kindref="member">usrp_9862_read</ref><sp/>(udh,<sp/>which_codec,<sp/>rd_reg<sp/>+<sp/>1,<sp/>&amp;v_hi);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>((v_hi<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>((v_lo<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x3))<sp/>&lt;&lt;<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>as<sp/>12-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_to_i2c_addr<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(slot){</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_TX_A:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>I2C_ADDR_TX_A;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_RX_A:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>I2C_ADDR_RX_A;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_TX_B:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>I2C_ADDR_TX_B;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLOT_RX_B:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>I2C_ADDR_RX_B;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal">set_chksum<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DB_EEPROM_CLEN<sp/>-<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>buf[i];</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>buf[i]<sp/>=<sp/>-sum;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319" kindref="member">usrp_dbeeprom_status_t</ref></highlight></codeline>
<codeline lineno="1157"><highlight class="normal">read_dboard_eeprom<sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_id,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2c_addr<sp/>=<sp/>slot_to_i2c_addr<sp/>(slot_id);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i2c_addr<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319ad40e7b8cbbd8ffbac091eaf5a3d5f800" kindref="member">UDBE_BAD_SLOT</ref>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="usrp__prims__common_8cc_1afe37e9b1905cf7dc986c6c992d5f35a0" kindref="member">usrp_eeprom_read</ref><sp/>(udh,<sp/>i2c_addr,<sp/>0,<sp/>buf,<sp/>DB_EEPROM_CLEN))</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a52291acb7ae7f8b6ca4cc43a2a0c1444" kindref="member">UDBE_NO_EEPROM</ref>;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[DB_EEPROM_MAGIC]<sp/>!=<sp/>DB_EEPROM_MAGIC_VALUE)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a065b565a87b98cdb159a36fdbbbdc4a3" kindref="member">UDBE_INVALID_EEPROM</ref>;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DB_EEPROM_CLEN;<sp/>i++)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>buf[i];</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sum<sp/>&amp;<sp/>0xff)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a065b565a87b98cdb159a36fdbbbdc4a3" kindref="member">UDBE_INVALID_EEPROM</ref>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a4511bf9a250718650f856819ec07132a" kindref="member">UDBE_OK</ref>;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319" kindref="member">usrp_dbeeprom_status_t</ref></highlight></codeline>
<codeline lineno="1181" refid="usrp__prims__common_8cc_1a2bc4729b18234e966aadf42d50b882d6" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a2bc4729b18234e966aadf42d50b882d6" kindref="member">usrp_read_dboard_eeprom</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_id,<sp/><ref refid="structusrp__dboard__eeprom" kindref="compound">usrp_dboard_eeprom</ref><sp/>*eeprom)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[DB_EEPROM_CLEN];</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>memset<sp/>(eeprom,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(*eeprom));</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319" kindref="member">usrp_dbeeprom_status_t</ref><sp/>s<sp/>=<sp/>read_dboard_eeprom<sp/>(udh,<sp/>slot_id,<sp/>buf);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>!=<sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a4511bf9a250718650f856819ec07132a" kindref="member">UDBE_OK</ref>)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>eeprom-&gt;<ref refid="structusrp__dboard__eeprom_1abb084f9acf442d8b439c8e13479d0618" kindref="member">id</ref><sp/>=<sp/>(buf[DB_EEPROM_ID_MSB]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>buf[DB_EEPROM_ID_LSB];</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>eeprom-&gt;<ref refid="structusrp__dboard__eeprom_1a644392481788aabc0226af00d4371124" kindref="member">oe</ref><sp/>=<sp/>(buf[DB_EEPROM_OE_MSB]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>buf[DB_EEPROM_OE_LSB];</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>eeprom-&gt;<ref refid="structusrp__dboard__eeprom_1a55332624480ff6273a9910686286fab1" kindref="member">offset</ref>[0]<sp/>=<sp/>(buf[DB_EEPROM_OFFSET_0_MSB]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>buf[DB_EEPROM_OFFSET_0_LSB];</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>eeprom-&gt;<ref refid="structusrp__dboard__eeprom_1a55332624480ff6273a9910686286fab1" kindref="member">offset</ref>[1]<sp/>=<sp/>(buf[DB_EEPROM_OFFSET_1_MSB]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>buf[DB_EEPROM_OFFSET_1_LSB];</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a4511bf9a250718650f856819ec07132a" kindref="member">UDBE_OK</ref>;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201" refid="usrp__prims__common_8cc_1a36dee270c322aa161718efe0008e79bd" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1a36dee270c322aa161718efe0008e79bd" kindref="member">usrp_write_dboard_offsets</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot_id,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>offset0,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>offset1)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[DB_EEPROM_CLEN];</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319" kindref="member">usrp_dbeeprom_status_t</ref><sp/>s<sp/>=<sp/>read_dboard_eeprom<sp/>(udh,<sp/>slot_id,<sp/>buf);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>!=<sp/><ref refid="usrp__prims_8h_1aff88561a43ab4eb5a12f1f6b6e1a5319a4511bf9a250718650f856819ec07132a" kindref="member">UDBE_OK</ref>)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>buf[DB_EEPROM_OFFSET_0_LSB]<sp/>=<sp/>(offset0<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>buf[DB_EEPROM_OFFSET_0_MSB]<sp/>=<sp/>(offset0<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>buf[DB_EEPROM_OFFSET_1_LSB]<sp/>=<sp/>(offset1<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>buf[DB_EEPROM_OFFSET_1_MSB]<sp/>=<sp/>(offset1<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>set_chksum<sp/>(buf);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims__common_8cc_1a452984e181f220c9ed68f0f93d9831ee" kindref="member">usrp_eeprom_write</ref><sp/>(udh,<sp/>slot_to_i2c_addr<sp/>(slot_id),</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buf));</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="1223" refid="usrp__prims__common_8cc_1ae687fb1de69502d465285db77cfe3830" refkind="member"><highlight class="normal"><ref refid="usrp__prims__common_8cc_1ae687fb1de69502d465285db77cfe3830" kindref="member">usrp_serial_number</ref>(<ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><ref refid="libusb__types_8h_1ac5e93e2ccaee6015c0e06cbb7bba88e4" kindref="member">libusb_device_descriptor</ref><sp/>desc<sp/>=</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrp__prims__libusb0_8cc_1af38af19bb9cf384e358bb63c9a7204f8" kindref="member">_get_usb_device_descriptor</ref><sp/>(<ref refid="usrp__prims__libusb0_8cc_1ab425dbdad132f9c06cad9bac93f36491" kindref="member">_get_usb_device</ref><sp/>(udh));</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>iserial<sp/>=<sp/>desc.iSerialNumber;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iserial<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[1024];</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims__libusb0_8cc_1ab7ec110cdc532509b7e8159acaf5e899" kindref="member">_get_usb_string_descriptor</ref><sp/>(udh,<sp/>iserial,<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>buf;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_prims_common.cc"/>
  </compounddef>
</doxygen>
