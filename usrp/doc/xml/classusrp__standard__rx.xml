<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classusrp__standard__rx" kind="class" language="C++" prot="public">
    <compoundname>usrp_standard_rx</compoundname>
    <basecompoundref refid="classusrp__basic__rx" prot="public" virt="non-virtual">usrp_basic_rx</basecompoundref>
    <basecompoundref refid="classusrp__standard__common" prot="public" virt="non-virtual">usrp_standard_common</basecompoundref>
    <includes refid="usrp__standard_8h" local="no">usrp_standard.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classusrp__standard__rx_1abd44967b82563f9b3eafe9c91c929c0e" prot="public" static="no">
        <name>@1</name>
        <enumvalue id="classusrp__standard__rx_1abd44967b82563f9b3eafe9c91c929c0ead3f99a72b4201bac21d8c103eff81568" prot="public">
          <name>FPGA_MODE_NORMAL</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classusrp__standard__rx_1abd44967b82563f9b3eafe9c91c929c0eadc8004f6da0507be39531d73039011f8" prot="public">
          <name>FPGA_MODE_LOOPBACK</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classusrp__standard__rx_1abd44967b82563f9b3eafe9c91c929c0ea5749d17a9377d91ea89fc6b8f94620b9" prot="public">
          <name>FPGA_MODE_COUNTING</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classusrp__standard__rx_1abd44967b82563f9b3eafe9c91c929c0ea26cf58fafbdee14b54d0eef63660332e" prot="public">
          <name>FPGA_MODE_COUNTING_32BIT</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="117" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" bodystart="117" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classusrp__standard__rx_1a7066c4cfc6375dcecf2648ab090d1ae6" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int usrp_standard_rx::MAX_CHAN</definition>
        <argsstring></argsstring>
        <name>MAX_CHAN</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="94" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classusrp__standard__rx_1a2f188546756b02bbaeaa05ad9db5b964" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int usrp_standard_rx::d_decim_rate</definition>
        <argsstring></argsstring>
        <name>d_decim_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="95" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classusrp__standard__rx_1a1bcbd1e3865f6c7b3e48ee8d314e4761" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int usrp_standard_rx::d_nchan</definition>
        <argsstring></argsstring>
        <name>d_nchan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="96" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classusrp__standard__rx_1af18447042918d481d5f1254e037afbd2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int usrp_standard_rx::d_sw_mux</definition>
        <argsstring></argsstring>
        <name>d_sw_mux</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="97" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classusrp__standard__rx_1ac9405bd8c4874c01f3cd8a2e6e21c26a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int usrp_standard_rx::d_hw_mux</definition>
        <argsstring></argsstring>
        <name>d_hw_mux</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="98" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classusrp__standard__rx_1ad4276db87ba9689c54a614924074284e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double usrp_standard_rx::d_rx_freq[MAX_CHAN]</definition>
        <argsstring>[MAX_CHAN]</argsstring>
        <name>d_rx_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="99" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>usrp_standard_rx::usrp_standard_rx</definition>
        <argsstring>(int which_board, unsigned int decim_rate, int nchan=1, int mux=-1, int mode=0, int fusb_block_size=0, int fusb_nblocks=0, const std::string fpga_filename=&quot;&quot;, const std::string firmware_filename=&quot;&quot;)</argsstring>
        <name>usrp_standard_rx</name>
        <param>
          <type>int</type>
          <declname>which_board</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>decim_rate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nchan</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>mux</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>fusb_block_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>fusb_nblocks</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::string</type>
          <declname>fpga_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string</type>
          <declname>firmware_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="102" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="315" bodyend="352"/>
        <references refid="classusrp__standard__rx_1ae77c37e8be21095bb6add76e1c261121" compoundref="usrp__standard_8cc" startline="732" endline="744">make_format</references>
        <references refid="classusrp__standard__rx_1a71a1352e5b799f798ea528a09f240b7d" compoundref="usrp__standard_8cc" startline="688" endline="694">set_ddc_phase</references>
        <references refid="classusrp__standard__rx_1af75a82a32f50117b4acfe518b0c31e89" compoundref="usrp__standard_8cc" startline="404" endline="428">set_decim_rate</references>
        <references refid="classusrp__standard__rx_1ad196898bb518333f3ce753905d3cfd0a" compoundref="usrp__standard_8cc" startline="715" endline="721">set_format</references>
        <references refid="classusrp__standard__rx_1aafcd5898e3cddfaacd0535a6a678aafd" compoundref="usrp__standard_8cc" startline="682" endline="685">set_fpga_mode</references>
        <references refid="classusrp__standard__rx_1aa98b7831a644635f19ee84a7ecd404b2" compoundref="usrp__standard_8cc" startline="518" endline="527">set_mux</references>
        <references refid="classusrp__standard__rx_1a9ab9aa92005647b967d063003a841ca0" compoundref="usrp__standard_8cc" startline="430" endline="441">set_nchannels</references>
        <references refid="classusrp__standard__rx_1a4f3584afcc01962580cf420015d93cda" compoundref="usrp__standard_8cc" startline="650" endline="661">set_rx_freq</references>
        <referencedby refid="classusrp__standard__rx_1a988775e6036abf58339c689d94b3bcf5" compoundref="usrp__standard_8cc" startline="381" endline="401">make</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a182048083827bf3e2efddb918677e51e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::write_hw_mux_reg</definition>
        <argsstring>()</argsstring>
        <name>write_hw_mux_reg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="113" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="530" bodyend="536"/>
        <references refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" compoundref="usrp__basic_8cc" startline="380" endline="391">usrp_basic::_write_fpga_reg</references>
        <references refid="classusrp__basic__rx_1aec8c94d230440bb38951e9718755b994" compoundref="usrp__basic_8cc" startline="969" endline="975">usrp_basic_rx::disable_rx</references>
        <references refid="classusrp__basic__rx_1a15a44f86a1a019e94d18f3c19b4cd34a" compoundref="usrp__basic_8cc" startline="979" endline="983">usrp_basic_rx::restore_rx</references>
        <referencedby refid="classusrp__standard__rx_1aa98b7831a644635f19ee84a7ecd404b2" compoundref="usrp__standard_8cc" startline="518" endline="527">set_mux</referencedby>
        <referencedby refid="classusrp__standard__rx_1a9ab9aa92005647b967d063003a841ca0" compoundref="usrp__standard_8cc" startline="430" endline="441">set_nchannels</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classusrp__standard__rx_1a51b7fde714bddf8bc2352172f07f42df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>usrp_standard_rx::~usrp_standard_rx</definition>
        <argsstring>()</argsstring>
        <name>~usrp_standard_rx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="124" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1af75a82a32f50117b4acfe518b0c31e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::set_decim_rate</definition>
        <argsstring>(unsigned int rate)</argsstring>
        <name>set_decim_rate</name>
        <param>
          <type>unsigned int</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Set decimator rate. <computeroutput>rate</computeroutput> MUST BE EVEN and in [8, 256]. </para>        </briefdescription>
        <detaileddescription>
<para>The final complex sample rate across the USB is adc_freq () / decim_rate () * nchannels () </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="156" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="404" bodyend="428"/>
        <references refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" compoundref="usrp__basic_8cc" startline="380" endline="391">usrp_basic::_write_fpga_reg</references>
        <references refid="classusrp__basic__rx_1ace4aa6537246ecf948ec0ae35e1d6e48" compoundref="usrp__basic_8h" startline="849" endline="849">usrp_basic_rx::adc_rate</references>
        <references refid="classusrp__basic__rx_1aec8c94d230440bb38951e9718755b994" compoundref="usrp__basic_8cc" startline="969" endline="975">usrp_basic_rx::disable_rx</references>
        <references refid="classusrp__standard__common_1ac259e77beebe73376a45b6116ab845e1" compoundref="usrp__standard_8cc" startline="281" endline="284">usrp_standard_common::has_rx_halfband</references>
        <references refid="classusrp__standard__rx_1a0ad5d52ec8a7c7270e6248614ae0a4a4" compoundref="usrp__standard_8cc" startline="667" endline="667">nchannels</references>
        <references refid="classusrp__basic__rx_1a15a44f86a1a019e94d18f3c19b4cd34a" compoundref="usrp__basic_8cc" startline="979" endline="983">usrp_basic_rx::restore_rx</references>
        <references refid="classusrp__basic_1a77535750946e7d8443a76941a9611cae" compoundref="usrp__basic_8cc" startline="229" endline="233">usrp_basic::set_usb_data_rate</references>
        <referencedby refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" compoundref="usrp__standard_8cc" startline="315" endline="352">usrp_standard_rx</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a9ab9aa92005647b967d063003a841ca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::set_nchannels</definition>
        <argsstring>(int nchannels)</argsstring>
        <name>set_nchannels</name>
        <param>
          <type>int</type>
          <declname>nchannels</declname>
        </param>
        <briefdescription>
<para>Set number of active channels. <computeroutput>nchannels</computeroutput> must be 1, 2 or 4. </para>        </briefdescription>
        <detaileddescription>
<para>The final complex sample rate across the USB is adc_freq () / decim_rate () * nchannels () </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="164" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="430" bodyend="441"/>
        <references refid="classusrp__standard__common_1a07b889dbe4fecd870f40ddf2401948c6" compoundref="usrp__standard_8cc" startline="287" endline="290">usrp_standard_common::nddcs</references>
        <references refid="classusrp__standard__rx_1a182048083827bf3e2efddb918677e51e" compoundref="usrp__standard_8cc" startline="530" endline="536">write_hw_mux_reg</references>
        <referencedby refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" compoundref="usrp__standard_8cc" startline="315" endline="352">usrp_standard_rx</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1aa98b7831a644635f19ee84a7ecd404b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::set_mux</definition>
        <argsstring>(int mux)</argsstring>
        <name>set_mux</name>
        <param>
          <type>int</type>
          <declname>mux</declname>
        </param>
        <briefdescription>
<para>Set input mux configuration. </para>        </briefdescription>
        <detaileddescription>
<para>This determines which ADC (or constant zero) is connected to each DDC input. There are 4 DDCs. Each has two inputs.</para><para><preformatted>
Mux value:</preformatted></para><para><preformatted>   3                   2                   1                       
 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+
|   Q3  |   I3  |   Q2  |   I2  |   Q1  |   I1  |   Q0  |   I0  |
+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+----<mdash/>+</preformatted></para><para><preformatted>Each 4-bit I field is either 0,1,2,3
Each 4-bit Q field is either 0,1,2,3 or 0xf (input is const zero)
All Q&apos;s must be 0xf or none of them may be 0xf
</preformatted> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="186" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="518" bodyend="527"/>
        <references refid="classusrp__standard__rx_1a5705205822065977c5e777aafe5c203f" compoundref="usrp__standard_8cc" startline="670" endline="670">mux</references>
        <references refid="classusrp__standard__rx_1a182048083827bf3e2efddb918677e51e" compoundref="usrp__standard_8cc" startline="530" endline="536">write_hw_mux_reg</references>
        <referencedby refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" compoundref="usrp__standard_8cc" startline="315" endline="352">usrp_standard_rx</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a1b1d513ec9017203d3d2eede645093d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int usrp_standard_rx::determine_rx_mux_value</definition>
        <argsstring>(const usrp_subdev_spec &amp;ss)</argsstring>
        <name>determine_rx_mux_value</name>
        <param>
          <type>const <ref refid="structusrp__subdev__spec" kindref="compound">usrp_subdev_spec</ref> &amp;</type>
          <declname>ss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the appropriate Rx mux value as a function of the subdevice choosen and the characteristics of the respective daughterboard. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="192" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="539" bodyend="633"/>
        <references refid="classusrp__basic_1a8eb1f58ca819437d7f43ad87574bd6da" compoundref="usrp__basic_8h" startline="154" endline="154">usrp_basic::db</references>
        <references refid="classusrp__basic_1a61af504df443a9d846ecf909871f1481" compoundref="usrp__basic_8cc" startline="196" endline="205">usrp_basic::is_valid</references>
        <references refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" compoundref="usrp__subdev__spec_8h" startline="43">usrp_subdev_spec::side</references>
        <references refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" compoundref="usrp__subdev__spec_8h" startline="44">usrp_subdev_spec::subdev</references>
        <referencedby refid="classusrp__standard__rx_1abfe3924bcd4da66e431bac0d20a99bf4" compoundref="usrp__standard_8cc" startline="636" endline="647">determine_rx_mux_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1abfe3924bcd4da66e431bac0d20a99bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int usrp_standard_rx::determine_rx_mux_value</definition>
        <argsstring>(const usrp_subdev_spec &amp;ss_a, const usrp_subdev_spec &amp;ss_b)</argsstring>
        <name>determine_rx_mux_value</name>
        <param>
          <type>const <ref refid="structusrp__subdev__spec" kindref="compound">usrp_subdev_spec</ref> &amp;</type>
          <declname>ss_a</declname>
        </param>
        <param>
          <type>const <ref refid="structusrp__subdev__spec" kindref="compound">usrp_subdev_spec</ref> &amp;</type>
          <declname>ss_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="193" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="636" bodyend="647"/>
        <references refid="classusrp__basic_1a8eb1f58ca819437d7f43ad87574bd6da" compoundref="usrp__basic_8h" startline="154" endline="154">usrp_basic::db</references>
        <references refid="classusrp__standard__rx_1a1b1d513ec9017203d3d2eede645093d5" compoundref="usrp__standard_8cc" startline="539" endline="633">determine_rx_mux_value</references>
        <references refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" compoundref="usrp__subdev__spec_8h" startline="43">usrp_subdev_spec::side</references>
        <references refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" compoundref="usrp__subdev__spec_8h" startline="44">usrp_subdev_spec::subdev</references>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a4f3584afcc01962580cf420015d93cda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::set_rx_freq</definition>
        <argsstring>(int channel, double freq)</argsstring>
        <name>set_rx_freq</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
<para>set the frequency of the digital down converter. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>channel</computeroutput> must be in the range [0,3]. <computeroutput>freq</computeroutput> is the center frequency in Hz. <computeroutput>freq</computeroutput> may be either negative or postive. The frequency specified is quantized. Use rx_freq to retrieve the actual value used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="203" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="650" bodyend="661"/>
        <references refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" compoundref="usrp__basic_8cc" startline="380" endline="391">usrp_basic::_write_fpga_reg</references>
        <references refid="classusrp__basic__rx_1ace4aa6537246ecf948ec0ae35e1d6e48" compoundref="usrp__basic_8h" startline="849" endline="849">usrp_basic_rx::adc_rate</references>
        <references refid="classusrp__basic_1a6d0fecbe64f35fef20293c27dc33a0b0" compoundref="usrp__basic_8h" startline="73">usrp_basic::d_verbose</references>
        <referencedby refid="classddc__control_1aeff5638c036ddde7234e41cb97d2af7e" compoundref="usrp__standard_8cc" startline="130" endline="130">ddc_control::set_dxc_freq</referencedby>
        <referencedby refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" compoundref="usrp__standard_8cc" startline="315" endline="352">usrp_standard_rx</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1aafcd5898e3cddfaacd0535a6a678aafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::set_fpga_mode</definition>
        <argsstring>(int mode)</argsstring>
        <name>set_fpga_mode</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>set fpga mode </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="208" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="682" bodyend="685"/>
        <references refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" compoundref="usrp__basic_8cc" startline="380" endline="391">usrp_basic::_write_fpga_reg</references>
        <referencedby refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" compoundref="usrp__standard_8cc" startline="315" endline="352">usrp_standard_rx</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a71a1352e5b799f798ea528a09f240b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::set_ddc_phase</definition>
        <argsstring>(int channel, int phase)</argsstring>
        <name>set_ddc_phase</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Set the digital down converter phase register. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>which ddc channel [0, 3] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phase</parametername>
</parameternamelist>
<parameterdescription>
<para>32-bit integer phase value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="216" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="688" bodyend="694"/>
        <references refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" compoundref="usrp__basic_8cc" startline="380" endline="391">usrp_basic::_write_fpga_reg</references>
        <references refid="classusrp__standard__rx_1a138542206516dba75c5c90af984dcf84" compoundref="usrp__standard_8cc" startline="724" endline="727">format</references>
        <references refid="classusrp__standard__rx_1ad5f82de396844f5e1864b6602f3f1066" compoundref="usrp__standard_8cc" startline="759" endline="762">format_want_q</references>
        <references refid="classusrp__standard__rx_1a7e7b2474c65673c9a68dfc8f08293399" compoundref="usrp__standard_8cc" startline="747" endline="750">format_width</references>
        <referencedby refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" compoundref="usrp__standard_8cc" startline="315" endline="352">usrp_standard_rx</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1ad196898bb518333f3ce753905d3cfd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::set_format</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>set_format</name>
        <param>
          <type>unsigned int</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Specify Rx data format. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>format specifier</para></parameterdescription>
</parameteritem>
</parameterlist>
Rx data format control register <verbatim>3                   2                   1                       
</verbatim> 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 +--------------------------------------<mdash/>+-+-+------<mdash/>+----<mdash/>+ | Reserved (Must be zero) |B|Q| WIDTH | SHIFT | +--------------------------------------<mdash/>+-+-+------<mdash/>+----<mdash/>+</para><para>SHIFT specifies arithmetic right shift [0, 15] WIDTH specifies bit-width of I &amp; Q samples across the USB [1, 16] (not all valid) Q if set deliver both I &amp; Q, else just I B if set bypass half-band filter.</para><para>Right now the acceptable values are:</para><para>B Q WIDTH SHIFT 0 1 16 0 0 1 8 8</para><para>More valid combos to come.</para><para>Default value is 0x00000300 16-bits, 0 shift, deliver both I &amp; Q. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="246" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="715" bodyend="721"/>
        <references refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" compoundref="usrp__basic_8cc" startline="380" endline="391">usrp_basic::_write_fpga_reg</references>
        <referencedby refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" compoundref="usrp__standard_8cc" startline="315" endline="352">usrp_standard_rx</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a261d53e643bfc5e6bdaa2f84a070bd42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::tune</definition>
        <argsstring>(int chan, db_base_sptr db, double target_freq, usrp_tune_result *result)</argsstring>
        <name>tune</name>
        <param>
          <type>int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type><ref refid="db__base_8h_1a61ead10400f658a22128a321e14ae0ac" kindref="member">db_base_sptr</ref></type>
          <declname>db</declname>
        </param>
        <param>
          <type>double</type>
          <declname>target_freq</declname>
        </param>
        <param>
          <type><ref refid="classusrp__tune__result" kindref="compound">usrp_tune_result</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>High-level &quot;tune&quot; method. Works for the single channel case. </para>        </briefdescription>
        <detaileddescription>
<para>This method adjusts both the daughterboard LO and the DDC so that target_freq ends up at DC in the complex baseband samples.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>which DDC channel we&apos;re controlling (almost always 0). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>the daughterboard we&apos;re controlling. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>the RF frequency we want at DC in the complex baseband. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>details how the hardware was configured.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true iff everything was successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="268" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="771" bodyend="775"/>
        <references refid="classusrp__basic__rx_1afd14b376f2449cfb71865c9980ea2358" compoundref="usrp__basic_8h" startline="848" endline="848">usrp_basic_rx::converter_rate</references>
        <references refid="classusrp__standard__rx_1a5705205822065977c5e777aafe5c203f" compoundref="usrp__standard_8cc" startline="670" endline="670">mux</references>
        <references refid="ad9862_8h_1a861fc9efe0664fb4919b7462f3a0cc62" compoundref="ad9862_8h" startline="112">REG_TX_DIGITAL</references>
        <references refid="ad9862_8h_1a64212ab1643d072de2877248bb010199" compoundref="ad9862_8h" startline="101">REG_TX_IF</references>
        <references refid="ad9862_8h_1a97ea7098bcbce7bf382ddc2cd43f8612" compoundref="ad9862_8h" startline="113">TX_DIGITAL_2_DATA_PATHS</references>
        <references refid="ad9862_8h_1a7823099404205d27bedf6e6e04a986fd" compoundref="ad9862_8h" startline="118">TX_DIGITAL_INTERPOLATE_4X</references>
        <references refid="ad9862_8h_1add5298bf21c56b73c9d7b490c0a4ffc2" compoundref="ad9862_8h" startline="107">TX_IF_2S_COMP</references>
        <references refid="ad9862_8h_1a4b09647010c4cf3c02e1b9bde5b1fe77" compoundref="ad9862_8h" startline="104">TX_IF_I_FIRST</references>
        <references refid="ad9862_8h_1a35fc219ef4a13e86fe341c03bb58f5bd" compoundref="ad9862_8h" startline="110">TX_IF_INTERLEAVED</references>
        <references refid="ad9862_8h_1ad44bf63997b0429defd378a9a53297b5" compoundref="ad9862_8h" startline="103">TX_IF_USE_CLKOUT1</references>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1ab92676b3ff5e472846e957f95c3374e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int usrp_standard_rx::decim_rate</definition>
        <argsstring>() const </argsstring>
        <name>decim_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="272" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="664" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a1b8044ecae8a8acc9bb84e40dce4076e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double usrp_standard_rx::rx_freq</definition>
        <argsstring>(int channel) const </argsstring>
        <name>rx_freq</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="273" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="673" bodyend="679"/>
        <referencedby refid="classddc__control_1af60db2ff15829832aaddec9ccca2ab14" compoundref="usrp__standard_8cc" startline="131" endline="131">ddc_control::dxc_freq</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a0ad5d52ec8a7c7270e6248614ae0a4a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int usrp_standard_rx::nchannels</definition>
        <argsstring>() const </argsstring>
        <name>nchannels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="274" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="667" bodyend="667"/>
        <referencedby refid="classusrp__standard__rx_1af75a82a32f50117b4acfe518b0c31e89" compoundref="usrp__standard_8cc" startline="404" endline="428">set_decim_rate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a5705205822065977c5e777aafe5c203f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int usrp_standard_rx::mux</definition>
        <argsstring>() const </argsstring>
        <name>mux</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="275" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="670" bodyend="670"/>
        <referencedby refid="classusrp__standard__rx_1aa98b7831a644635f19ee84a7ecd404b2" compoundref="usrp__standard_8cc" startline="518" endline="527">set_mux</referencedby>
        <referencedby refid="classusrp__standard__rx_1a261d53e643bfc5e6bdaa2f84a070bd42" compoundref="usrp__standard_8cc" startline="771" endline="775">tune</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a138542206516dba75c5c90af984dcf84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int usrp_standard_rx::format</definition>
        <argsstring>() const </argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="276" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="724" bodyend="727"/>
        <references refid="classusrp__basic_1af3d08c8bcdd0ed116e76ffa5449004f2" compoundref="usrp__basic_8h" startline="77">usrp_basic::d_fpga_shadows</references>
        <referencedby refid="classusrp__standard__rx_1ae77c37e8be21095bb6add76e1c261121" compoundref="usrp__standard_8cc" startline="732" endline="744">make_format</referencedby>
        <referencedby refid="classusrp__standard__rx_1a71a1352e5b799f798ea528a09f240b7d" compoundref="usrp__standard_8cc" startline="688" endline="694">set_ddc_phase</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1ac97772bce1c0aaca0fee2462accd8123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="279" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="360" bodyend="368"/>
        <references refid="classusrp__basic__rx_1a6097b0d8b2cac9a67237368d1a81b7f4" compoundref="usrp__basic_8cc" startline="849" endline="867">usrp_basic_rx::start</references>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a545808dbbdc7de3331123e7af6021144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="280" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="371" bodyend="378"/>
        <references refid="classusrp__basic__rx_1a094cb05d34da15711c6ca5c4b24defe9" compoundref="usrp__basic_8cc" startline="870" endline="885">usrp_basic_rx::stop</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classusrp__standard__rx_1a988775e6036abf58339c689d94b3bcf5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="usrp__standard_8h_1a987bd3ee218650a56a698f797f349596" kindref="member">usrp_standard_rx_sptr</ref></type>
        <definition>usrp_standard_rx_sptr usrp_standard_rx::make</definition>
        <argsstring>(int which_board, unsigned int decim_rate, int nchan=1, int mux=-1, int mode=0, int fusb_block_size=0, int fusb_nblocks=0, const std::string fpga_filename=&quot;&quot;, const std::string firmware_filename=&quot;&quot;)</argsstring>
        <name>make</name>
        <param>
          <type>int</type>
          <declname>which_board</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>decim_rate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nchan</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>mux</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>fusb_block_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>fusb_nblocks</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::string</type>
          <declname>fpga_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string</type>
          <declname>firmware_filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>invokes constructor, returns shared_ptr or shared_ptr equivalent of 0 if trouble </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>which_board</parametername>
</parameternamelist>
<parameterdescription>
<para>Which USRP board on usb (not particularly useful; use 0) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decim_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>decimation factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nchan</parametername>
</parameternamelist>
<parameterdescription>
<para>number of channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mux</parametername>
</parameternamelist>
<parameterdescription>
<para>Rx mux setting, </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classusrp__standard__rx_1aa98b7831a644635f19ee84a7ecd404b2" kindref="member">set_mux</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fusb_block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>fast usb xfer block size. Must be a multiple of 512. Use zero for a reasonable default. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fusb_nblocks</parametername>
</parameternamelist>
<parameterdescription>
<para>number of fast usb URBs to allocate. Use zero for a reasonable default. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fpga_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of rbf file to load </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firmware_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of ihx file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="140" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="381" bodyend="401"/>
        <references refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" compoundref="usrp__standard_8cc" startline="315" endline="352">usrp_standard_rx</references>
        <referencedby refid="test__usrp__standard__rx_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="test__usrp__standard__rx_8cc" startline="83" endline="217">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1ae77c37e8be21095bb6add76e1c261121" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int usrp_standard_rx::make_format</definition>
        <argsstring>(int width=16, int shift=0, bool want_q=true, bool bypass_halfband=false)</argsstring>
        <name>make_format</name>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>16</defval>
        </param>
        <param>
          <type>int</type>
          <declname>shift</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>want_q</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bypass_halfband</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="248" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="732" bodyend="744"/>
        <references refid="classusrp__standard__rx_1a138542206516dba75c5c90af984dcf84" compoundref="usrp__standard_8cc" startline="724" endline="727">format</references>
        <referencedby refid="test__usrp__standard__rx_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="test__usrp__standard__rx_8cc" startline="83" endline="217">main</referencedby>
        <referencedby refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" compoundref="usrp__standard_8cc" startline="315" endline="352">usrp_standard_rx</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a7e7b2474c65673c9a68dfc8f08293399" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int usrp_standard_rx::format_width</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>format_width</name>
        <param>
          <type>unsigned int</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="250" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="747" bodyend="750"/>
        <referencedby refid="classusrp__standard__rx_1a71a1352e5b799f798ea528a09f240b7d" compoundref="usrp__standard_8cc" startline="688" endline="694">set_ddc_phase</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a15cc1572f31cd9b0436dbc4aaad4b634" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int usrp_standard_rx::format_shift</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>format_shift</name>
        <param>
          <type>unsigned int</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="251" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="753" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1ad5f82de396844f5e1864b6602f3f1066" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::format_want_q</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>format_want_q</name>
        <param>
          <type>unsigned int</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="252" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="759" bodyend="762"/>
        <referencedby refid="classusrp__standard__rx_1a71a1352e5b799f798ea528a09f240b7d" compoundref="usrp__standard_8cc" startline="688" endline="694">set_ddc_phase</referencedby>
      </memberdef>
      <memberdef kind="function" id="classusrp__standard__rx_1a8bc4f06d059eff8bc6bc3766d89b5d41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usrp_standard_rx::format_bypass_halfband</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>format_bypass_halfband</name>
        <param>
          <type>unsigned int</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="253" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="765" bodyend="768"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The C++ interface the receive side of the USRP</para><para>This is the recommended interface to USRP receive functionality for applications that use the USRP but not GNU Radio. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="916">
        <label>boost::noncopyable</label>
      </node>
      <node id="917">
        <label>usrp_standard_common</label>
        <link refid="classusrp__standard__common"/>
      </node>
      <node id="914">
        <label>usrp_basic_rx</label>
        <link refid="classusrp__basic__rx"/>
        <childnode refid="915" relation="public-inheritance">
        </childnode>
      </node>
      <node id="913">
        <label>usrp_standard_rx</label>
        <link refid="classusrp__standard__rx"/>
        <childnode refid="914" relation="public-inheritance">
        </childnode>
        <childnode refid="917" relation="public-inheritance">
        </childnode>
      </node>
      <node id="915">
        <label>usrp_basic</label>
        <link refid="classusrp__basic"/>
        <childnode refid="916" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="921">
        <label>boost::noncopyable</label>
      </node>
      <node id="923">
        <label>usrp_standard_common</label>
        <link refid="classusrp__standard__common"/>
      </node>
      <node id="919">
        <label>usrp_basic_rx</label>
        <link refid="classusrp__basic__rx"/>
        <childnode refid="920" relation="public-inheritance">
        </childnode>
      </node>
      <node id="922">
        <label>usb_dev_handle</label>
        <link refid="structusb__dev__handle"/>
      </node>
      <node id="918">
        <label>usrp_standard_rx</label>
        <link refid="classusrp__standard__rx"/>
        <childnode refid="919" relation="public-inheritance">
        </childnode>
        <childnode refid="923" relation="public-inheritance">
        </childnode>
      </node>
      <node id="920">
        <label>usrp_basic</label>
        <link refid="classusrp__basic"/>
        <childnode refid="921" relation="private-inheritance">
        </childnode>
        <childnode refid="922" relation="usage">
          <edgelabel>d_udh</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" line="92" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/include/usrp/usrp_standard.h" bodystart="91" bodyend="281"/>
    <listofallmembers>
      <member refid="classusrp__basic_1a09ce78134eea035e42464123356096e4" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_common_write_oe</name></member>
      <member refid="classusrp__basic_1a3814dc28edce07e3b5cb48bb3ebdf244" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_read_9862</name></member>
      <member refid="classusrp__basic_1ad28278c9ff7a33b3a151c561ab037b9f" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_read_9862</name></member>
      <member refid="classusrp__basic_1a8f92d2e9630ec614eedc61858756cce1" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_read_aux_adc</name></member>
      <member refid="classusrp__basic_1a2aadef5c105459794b22a135730e7480" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_read_aux_adc</name></member>
      <member refid="classusrp__basic_1a4fa26bd8164bd5782adf7fbe00b3d411" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_read_fpga_reg</name></member>
      <member refid="classusrp__basic_1abf1f167a1c96dd0ed4589afc6c9fad6c" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_read_fpga_reg</name></member>
      <member refid="classusrp__basic_1a9b54622fec87c2ed9c7808078931371f" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_read_spi</name></member>
      <member refid="classusrp__basic_1a4585f9c7df7084a6acb29bd6d7950892" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_set_led</name></member>
      <member refid="classusrp__basic_1a8a25444c83f59f7517d0ff687d2ff053" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_write_9862</name></member>
      <member refid="classusrp__basic_1ab8870a35e0bdc63ee6655b5264a6d142" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_write_aux_dac</name></member>
      <member refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_write_fpga_reg</name></member>
      <member refid="classusrp__basic_1a0c200dc2d39d68d7a77e92859c5228a0" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_write_fpga_reg_masked</name></member>
      <member refid="classusrp__basic__rx_1a83f39a101787d86a0850e72499286c00" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>_write_oe</name></member>
      <member refid="classusrp__basic_1aaf100fafc406ef75faafcf3e38df7849" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>_write_spi</name></member>
      <member refid="classusrp__basic__rx_1ace4aa6537246ecf948ec0ae35e1d6e48" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>adc_rate</name></member>
      <member refid="classusrp__basic__rx_1ab42bca6a45be1e18e074b494905db7db" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>block_size</name></member>
      <member refid="classusrp__standard__common_1a9452b1ce5881965ca36d780f928b6cb6" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>calc_dxc_freq</name></member>
      <member refid="classusrp__basic_1ac25d56e74572309a87397f0fce1a102b" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_pga</name></member>
      <member refid="classusrp__basic_1a06cfd0e5675618f773c5466bd235a369" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_pga_db_per_step</name></member>
      <member refid="classusrp__basic_1a7dd5c384b9d2cd4e412939c3b7b7ac79" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_pga_max</name></member>
      <member refid="classusrp__basic_1a95453e5bb4d0ed4c05b1ea64c880170a" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_pga_min</name></member>
      <member refid="classusrp__basic_1a37bd03473a98cf3776f1988914c1a5ce" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_read_aux_adc</name></member>
      <member refid="classusrp__basic_1ab84d66e92dc16fdc104fae9341f1e64f" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_read_aux_adc</name></member>
      <member refid="classusrp__basic_1af7e33b5762cd9c80a714806fa6fa2244" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_read_io</name></member>
      <member refid="classusrp__basic_1a217f6865ef04d1111c2c1d3e7b4260f5" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_read_io</name></member>
      <member refid="classusrp__basic_1a52f96a90c91ed6e74bfc6a91691a7fa2" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_set_pga</name></member>
      <member refid="classusrp__basic_1a0997e93568c71e5432c2445b1ebcc991" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_write_atr_mask</name></member>
      <member refid="classusrp__basic_1a89eda6a96bc7f4d2d634da793eccbc20" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_write_atr_rxval</name></member>
      <member refid="classusrp__basic_1a26e38a0f9f98390b712709812e3387af" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_write_atr_txval</name></member>
      <member refid="classusrp__basic_1ac7354a9c4f7e961cb1b541c970a8d009" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_write_aux_dac</name></member>
      <member refid="classusrp__basic_1acf3120592af4df79d38d253c98c633ae" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_write_io</name></member>
      <member refid="classusrp__basic_1ad673bc49b311e29ab01727c5933ea028" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>common_write_refclk</name></member>
      <member refid="classusrp__basic__rx_1afd14b376f2449cfb71865c9980ea2358" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>converter_rate</name></member>
      <member refid="classusrp__basic_1a1d6b6839b9ba385d93684c3497c3fb16" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_bytes_per_poll</name></member>
      <member refid="classusrp__basic_1a747a3cfca6d00b8d2960b4692ae36bc2" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_ctx</name></member>
      <member refid="classusrp__basic_1aa45df525ed16ee0c885a4972ac7908b4" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_db</name></member>
      <member refid="classusrp__basic_1a686ea66e3f43c9ab6df60bd80f41ac3b" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_dbid</name></member>
      <member refid="classusrp__standard__rx_1a2f188546756b02bbaeaa05ad9db5b964" prot="private" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_decim_rate</name></member>
      <member refid="classusrp__basic_1afa81d2ee842dd6eef04c422276f52d1d" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_fpga_master_clock_freq</name></member>
      <member refid="classusrp__basic_1af3d08c8bcdd0ed116e76ffa5449004f2" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_fpga_shadows</name></member>
      <member refid="classusrp__standard__rx_1ac9405bd8c4874c01f3cd8a2e6e21c26a" prot="private" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_hw_mux</name></member>
      <member refid="classusrp__standard__rx_1a1bcbd1e3865f6c7b3e48ee8d314e4761" prot="private" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_nchan</name></member>
      <member refid="classusrp__standard__rx_1ad4276db87ba9689c54a614924074284e" prot="private" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_rx_freq</name></member>
      <member refid="classusrp__standard__rx_1af18447042918d481d5f1254e037afbd2" prot="private" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_sw_mux</name></member>
      <member refid="classusrp__basic_1aad5f6f17a9fde484c67e7dbdd0491f74" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_udh</name></member>
      <member refid="classusrp__basic_1a4e5297f0010c8f39cfe4fff838b113a4" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_usb_data_rate</name></member>
      <member refid="classusrp__basic_1a6d0fecbe64f35fef20293c27dc33a0b0" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>d_verbose</name></member>
      <member refid="classusrp__basic__rx_1a34128f4864ece7fafc011786c42b9994" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>daughterboard_id</name></member>
      <member refid="classusrp__basic_1a8eb1f58ca819437d7f43ad87574bd6da" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>db</name></member>
      <member refid="classusrp__basic_1a9e3dfe1821b5aa2438a014fd7ca579f4" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>db</name></member>
      <member refid="classusrp__standard__rx_1ab92676b3ff5e472846e957f95c3374e5" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>decim_rate</name></member>
      <member refid="classusrp__standard__rx_1a1b1d513ec9017203d3d2eede645093d5" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>determine_rx_mux_value</name></member>
      <member refid="classusrp__standard__rx_1abfe3924bcd4da66e431bac0d20a99bf4" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>determine_rx_mux_value</name></member>
      <member refid="classusrp__basic__rx_1aec8c94d230440bb38951e9718755b994" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>disable_rx</name></member>
      <member refid="classusrp__standard__rx_1a138542206516dba75c5c90af984dcf84" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>format</name></member>
      <member refid="classusrp__standard__rx_1a8bc4f06d059eff8bc6bc3766d89b5d41" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>format_bypass_halfband</name></member>
      <member refid="classusrp__standard__rx_1a15cc1572f31cd9b0436dbc4aaad4b634" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>format_shift</name></member>
      <member refid="classusrp__standard__rx_1ad5f82de396844f5e1864b6602f3f1066" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>format_want_q</name></member>
      <member refid="classusrp__standard__rx_1a7e7b2474c65673c9a68dfc8f08293399" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>format_width</name></member>
      <member refid="classusrp__basic_1a244d4aa01bb6a054cd5bd0998ce2a09a" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>fpga_master_clock_freq</name></member>
      <member refid="classusrp__standard__rx_1abd44967b82563f9b3eafe9c91c929c0ea5749d17a9377d91ea89fc6b8f94620b9" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>FPGA_MODE_COUNTING</name></member>
      <member refid="classusrp__standard__rx_1abd44967b82563f9b3eafe9c91c929c0ea26cf58fafbdee14b54d0eef63660332e" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>FPGA_MODE_COUNTING_32BIT</name></member>
      <member refid="classusrp__standard__rx_1abd44967b82563f9b3eafe9c91c929c0eadc8004f6da0507be39531d73039011f8" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>FPGA_MODE_LOOPBACK</name></member>
      <member refid="classusrp__standard__rx_1abd44967b82563f9b3eafe9c91c929c0ead3f99a72b4201bac21d8c103eff81568" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>FPGA_MODE_NORMAL</name></member>
      <member refid="classusrp__standard__common_1ac259e77beebe73376a45b6116ab845e1" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>has_rx_halfband</name></member>
      <member refid="classusrp__standard__common_1a4192e505766a5920f8771bde1fd871ae" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>has_tx_halfband</name></member>
      <member refid="classusrp__basic_1a9d4d1ef184ad622c7f84a6f940614b9b" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>init_db</name></member>
      <member refid="classusrp__basic_1a61af504df443a9d846ecf909871f1481" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>is_valid</name></member>
      <member refid="classusrp__standard__rx_1a988775e6036abf58339c689d94b3bcf5" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>make</name></member>
      <member refid="classusrp__basic__rx_1a81f51a370ce934e853969e487e2214df" prot="public" virt="non-virtual" ambiguityscope="usrp_basic_rx::"><scope>usrp_standard_rx</scope><name>make</name></member>
      <member refid="classusrp__standard__rx_1ae77c37e8be21095bb6add76e1c261121" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>make_format</name></member>
      <member refid="classusrp__standard__rx_1a7066c4cfc6375dcecf2648ab090d1ae6" prot="private" virt="non-virtual"><scope>usrp_standard_rx</scope><name>MAX_CHAN</name></member>
      <member refid="classusrp__basic_1ae9277f41b745b1c96c422804fafd058a" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>MAX_REGS</name></member>
      <member refid="classusrp__standard__rx_1a5705205822065977c5e777aafe5c203f" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>mux</name></member>
      <member refid="classusrp__standard__rx_1a0ad5d52ec8a7c7270e6248614ae0a4a4" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>nchannels</name></member>
      <member refid="classusrp__standard__common_1a07b889dbe4fecd870f40ddf2401948c6" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>nddcs</name></member>
      <member refid="classusrp__standard__common_1a9dec671bc0d7c50157083f46538844af" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>nducs</name></member>
      <member refid="classusrp__basic__rx_1a982d36d1f8d64a5bb2604cf04caa22d4" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>pga</name></member>
      <member refid="classusrp__basic__rx_1a7c570ad5c2cb879f1b9f2073117ecf51" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>pga_db_per_step</name></member>
      <member refid="classusrp__basic__rx_1a2089bd929d76f28a620fc66726b525f4" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>pga_max</name></member>
      <member refid="classusrp__basic__rx_1a984a57196c26958e2927667ab3abe4cf" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>pga_min</name></member>
      <member refid="classusrp__basic__rx_1a9edf0c0a2aeab58f7f12483a02dd14ee" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>probe_rx_slots</name></member>
      <member refid="classusrp__basic__rx_1ac339662f98db1292b636baf9f2db3d0a" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>read</name></member>
      <member refid="classusrp__basic__rx_1acffe1b022ad3ba669ab2131896ebafbf" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>read_aux_adc</name></member>
      <member refid="classusrp__basic__rx_1aedc2bc043ad6fed139274328a39a11be" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>read_aux_adc</name></member>
      <member refid="classusrp__basic_1aefe7a2f10626831304091babff21dc0d" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>read_eeprom</name></member>
      <member refid="classusrp__basic_1a364d3e56a0749a90cc5de2ac378e6863" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>READ_FAILED</name></member>
      <member refid="classusrp__basic_1ab284caa2e15464f62aa80ad1f540ecc5" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>read_i2c</name></member>
      <member refid="classusrp__basic__rx_1a275d14df1506faa570fd5cc231a14ee9" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>read_io</name></member>
      <member refid="classusrp__basic__rx_1a67b0c263712cd5bd56f48e6bd8754bc6" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>read_io</name></member>
      <member refid="classusrp__basic__rx_1a15a44f86a1a019e94d18f3c19b4cd34a" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>restore_rx</name></member>
      <member refid="classusrp__basic__rx_1aa25e7e0e84ec50bd8689889401480f84" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>rx_enable</name></member>
      <member refid="classusrp__standard__rx_1a1b8044ecae8a8acc9bb84e40dce4076e" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>rx_freq</name></member>
      <member refid="classusrp__basic_1a648de1479d7632b59bf2732f231ddbe0" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>selected_subdev</name></member>
      <member refid="classusrp__basic_1a70a71308412a67eaf825c13399faa078" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>serial_number</name></member>
      <member refid="classusrp__basic_1a97fc801cbafa85040a3d39be03d27a62" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_adc_buffer_bypass</name></member>
      <member refid="classusrp__basic_1ad0e07c8d85aa220aaf150e27dd8b545f" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_adc_offset</name></member>
      <member refid="classusrp__basic_1ab18f4a02c0efcac10f8e9406ca7a57a7" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_dac_offset</name></member>
      <member refid="classusrp__basic_1af20cc324fca8d089226d5a6dfc3d3668" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_dc_offset_cl_enable</name></member>
      <member refid="classusrp__standard__rx_1a71a1352e5b799f798ea528a09f240b7d" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_ddc_phase</name></member>
      <member refid="classusrp__standard__rx_1af75a82a32f50117b4acfe518b0c31e89" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_decim_rate</name></member>
      <member refid="classusrp__standard__rx_1ad196898bb518333f3ce753905d3cfd0a" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_format</name></member>
      <member refid="classusrp__basic_1a825640d1de15253b5bae18762a0e403e" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_fpga_master_clock_freq</name></member>
      <member refid="classusrp__standard__rx_1aafcd5898e3cddfaacd0535a6a678aafd" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_fpga_mode</name></member>
      <member refid="classusrp__basic__rx_1aba133cd0d5c853a51beb96776e7030fc" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_fpga_rx_sample_rate_divisor</name></member>
      <member refid="classusrp__standard__rx_1aa98b7831a644635f19ee84a7ecd404b2" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_mux</name></member>
      <member refid="classusrp__standard__rx_1a9ab9aa92005647b967d063003a841ca0" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_nchannels</name></member>
      <member refid="classusrp__basic__rx_1a85804ff6612a34c800a7181ea90de6b4" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>set_pga</name></member>
      <member refid="classusrp__basic__rx_1a14fa02bdeea1bc11d5611b879dae5405" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_rx_enable</name></member>
      <member refid="classusrp__standard__rx_1a4f3584afcc01962580cf420015d93cda" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_rx_freq</name></member>
      <member refid="classusrp__basic_1a77535750946e7d8443a76941a9611cae" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_usb_data_rate</name></member>
      <member refid="classusrp__basic_1ae200e6eb7dbbaf81a3c1353a401f97d3" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>set_verbose</name></member>
      <member refid="classusrp__basic_1afaae41796f1468062d4ad237322baf9e" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>shutdown_daughterboards</name></member>
      <member refid="classusrp__standard__rx_1ac97772bce1c0aaca0fee2462accd8123" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>start</name></member>
      <member refid="classusrp__standard__rx_1a545808dbbdc7de3331123e7af6021144" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>stop</name></member>
      <member refid="classusrp__standard__rx_1a261d53e643bfc5e6bdaa2f84a070bd42" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>tune</name></member>
      <member refid="classusrp__basic_1a530c23ff633c630530ec491c368a755d" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>usb_data_rate</name></member>
      <member refid="classusrp__basic_1ac72f072eb9220e798019b60b3fe48af6" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>usrp_basic</name></member>
      <member refid="classusrp__basic__rx_1acbda9587edf161df5aa2c504e42096ff" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>usrp_basic_rx</name></member>
      <member refid="classusrp__standard__common_1a084f39cd160734d41e6c1cb8f6513dd6" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>usrp_standard_common</name></member>
      <member refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>usrp_standard_rx</name></member>
      <member refid="classusrp__basic__rx_1a0974bedf9b0406709e83e839f40e2b36" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>write_atr_mask</name></member>
      <member refid="classusrp__basic_1ad9b95b1ca0e2616c1b3808892fdda1b0" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>write_atr_rx_delay</name></member>
      <member refid="classusrp__basic__rx_1a7cb8b45ce6815d3ee3c97a064a63e9ee" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>write_atr_rxval</name></member>
      <member refid="classusrp__basic_1a70f4070830b0db3fd0c3addb97ce966e" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>write_atr_tx_delay</name></member>
      <member refid="classusrp__basic__rx_1a914e9b61a4b1441dc955b1dc9cd17742" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>write_atr_txval</name></member>
      <member refid="classusrp__basic__rx_1ae5cbeedfd6df52cdc4b13c87e2521b97" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>write_aux_dac</name></member>
      <member refid="classusrp__basic_1a3900d37e951b83c938669f5fa0255866" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>write_eeprom</name></member>
      <member refid="classusrp__standard__rx_1a182048083827bf3e2efddb918677e51e" prot="protected" virt="non-virtual"><scope>usrp_standard_rx</scope><name>write_hw_mux_reg</name></member>
      <member refid="classusrp__basic_1a664e5aa3a3fb8a4c50b752906fcb79a0" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>write_i2c</name></member>
      <member refid="classusrp__basic__rx_1a5ab1edec410f1d5399c187cb243905a5" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>write_io</name></member>
      <member refid="classusrp__basic__rx_1ac6c7387f1bf488ee22c79be22e3f48dd" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>write_refclk</name></member>
      <member refid="classusrp__basic_1a01313a5f1c8e0eea1a1ff26388e25f78" prot="public" virt="virtual"><scope>usrp_standard_rx</scope><name>~usrp_basic</name></member>
      <member refid="classusrp__basic__rx_1ae50eef2481209ecaa7eb73bfd0cb513d" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>~usrp_basic_rx</name></member>
      <member refid="classusrp__standard__rx_1a51b7fde714bddf8bc2352172f07f42df" prot="public" virt="non-virtual"><scope>usrp_standard_rx</scope><name>~usrp_standard_rx</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
