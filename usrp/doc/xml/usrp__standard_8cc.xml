<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="usrp__standard_8cc" kind="file" language="C++">
    <compoundname>usrp_standard.cc</compoundname>
    <includes refid="usrp__standard_8h" local="no">usrp/usrp_standard.h</includes>
    <includes refid="usrp__prims_8h" local="yes">usrp/usrp_prims.h</includes>
    <includes local="yes">fpga_regs_common.h</includes>
    <includes local="yes">fpga_regs_standard.h</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="ad9862_8h" local="no">ad9862.h</includes>
    <includes local="no">cstdio</includes>
    <incdepgraph>
      <node id="1195">
        <label>usrp_standard.cc</label>
        <link refid="usrp_standard.cc"/>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
      </node>
      <node id="1200">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="1214">
        <label>assert.h</label>
      </node>
      <node id="1212">
        <label>fpga_regs_standard.h</label>
      </node>
      <node id="1205">
        <label>usrp/libusb_types.h</label>
        <link refid="libusb__types_8h"/>
        <childnode refid="1206" relation="include">
        </childnode>
      </node>
      <node id="1213">
        <label>stdexcept</label>
      </node>
      <node id="1203">
        <label>usrp/usrp_slots.h</label>
        <link refid="usrp__slots_8h"/>
      </node>
      <node id="1199">
        <label>string</label>
      </node>
      <node id="1201">
        <label>boost/weak_ptr.hpp</label>
      </node>
      <node id="1216">
        <label>ad9862.h</label>
        <link refid="ad9862_8h"/>
      </node>
      <node id="1209">
        <label>usrp/usrp_tune_result.h</label>
        <link refid="usrp__tune__result_8h"/>
      </node>
      <node id="1217">
        <label>cstdio</label>
      </node>
      <node id="1196">
        <label>usrp/usrp_standard.h</label>
        <link refid="usrp__standard_8h"/>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1200" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
      </node>
      <node id="1207">
        <label>vector</label>
      </node>
      <node id="1198">
        <label>usrp/db_base.h</label>
        <link refid="db__base_8h"/>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1200" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
      </node>
      <node id="1208">
        <label>boost/utility.hpp</label>
      </node>
      <node id="1215">
        <label>math.h</label>
      </node>
      <node id="1197">
        <label>usrp/usrp_basic.h</label>
        <link refid="usrp__basic_8h"/>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
      </node>
      <node id="1202">
        <label>iosfwd</label>
      </node>
      <node id="1204">
        <label>usrp/usrp_subdev_spec.h</label>
        <link refid="usrp__subdev__spec_8h"/>
      </node>
      <node id="1206">
        <label>usb.h</label>
      </node>
      <node id="1211">
        <label>fpga_regs_common.h</label>
      </node>
      <node id="1210">
        <label>usrp/usrp_prims.h</label>
        <link refid="usrp__prims_8h"/>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1199" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classdxc__control" prot="public">dxc_control</innerclass>
    <innerclass refid="classddc__control" prot="public">ddc_control</innerclass>
    <innerclass refid="classduc__control" prot="public">duc_control</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="usrp__standard_8cc_1afacd331296c10f360da7640e0d68429f" prot="public" static="no">
        <name>NELEM</name>
        <param><defname>x</defname></param>
        <initializer>(sizeof (x) / sizeof (x[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="49" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="usrp__standard_8cc_1ad8d56afd31cc1025ec689e5c9bfa5f8c" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int OLD_CAPS_VAL</definition>
        <argsstring></argsstring>
        <name>OLD_CAPS_VAL</name>
        <initializer>= 0xaa55ff77</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="39" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="usrp__standard_8cc_1abe9f7232f77b32b76467be033beb96fb" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int DEFAULT_CAPS_VAL</definition>
        <argsstring></argsstring>
        <name>DEFAULT_CAPS_VAL</name>
        <initializer>= ((2 &lt;&lt; bmFR_RB_CAPS_NDUC_SHIFT)
				     | (2 &lt;&lt; bmFR_RB_CAPS_NDDC_SHIFT)
				     | bmFR_RB_CAPS_RX_HAS_HALFBAND)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="40" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="usrp__standard_8cc_1aba510a2ee222bb4cf4dc073755f52556" prot="public" static="yes" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char tx_regs_use_nco[]</definition>
        <argsstring>[]</argsstring>
        <name>tx_regs_use_nco</name>
        <initializer>= {
  <ref refid="ad9862_8h_1a64212ab1643d072de2877248bb010199" kindref="member">REG_TX_IF</ref>,		(<ref refid="ad9862_8h_1ad44bf63997b0429defd378a9a53297b5" kindref="member">TX_IF_USE_CLKOUT1</ref>
			 | <ref refid="ad9862_8h_1a4b09647010c4cf3c02e1b9bde5b1fe77" kindref="member">TX_IF_I_FIRST</ref>
			 | <ref refid="ad9862_8h_1add5298bf21c56b73c9d7b490c0a4ffc2" kindref="member">TX_IF_2S_COMP</ref>
			 | <ref refid="ad9862_8h_1a35fc219ef4a13e86fe341c03bb58f5bd" kindref="member">TX_IF_INTERLEAVED</ref>),
  <ref refid="ad9862_8h_1a861fc9efe0664fb4919b7462f3a0cc62" kindref="member">REG_TX_DIGITAL</ref>,	(<ref refid="ad9862_8h_1a97ea7098bcbce7bf382ddc2cd43f8612" kindref="member">TX_DIGITAL_2_DATA_PATHS</ref>
			 | <ref refid="ad9862_8h_1a7823099404205d27bedf6e6e04a986fd" kindref="member">TX_DIGITAL_INTERPOLATE_4X</ref>)
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="786" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="786" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="usrp__standard_8cc_1a89d86a9db6243ec81d1a1483042f4b08" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tune_a_helper</definition>
        <argsstring>(db_base_sptr db, double target_freq, double fs, dxc_control &amp;dxc, usrp_tune_result *result)</argsstring>
        <name>tune_a_helper</name>
        <param>
          <type><ref refid="db__base_8h_1a61ead10400f658a22128a321e14ae0ac" kindref="member">db_base_sptr</ref></type>
          <declname>db</declname>
        </param>
        <param>
          <type>double</type>
          <declname>target_freq</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="classdxc__control" kindref="compound">dxc_control</ref> &amp;</type>
          <declname>dxc</declname>
        </param>
        <param>
          <type><ref refid="classusrp__tune__result" kindref="compound">usrp_tune_result</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Tune such that target_frequency ends up at DC in the complex baseband. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>the daughterboard to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>the center frequency we want at baseband (DC) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fs</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dxc</parametername>
</parameternamelist>
<parameterdescription>
<para>DDC or DUC access and control object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>details of what we did</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true iff operation was successful</para></simplesect>
Tuning is a two step process. First we ask the front-end to tune as close to the desired frequency as it can. Then we use the result of that operation and our target_frequency to determine the value for the digital down converter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="165" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="165" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="usrp__standard_8cc_1a146cf3580ea30fbfbf67eeaac4576137" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int compute_freq_control_word_fpga</definition>
        <argsstring>(double master_freq, double target_freq, double *actual_freq, bool verbose)</argsstring>
        <name>compute_freq_control_word_fpga</name>
        <param>
          <type>double</type>
          <declname>master_freq</declname>
        </param>
        <param>
          <type>double</type>
          <declname>target_freq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>actual_freq</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="215" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="215" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="usrp__standard_8cc_1afe9bec91f34d51a6dde4cf9d14173151" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int compute_freq_control_word_9862</definition>
        <argsstring>(double master_freq, double target_freq, double *actual_freq, bool verbose)</argsstring>
        <name>compute_freq_control_word_9862</name>
        <param>
          <type>double</type>
          <declname>master_freq</declname>
        </param>
        <param>
          <type>double</type>
          <declname>target_freq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>actual_freq</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="239" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="239" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="usrp__standard_8cc_1a5ca6d6cb355ae8972e98df498078e3fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int real_rx_mux_value</definition>
        <argsstring>(int mux, int nchan)</argsstring>
        <name>real_rx_mux_value</name>
        <param>
          <type>int</type>
          <declname>mux</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nchan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="307" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="307" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="usrp__standard_8cc_1a4ac6e909e1448fd0a30fd5222f145615" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool map_sw_mux_to_hw_mux</definition>
        <argsstring>(int sw_mux, int *hw_mux_ptr)</argsstring>
        <name>map_sw_mux_to_hw_mux</name>
        <param>
          <type>int</type>
          <declname>sw_mux</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>hw_mux_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="469" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="469" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="usrp__standard_8cc_1a0c662430d5f5c89c8e41e2710c822be9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rx_format_is_valid</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>rx_format_is_valid</name>
        <param>
          <type>unsigned int</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="700" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="700" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="usrp__standard_8cc_1ab65ab2f9e9c6fc26f2a34807f12441f8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int real_tx_mux_value</definition>
        <argsstring>(int mux, int nchan)</argsstring>
        <name>real_tx_mux_value</name>
        <param>
          <type>int</type>
          <declname>mux</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nchan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" line="797" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc" bodystart="797" bodyend="810"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2004,2008,2009<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="usrp__standard_8h" kindref="compound">usrp/usrp_standard.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="usrp__prims_8h" kindref="compound">usrp/usrp_prims.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fpga_regs_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fpga_regs_standard.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ad9862_8h" kindref="compound">ad9862.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OLD_CAPS_VAL<sp/>=<sp/>0xaa55ff77;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEFAULT_CAPS_VAL<sp/>=<sp/>((2<sp/>&lt;&lt;<sp/>bmFR_RB_CAPS_NDUC_SHIFT)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(2<sp/>&lt;&lt;<sp/>bmFR_RB_CAPS_NDDC_SHIFT)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bmFR_RB_CAPS_RX_HAS_HALFBAND);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>USE_FPGA_TX_CORDIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacead9862" kindref="compound">ad9862</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="usrp__standard_8cc_1afacd331296c10f360da7640e0d68429f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NELEM(x)<sp/>(sizeof<sp/>(x)<sp/>/<sp/>sizeof<sp/>(x[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classusrp__standard__common_1a9452b1ce5881965ca36d780f928b6cb6" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__common_1a9452b1ce5881965ca36d780f928b6cb6" kindref="member">usrp_standard_common::calc_dxc_freq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_freq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseband_freq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fs,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dxc_freq,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*inverted)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>Calculate<sp/>the<sp/>frequency<sp/>to<sp/>use<sp/>for<sp/>setting<sp/>the<sp/>digital<sp/>up<sp/>or<sp/>down<sp/>converter.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>@param<sp/>target_freq:<sp/>desired<sp/>RF<sp/>frequency<sp/>(Hz)</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>@param<sp/>baseband_freq:<sp/>the<sp/>RF<sp/>frequency<sp/>that<sp/>corresponds<sp/>to<sp/>DC<sp/>in<sp/>the<sp/>IF.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>@param<sp/>fs:<sp/>converter<sp/>sample<sp/>rate</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>@returns:<sp/>2-tuple<sp/>(ddc_freq,<sp/>inverted)<sp/>where<sp/>ddc_freq<sp/>is<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>ddc<sp/>and<sp/>inverted<sp/>is<sp/>True<sp/>if<sp/>we&apos;re<sp/>operating<sp/>in<sp/>an<sp/>inverted</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Nyquist<sp/>zone.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;calc_dxc_freq:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>target<sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>target_freq);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>baseband<sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>baseband_freq);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>fs<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>fs);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>target_freq<sp/>-<sp/>baseband_freq;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(delta<sp/>&gt;<sp/>fs)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>-=<sp/>fs;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta<sp/>&lt;=<sp/>fs/2)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-inverted<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dxc_freq<sp/>=<sp/>-delta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*inverted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inverted<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dxc_freq<sp/>=<sp/>delta<sp/>-<sp/>fs;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*inverted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(delta<sp/>&lt;<sp/>-fs)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>+=<sp/>fs;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta<sp/>&gt;=<sp/>-fs/2)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dxc_freq<sp/>=<sp/>-delta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-inverted<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*inverted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inverted<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dxc_freq<sp/>=<sp/>delta<sp/>+<sp/>fs;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*inverted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>dxc_freq<sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>*dxc_freq);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>inverted<sp/><sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>*inverted<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>Real<sp/>lambda<sp/>expressions<sp/>would<sp/>be<sp/>_so_<sp/>much<sp/>easier...</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classdxc__control" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdxc__control" kindref="compound">dxc_control</ref><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_tx()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_dxc_freq(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dxc_freq)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dxc_freq()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classddc__control" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classddc__control" kindref="compound">ddc_control</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdxc__control" kindref="compound">dxc_control</ref><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__rx" kindref="compound">usrp_standard_rx</ref><sp/><sp/><sp/><sp/><sp/>*d_u;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_chan;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126" refid="classddc__control_1a843c3d3d26aaafc22f12d86bd2dae8cb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classddc__control_1a843c3d3d26aaafc22f12d86bd2dae8cb" kindref="member">ddc_control</ref>(<ref refid="classusrp__standard__rx" kindref="compound">usrp_standard_rx</ref><sp/>*u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_u(u),<sp/>d_chan(chan)<sp/>{}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="classddc__control_1aa1f6dfd9d87f65ec1b1acf0af3e2ea2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classddc__control_1aa1f6dfd9d87f65ec1b1acf0af3e2ea2f" kindref="member">is_tx</ref>(){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="130" refid="classddc__control_1aeff5638c036ddde7234e41cb97d2af7e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classddc__control_1aeff5638c036ddde7234e41cb97d2af7e" kindref="member">set_dxc_freq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dxc_freq){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_u-&gt;<ref refid="classusrp__standard__rx_1a4f3584afcc01962580cf420015d93cda" kindref="member">set_rx_freq</ref>(d_chan,<sp/>dxc_freq);<sp/>}</highlight></codeline>
<codeline lineno="131" refid="classddc__control_1af60db2ff15829832aaddec9ccca2ab14" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classddc__control_1af60db2ff15829832aaddec9ccca2ab14" kindref="member">dxc_freq</ref>(){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_u-&gt;<ref refid="classusrp__standard__rx_1a1b8044ecae8a8acc9bb84e40dce4076e" kindref="member">rx_freq</ref>(d_chan);<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classduc__control" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classduc__control" kindref="compound">duc_control</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdxc__control" kindref="compound">dxc_control</ref><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx" kindref="compound">usrp_standard_tx</ref><sp/><sp/><sp/><sp/><sp/>*d_u;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_chan;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139" refid="classduc__control_1a15c39309dfb3af1e7a850d5ab7a998f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classduc__control_1a15c39309dfb3af1e7a850d5ab7a998f8" kindref="member">duc_control</ref>(<ref refid="classusrp__standard__tx" kindref="compound">usrp_standard_tx</ref><sp/>*u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_u(u),<sp/>d_chan(chan)<sp/>{}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="142" refid="classduc__control_1a274a0ee33f11834403a21420a26278fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classduc__control_1a274a0ee33f11834403a21420a26278fc" kindref="member">is_tx</ref>(){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="143" refid="classduc__control_1a4f6c38fb1ecb6f76d5c694ff44ff8a34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classduc__control_1a4f6c38fb1ecb6f76d5c694ff44ff8a34" kindref="member">set_dxc_freq</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dxc_freq){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_u-&gt;<ref refid="classusrp__standard__tx_1ae75deb35fef49d5e647b2141443d7106" kindref="member">set_tx_freq</ref>(d_chan,<sp/>dxc_freq);<sp/>}</highlight></codeline>
<codeline lineno="144" refid="classduc__control_1aa07e6f0983597d6659aff1b7b0c6bd17" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classduc__control_1aa07e6f0983597d6659aff1b7b0c6bd17" kindref="member">dxc_freq</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_u-&gt;<ref refid="classusrp__standard__tx_1aa527ce0117c6f6fb6e89f09efb4e381f" kindref="member">tx_freq</ref>(d_chan);<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">tune_a_helper(<ref refid="db__base_8h_1a61ead10400f658a22128a321e14ae0ac" kindref="member">db_base_sptr</ref><sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_freq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fs,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdxc__control" kindref="compound">dxc_control</ref><sp/>&amp;dxc,<sp/><ref refid="classusrp__tune__result" kindref="compound">usrp_tune_result</ref><sp/>*result)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dxc_freq;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actual_dxc_freq;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ask<sp/>the<sp/>d&apos;board<sp/>to<sp/>tune<sp/>as<sp/>closely<sp/>as<sp/>it<sp/>can<sp/>to<sp/>target_freq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>db-&gt;set_freq(target_freq,<sp/>&amp;result-&gt;<ref refid="classusrp__tune__result_1afce6aec4b4c17753b44b9b6248a80699" kindref="member">baseband_freq</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfreq__result__t" kindref="compound">freq_result_t</ref><sp/>fr<sp/>=<sp/>db-&gt;set_freq(target_freq);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>fr.<ref refid="structfreq__result__t_1a05f1d913c001ce385efb798e8ec9b649" kindref="member">ok</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="classusrp__tune__result_1afce6aec4b4c17753b44b9b6248a80699" kindref="member">baseband_freq</ref><sp/>=<sp/>fr.<ref refid="structfreq__result__t_1a1c7c958029dfd98e62b6e1fa60fb5a1f" kindref="member">baseband_freq</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>DDC<sp/>setting<sp/>that<sp/>will<sp/>downconvert<sp/>the<sp/>baseband<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>daughterboard<sp/>to<sp/>our<sp/>target<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__common_1a9452b1ce5881965ca36d780f928b6cb6" kindref="member">usrp_standard_common::calc_dxc_freq</ref>(target_freq,<sp/>result-&gt;<ref refid="classusrp__tune__result_1afce6aec4b4c17753b44b9b6248a80699" kindref="member">baseband_freq</ref>,<sp/>fs,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dxc_freq,<sp/>&amp;inverted);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>spectrum<sp/>is<sp/>inverted,<sp/>and<sp/>the<sp/>daughterboard<sp/>doesn&apos;t<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>quadrature<sp/>downconversion,<sp/>we<sp/>can<sp/>fix<sp/>the<sp/>inversion<sp/>by<sp/>flipping<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sign<sp/>of<sp/>the<sp/>dxc_freq...<sp/><sp/>(This<sp/>only<sp/>happens<sp/>using<sp/>the<sp/>basic_rx<sp/>board)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(db-&gt;spectrum_inverted())</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>inverted<sp/>=<sp/>!inverted;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inverted<sp/>&amp;&amp;<sp/>!db-&gt;is_quadrature()){</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>dxc_freq<sp/>=<sp/>-dxc_freq;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>inverted<sp/>=<sp/>!inverted;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dxc.<ref refid="classdxc__control_1a4555b45e768acaefb8285b89a620f409" kindref="member">is_tx</ref>()<sp/>&amp;&amp;<sp/>!db-&gt;i_and_q_swapped())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>down<sp/>conversion<sp/>versus<sp/>up<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>dxc_freq<sp/>=<sp/>-dxc_freq;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/>dxc.<ref refid="classdxc__control_1a2dd92d5953f1e09763cbb8ba2f4b1aa8" kindref="member">set_dxc_freq</ref>(dxc_freq);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>actual_dxc_freq<sp/>=<sp/>dxc.<ref refid="classdxc__control_1aefb33ae501db6e8cc17fae4c3366cc68" kindref="member">dxc_freq</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="classusrp__tune__result_1ad22e2d19229dda43762adf156eccc082" kindref="member">dxc_freq</ref><sp/>=<sp/>dxc_freq;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="classusrp__tune__result_1ab981c862fc1f0da87ddec80a47dac767" kindref="member">residual_freq</ref><sp/>=<sp/>dxc_freq<sp/>-<sp/>actual_dxc_freq;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="classusrp__tune__result_1af3eb751b900a27776e8fdce8e857f364" kindref="member">inverted</ref><sp/>=<sp/>inverted;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">compute_freq_control_word_fpga<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>master_freq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_freq,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*actual_freq,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NBITS<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>v<sp/>=<sp/>(int)<sp/>rint<sp/>(target_freq<sp/>/<sp/>master_freq<sp/>*<sp/>pow<sp/>(2.0,<sp/>32.0));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/>NBITS))<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>NBITS);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>only<sp/>top<sp/>NBITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>*actual_freq<sp/>=<sp/>v<sp/>*<sp/>master_freq<sp/>/<sp/>pow<sp/>(2.0,<sp/>32.0);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbose)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;compute_freq_control_word_fpga:<sp/>target<sp/>=<sp/>%g<sp/><sp/>actual<sp/>=<sp/>%g<sp/><sp/>delta<sp/>=<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_freq,<sp/>*actual_freq,<sp/>*actual_freq<sp/>-<sp/>target_freq);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>v;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>9862<sp/>uses<sp/>an<sp/>unsigned<sp/>24-bit<sp/>frequency<sp/>tuning<sp/>word<sp/>and<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>separate<sp/>register<sp/>to<sp/>control<sp/>the<sp/>sign.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">compute_freq_control_word_9862<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>master_freq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_freq,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*actual_freq,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target_freq<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>v<sp/>=<sp/>(int)<sp/>rint<sp/>(fabs<sp/>(target_freq)<sp/>/<sp/>master_freq<sp/>*<sp/>pow<sp/>(2.0,<sp/>24.0));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>*actual_freq<sp/>=<sp/>v<sp/>*<sp/>master_freq<sp/>/<sp/>pow<sp/>(2.0,<sp/>24.0)<sp/>*<sp/>sign;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbose)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;compute_freq_control_word_9862:<sp/>target<sp/>=<sp/>%g<sp/><sp/>actual<sp/>=<sp/>%g<sp/><sp/>delta<sp/>=<sp/>%g<sp/><sp/>v<sp/>=<sp/>%8d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>target_freq,<sp/>*actual_freq,<sp/>*actual_freq<sp/>-<sp/>target_freq,<sp/>v);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>v;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classusrp__standard__common_1a084f39cd160734d41e6c1cb8f6513dd6" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__common_1a084f39cd160734d41e6c1cb8f6513dd6" kindref="member">usrp_standard_common::usrp_standard_common</ref>(<ref refid="classusrp__basic" kindref="compound">usrp_basic</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>new<sp/>FPGA<sp/>capability<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parent-&gt;<ref refid="classusrp__basic_1a4fa26bd8164bd5782adf7fbe00b3d411" kindref="member">_read_fpga_reg</ref>(FR_RB_CAPS,<sp/>&amp;d_fpga_caps)){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_common:<sp/>failed<sp/>to<sp/>read<sp/>FPGA<sp/>cap<sp/>register.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_common::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>don&apos;t<sp/>have<sp/>the<sp/>cap<sp/>register,<sp/>set<sp/>the<sp/>value<sp/>to<sp/>what<sp/>it<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>had<sp/>if<sp/>we<sp/>did<sp/>have<sp/>one<sp/>;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_fpga_caps<sp/>==<sp/>OLD_CAPS_VAL)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>d_fpga_caps<sp/>=<sp/>DEFAULT_CAPS_VAL;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;has_rx_halfband<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>has_rx_halfband());</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;nddcs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nddcs());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;has_tx_halfband<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>has_tx_halfband());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;nducs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nducs());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classusrp__standard__common_1ac259e77beebe73376a45b6116ab845e1" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__common_1ac259e77beebe73376a45b6116ab845e1" kindref="member">usrp_standard_common::has_rx_halfband</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="282"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_fpga_caps<sp/>&amp;<sp/>bmFR_RB_CAPS_RX_HAS_HALFBAND)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classusrp__standard__common_1a07b889dbe4fecd870f40ddf2401948c6" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__common_1a07b889dbe4fecd870f40ddf2401948c6" kindref="member">usrp_standard_common::nddcs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="288"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_fpga_caps<sp/>&amp;<sp/>bmFR_RB_CAPS_NDDC_MASK)<sp/>&gt;&gt;<sp/>bmFR_RB_CAPS_NDDC_SHIFT;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="classusrp__standard__common_1a4192e505766a5920f8771bde1fd871ae" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__common_1a4192e505766a5920f8771bde1fd871ae" kindref="member">usrp_standard_common::has_tx_halfband</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="294"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_fpga_caps<sp/>&amp;<sp/>bmFR_RB_CAPS_TX_HAS_HALFBAND)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classusrp__standard__common_1a9dec671bc0d7c50157083f46538844af" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__common_1a9dec671bc0d7c50157083f46538844af" kindref="member">usrp_standard_common::nducs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="300"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_fpga_caps<sp/>&amp;<sp/>bmFR_RB_CAPS_NDUC_MASK)<sp/>&gt;&gt;<sp/>bmFR_RB_CAPS_NDUC_SHIFT;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal">real_rx_mux_value<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mux<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mux;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x32103210;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" kindref="member">usrp_standard_rx::usrp_standard_rx</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_board,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decim_rate,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fusb_block_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fusb_nblocks,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>fpga_filename,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>firmware_filename</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classusrp__basic__rx" kindref="compound">usrp_basic_rx</ref><sp/>(which_board,<sp/>fusb_block_size,<sp/>fusb_nblocks,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpga_filename,<sp/>firmware_filename),</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__common" kindref="compound">usrp_standard_common</ref>(this),</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>d_nchan<sp/>(1),<sp/>d_sw_mux<sp/>(0x0),<sp/>d_hw_mux<sp/>(0x0)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__standard__rx_1ad196898bb518333f3ce753905d3cfd0a" kindref="member">set_format</ref>(<ref refid="classusrp__standard__rx_1ae77c37e8be21095bb6add76e1c261121" kindref="member">make_format</ref>())){</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_rx:<sp/>set_format<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_rx::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__standard__rx_1a9ab9aa92005647b967d063003a841ca0" kindref="member">set_nchannels</ref><sp/>(nchan)){</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_rx:<sp/>set_nchannels<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_rx::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__standard__rx_1af75a82a32f50117b4acfe518b0c31e89" kindref="member">set_decim_rate</ref><sp/>(decim_rate)){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_rx:<sp/>set_decim_rate<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_rx::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__standard__rx_1aa98b7831a644635f19ee84a7ecd404b2" kindref="member">set_mux</ref><sp/>(real_rx_mux_value<sp/>(mux,<sp/>nchan))){</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_rx:<sp/>set_mux<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_rx::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__standard__rx_1aafcd5898e3cddfaacd0535a6a678aafd" kindref="member">set_fpga_mode</ref><sp/>(mode)){</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_rx:<sp/>set_fpga_mode<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_rx::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_CHAN;<sp/>i++){</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__rx_1a4f3584afcc01962580cf420015d93cda" kindref="member">set_rx_freq</ref>(i,<sp/>0);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__rx_1a71a1352e5b799f798ea528a09f240b7d" kindref="member">set_ddc_phase</ref>(i,<sp/>0);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classusrp__standard__rx_1a51b7fde714bddf8bc2352172f07f42df" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a51b7fde714bddf8bc2352172f07f42df" kindref="member">usrp_standard_rx::~usrp_standard_rx</ref><sp/>()</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fprintf(stderr,<sp/>&quot;\nusrp_standard_rx:<sp/>dtor\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classusrp__standard__rx_1ac97772bce1c0aaca0fee2462accd8123" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1ac97772bce1c0aaca0fee2462accd8123" kindref="member">usrp_standard_rx::start</ref><sp/>()</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__basic__rx_1a6097b0d8b2cac9a67237368d1a81b7f4" kindref="member">usrp_basic_rx::start</ref><sp/>())</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>our<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classusrp__standard__rx_1a545808dbbdc7de3331123e7af6021144" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a545808dbbdc7de3331123e7af6021144" kindref="member">usrp_standard_rx::stop</ref><sp/>()</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="classusrp__basic__rx_1a094cb05d34da15711c6ca5c4b24defe9" kindref="member">usrp_basic_rx::stop</ref><sp/>();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>our<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><ref refid="usrp__standard_8h_1a987bd3ee218650a56a698f797f349596" kindref="member">usrp_standard_rx_sptr</ref></highlight></codeline>
<codeline lineno="381" refid="classusrp__standard__rx_1a988775e6036abf58339c689d94b3bcf5" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a988775e6036abf58339c689d94b3bcf5" kindref="member">usrp_standard_rx::make</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_board,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__rx_1ab92676b3ff5e472846e957f95c3374e5" kindref="member">decim_rate</ref>,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fusb_block_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fusb_nblocks,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>fpga_filename,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>firmware_filename</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrp__standard_8h_1a987bd3ee218650a56a698f797f349596" kindref="member">usrp_standard_rx_sptr</ref><sp/>u<sp/>=<sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usrp__standard_8h_1a987bd3ee218650a56a698f797f349596" kindref="member">usrp_standard_rx_sptr</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__rx_1acf2afdc165b27469cc8f793851c78a3c" kindref="member">usrp_standard_rx</ref>(which_board,<sp/>decim_rate,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nchan,<sp/>mux,<sp/>mode,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fusb_block_size,<sp/>fusb_nblocks,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpga_filename,<sp/>firmware_filename));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>u-&gt;init_db(u);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...){</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__standard_8h_1a987bd3ee218650a56a698f797f349596" kindref="member">usrp_standard_rx_sptr</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="classusrp__standard__rx_1af75a82a32f50117b4acfe518b0c31e89" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1af75a82a32f50117b4acfe518b0c31e89" kindref="member">usrp_standard_rx::set_decim_rate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rate)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classusrp__standard__common_1ac259e77beebe73376a45b6116ab845e1" kindref="member">has_rx_halfband</ref>()){</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rate<sp/>&amp;<sp/>0x1)<sp/>||<sp/>rate<sp/>&lt;<sp/>4<sp/>||<sp/>rate<sp/>&gt;<sp/>256){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_rx::set_decim_rate:<sp/>rate<sp/>must<sp/>be<sp/>EVEN<sp/>and<sp/>in<sp/>[4,<sp/>256]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rate<sp/>&lt;<sp/>4<sp/>||<sp/>rate<sp/>&gt;<sp/>128){</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_rx::set_decim_rate:<sp/>rate<sp/>must<sp/>be<sp/>in<sp/>[4,<sp/>128]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>d_decim_rate<sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="classusrp__basic_1a77535750946e7d8443a76941a9611cae" kindref="member">set_usb_data_rate</ref><sp/>((<ref refid="classusrp__basic__rx_1ace4aa6537246ecf948ec0ae35e1d6e48" kindref="member">adc_rate</ref><sp/>()<sp/>/<sp/>rate<sp/>*<sp/><ref refid="classusrp__standard__rx_1a0ad5d52ec8a7c7270e6248614ae0a4a4" kindref="member">nchannels</ref><sp/>())</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="classusrp__basic__rx_1aec8c94d230440bb38951e9718755b994" kindref="member">disable_rx</ref><sp/>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="classusrp__standard__common_1ac259e77beebe73376a45b6116ab845e1" kindref="member">has_rx_halfband</ref>()<sp/>?<sp/>d_decim_rate/2<sp/>-<sp/>1<sp/>:<sp/>d_decim_rate<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" kindref="member">_write_fpga_reg</ref><sp/>(FR_DECIM_RATE,<sp/>v);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><ref refid="classusrp__basic__rx_1a15a44f86a1a019e94d18f3c19b4cd34a" kindref="member">restore_rx</ref><sp/>(s);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="classusrp__standard__rx_1a9ab9aa92005647b967d063003a841ca0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__rx_1a9ab9aa92005647b967d063003a841ca0" kindref="member">usrp_standard_rx::set_nchannels</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(nchan<sp/>==<sp/>1<sp/>||<sp/>nchan<sp/>==<sp/>2<sp/>||<sp/>nchan<sp/>==<sp/>4))</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nchan<sp/>&gt;<sp/><ref refid="classusrp__standard__common_1a07b889dbe4fecd870f40ddf2401948c6" kindref="member">nddcs</ref>())</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>d_nchan<sp/>=<sp/>nchan;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__rx_1a182048083827bf3e2efddb918677e51e" kindref="member">write_hw_mux_reg</ref><sp/>();</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>map<sp/>software<sp/>mux<sp/>value<sp/>to<sp/>hw<sp/>mux<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Software<sp/>mux<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>1<sp/>0<sp/>9<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0<sp/>9<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0<sp/>9<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/>+-------+-------+-------+-------+-------+-------+-------+-------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/>Q3<sp/><sp/>|<sp/><sp/><sp/>I3<sp/><sp/>|<sp/><sp/><sp/>Q2<sp/><sp/>|<sp/><sp/><sp/>I2<sp/><sp/>|<sp/><sp/><sp/>Q1<sp/><sp/>|<sp/><sp/><sp/>I1<sp/><sp/>|<sp/><sp/><sp/>Q0<sp/><sp/>|<sp/><sp/><sp/>I0<sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/>+-------+-------+-------+-------+-------+-------+-------+-------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>4-bit<sp/>I<sp/>field<sp/>is<sp/>either<sp/>0,1,2,3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>4-bit<sp/>Q<sp/>field<sp/>is<sp/>either<sp/>0,1,2,3<sp/>or<sp/>0xf<sp/>(input<sp/>is<sp/>const<sp/>zero)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>Q&apos;s<sp/>must<sp/>be<sp/>0xf<sp/>or<sp/>none<sp/>of<sp/>them<sp/>may<sp/>be<sp/>0xf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Hardware<sp/>mux<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>1<sp/>0<sp/>9<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0<sp/>9<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0<sp/>9<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/>+-----------------------+-------+-------+-------+-------+-+-----+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>be<sp/>zero<sp/><sp/><sp/><sp/><sp/>|<sp/>Q3|<sp/>I3|<sp/>Q2|<sp/>I2|<sp/>Q1|<sp/>I1|<sp/>Q0|<sp/>I0|Z|<sp/>NCH<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>+-----------------------+-------+-------+-------+-------+-+-----+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal">map_sw_mux_to_hw_mux<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sw_mux,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*hw_mux_ptr)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>confirm<sp/>that<sp/>all<sp/>I&apos;s<sp/>are<sp/>either<sp/>0,1,2,3<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i<sp/>+=<sp/>2){</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(sw_mux<sp/>&gt;&gt;<sp/>(4<sp/>*<sp/>i))<sp/>&amp;<sp/>0xf;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(0<sp/>&lt;=<sp/>t<sp/>&amp;&amp;<sp/>t<sp/>&lt;=<sp/>3))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>confirm<sp/>that<sp/>all<sp/>Q&apos;s<sp/>are<sp/>either<sp/>0,1,2,3<sp/>or<sp/>0xf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>8;<sp/>i<sp/>+=<sp/>2){</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(sw_mux<sp/>&gt;&gt;<sp/>(4<sp/>*<sp/>i))<sp/>&amp;<sp/>0xf;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(t<sp/>==<sp/>0xf<sp/>||<sp/>(0<sp/>&lt;=<sp/>t<sp/>&amp;&amp;<sp/>t<sp/>&lt;=<sp/>3)))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>confirm<sp/>that<sp/>all<sp/>Q<sp/>inputs<sp/>are<sp/>0xf<sp/>(const<sp/>zero<sp/>input),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>none<sp/>of<sp/>them<sp/>are<sp/>0xf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q_and<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q_or<sp/>=<sp/><sp/>0;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++){</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qx_is_0xf<sp/>=<sp/>((sw_mux<sp/>&gt;&gt;<sp/>(8<sp/>*<sp/>i<sp/>+<sp/>4))<sp/>&amp;<sp/>0xf)<sp/>==<sp/>0xf;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>q_and<sp/>&amp;=<sp/>qx_is_0xf;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>q_or<sp/><sp/>|=<sp/>qx_is_0xf;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q_and<sp/>||<sp/>!q_or){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hw_mux_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++){</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(sw_mux<sp/>&gt;&gt;<sp/>(4<sp/>*<sp/>i))<sp/>&amp;<sp/>0x3;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hw_mux_value<sp/>|=<sp/>t<sp/>&lt;&lt;<sp/>(2<sp/>*<sp/>i<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q_and)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hw_mux_value<sp/>|=<sp/>0x8;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>Q&apos;s<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>*hw_mux_ptr<sp/>=<sp/>hw_mux_value;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="classusrp__standard__rx_1aa98b7831a644635f19ee84a7ecd404b2" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1aa98b7831a644635f19ee84a7ecd404b2" kindref="member">usrp_standard_rx::set_mux</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!map_sw_mux_to_hw_mux<sp/>(mux,<sp/>&amp;d_hw_mux))</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fprintf<sp/>(stderr,<sp/>&quot;sw_mux<sp/>=<sp/>0x%08x<sp/><sp/>hw_mux<sp/>=<sp/>0x%08x\n&quot;,<sp/>mux,<sp/>d_hw_mux);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>d_sw_mux<sp/>=<sp/><ref refid="classusrp__standard__rx_1a5705205822065977c5e777aafe5c203f" kindref="member">mux</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__rx_1a182048083827bf3e2efddb918677e51e" kindref="member">write_hw_mux_reg</ref><sp/>();</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="classusrp__standard__rx_1a182048083827bf3e2efddb918677e51e" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a182048083827bf3e2efddb918677e51e" kindref="member">usrp_standard_rx::write_hw_mux_reg</ref><sp/>()</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="classusrp__basic__rx_1aec8c94d230440bb38951e9718755b994" kindref="member">disable_rx</ref><sp/>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" kindref="member">_write_fpga_reg</ref><sp/>(FR_RX_MUX,<sp/>d_hw_mux<sp/>|<sp/>d_nchan);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><ref refid="classusrp__basic__rx_1a15a44f86a1a019e94d18f3c19b4cd34a" kindref="member">restore_rx</ref><sp/>(s);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="classusrp__standard__rx_1a1b1d513ec9017203d3d2eede645093d5" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a1b1d513ec9017203d3d2eede645093d5" kindref="member">usrp_standard_rx::determine_rx_mux_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structusrp__subdev__spec" kindref="compound">usrp_subdev_spec</ref><sp/>&amp;ss)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/>Determine<sp/>appropriate<sp/>Rx<sp/>mux<sp/>value<sp/>as<sp/>a<sp/>function<sp/>of<sp/>the<sp/>subdevice<sp/>choosen<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/>characteristics<sp/>of<sp/>the<sp/>respective<sp/>daughterboard.</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/>@param<sp/>u:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/>of<sp/>USRP<sp/>source</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/>@param<sp/>subdev_spec:<sp/>return<sp/>value<sp/>from<sp/>subdev<sp/>option<sp/>parser.<sp/><sp/></highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/>@type<sp/><sp/>subdev_spec:<sp/>(side,<sp/>subdev),<sp/>where<sp/>side<sp/>is<sp/>0<sp/>or<sp/>1<sp/>and<sp/>subdev<sp/>is<sp/>0<sp/>or<sp/>1</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/>@returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Rx<sp/>mux<sp/>value</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/>Figure<sp/>out<sp/>which<sp/>A/D&apos;s<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>DDC.</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/>Each<sp/>daughterboard<sp/>consists<sp/>of<sp/>1<sp/>or<sp/>2<sp/>subdevices.<sp/><sp/>(At<sp/>this<sp/>time,</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/>all<sp/>but<sp/>the<sp/>Basic<sp/>Rx<sp/>have<sp/>a<sp/>single<sp/>subdevice.<sp/><sp/>The<sp/>Basic<sp/>Rx</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/>has<sp/>two<sp/>independent<sp/>channels,<sp/>treated<sp/>as<sp/>separate<sp/>subdevices).</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/>subdevice<sp/>0<sp/>of<sp/>a<sp/>daughterboard<sp/>may<sp/>use<sp/>1<sp/>or<sp/>2<sp/>A/D&apos;s.<sp/><sp/>We<sp/>determine<sp/>this</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>checking<sp/>the<sp/>is_quadrature()<sp/>method.<sp/><sp/>If<sp/>subdevice<sp/>0<sp/>uses<sp/>only<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/>A/D,<sp/>it&apos;s<sp/>possible<sp/>that<sp/>the<sp/>daughterboard<sp/>has<sp/>a<sp/>second<sp/>subdevice,<sp/>subdevice<sp/>1,</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>it<sp/>uses<sp/>the<sp/>second<sp/>A/D.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>card<sp/>uses<sp/>only<sp/>a<sp/>single<sp/>A/D,<sp/>we<sp/>wire<sp/>a<sp/>zero<sp/>into<sp/>the<sp/>DDC<sp/>Q<sp/>input.</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/><sp/>(side,<sp/>0)<sp/>says<sp/>connect<sp/>only<sp/>the<sp/>A/D&apos;s<sp/>used<sp/>by<sp/>subdevice<sp/>0<sp/>to<sp/>the<sp/>DDC.</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/>(side,<sp/>1)<sp/>says<sp/>connect<sp/>only<sp/>the<sp/>A/D&apos;s<sp/>used<sp/>by<sp/>subdevice<sp/>1<sp/>to<sp/>the<sp/>DDC.</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">truth_table_element</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_side;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_uses;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_swap_iq;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d_mux_val;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_table_element(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uses,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap_iq,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux_val=0)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>d_side(side),<sp/>d_uses(uses),<sp/>d_swap_iq(swap_iq),<sp/>d_mux_val(mux_val){}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>truth_table_element<sp/>&amp;in)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_side<sp/>==<sp/>in.d_side<sp/>&amp;&amp;<sp/>d_uses<sp/>==<sp/>in.d_uses<sp/>&amp;&amp;<sp/>d_swap_iq<sp/>==<sp/>in.d_swap_iq);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux_val()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_mux_val;<sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__basic_1a61af504df443a9d846ecf909871f1481" kindref="member">is_valid</ref>(ss))</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;subdev_spec&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>tuple<sp/>of<sp/>length<sp/>1<sp/>or<sp/>2<sp/>containing<sp/>the<sp/>subdevice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>classes<sp/>for<sp/>the<sp/>selected<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>std::vector&lt;db_base_sptr&gt;<sp/>db<sp/>=<sp/>this-&gt;<ref refid="classusrp__basic_1a8eb1f58ca819437d7f43ad87574bd6da" kindref="member">db</ref>(ss.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uses;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>bitmasks<sp/>of<sp/>used<sp/>A/D&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(db[ss.<ref refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" kindref="member">subdev</ref>]-&gt;is_quadrature())</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>uses<sp/>=<sp/>0x3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uses<sp/>A/D<sp/>0<sp/>and<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ss.<ref refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" kindref="member">subdev</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>uses<sp/>=<sp/>0x1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uses<sp/>A/D<sp/>0<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ss.<ref refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" kindref="member">subdev</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>uses<sp/>=<sp/>0x2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uses<sp/>A/D<sp/>1<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>uses<sp/>=<sp/>0x0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uses<sp/>no<sp/>A/D<sp/>(doesn&apos;t<sp/>exist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uses<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Determine<sp/>RX<sp/>Mux<sp/>Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap_iq<sp/>=<sp/>db[ss.<ref refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" kindref="member">subdev</ref>]-&gt;i_and_q_swapped();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>truth_table_element<sp/>truth_table[8]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(side,<sp/>uses,<sp/>swap_iq)<sp/>:<sp/>mux_val</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_table_element(0,<sp/>0x1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0xf0f0f0f0),</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_table_element(0,<sp/>0x2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0xf0f0f0f1),</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_table_element(0,<sp/>0x3,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0x00000010),</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_table_element(0,<sp/>0x3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/>0x00000001),</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_table_element(1,<sp/>0x1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0xf0f0f0f2),</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_table_element(1,<sp/>0x2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0xf0f0f0f3),</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_table_element(1,<sp/>0x3,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0x00000032),</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>truth_table_element(1,<sp/>0x3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/>0x00000023)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nelements<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(truth_table)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(truth_table[0]);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>truth_table_element<sp/>target(ss.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref>,<sp/>uses,<sp/>swap_iq,<sp/>0);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nelements;<sp/>i++){</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(truth_table[i]<sp/>==<sp/>target)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>truth_table[i].mux_val();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;internal<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="classusrp__standard__rx_1abfe3924bcd4da66e431bac0d20a99bf4" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a1b1d513ec9017203d3d2eede645093d5" kindref="member">usrp_standard_rx::determine_rx_mux_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structusrp__subdev__spec" kindref="compound">usrp_subdev_spec</ref><sp/>&amp;ss_a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structusrp__subdev__spec" kindref="compound">usrp_subdev_spec</ref><sp/>&amp;ss_b)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>std::vector&lt;db_base_sptr&gt;<sp/>db_a<sp/>=<sp/>this-&gt;<ref refid="classusrp__basic_1a8eb1f58ca819437d7f43ad87574bd6da" kindref="member">db</ref>(ss_a.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>std::vector&lt;db_base_sptr&gt;<sp/>db_b<sp/>=<sp/>this-&gt;<ref refid="classusrp__basic_1a8eb1f58ca819437d7f43ad87574bd6da" kindref="member">db</ref>(ss_b.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(db_a[ss_a.<ref refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" kindref="member">subdev</ref>]-&gt;is_quadrature()<sp/>!=<sp/>db_b[ss_b.<ref refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" kindref="member">subdev</ref>]-&gt;is_quadrature()){</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>compute<sp/>dual<sp/>mux<sp/>when<sp/>mixing<sp/>quadrature<sp/>and<sp/>non-quadrature<sp/>subdevices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux_a<sp/>=<sp/><ref refid="classusrp__standard__rx_1a1b1d513ec9017203d3d2eede645093d5" kindref="member">determine_rx_mux_value</ref>(ss_a);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux_b<sp/>=<sp/><ref refid="classusrp__standard__rx_1a1b1d513ec9017203d3d2eede645093d5" kindref="member">determine_rx_mux_value</ref>(ss_b);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//move<sp/>the<sp/>lower<sp/>byte<sp/>of<sp/>the<sp/>mux<sp/>b<sp/>into<sp/>the<sp/>second<sp/>byte<sp/>of<sp/>the<sp/>mux<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((mux_b<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(mux_a<sp/>&amp;<sp/>0xffff00ff);</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="classusrp__standard__rx_1a4f3584afcc01962580cf420015d93cda" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a4f3584afcc01962580cf420015d93cda" kindref="member">usrp_standard_rx::set_rx_freq</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&lt;<sp/>0<sp/>||<sp/>channel<sp/>&gt;<sp/>MAX_CHAN)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>compute_freq_control_word_fpga<sp/>(<ref refid="classusrp__basic__rx_1ace4aa6537246ecf948ec0ae35e1d6e48" kindref="member">adc_rate</ref>(),</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freq,<sp/>&amp;d_rx_freq[channel],</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classusrp__basic_1a6d0fecbe64f35fef20293c27dc33a0b0" kindref="member">d_verbose</ref>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" kindref="member">_write_fpga_reg</ref><sp/>(FR_RX_FREQ_0<sp/>+<sp/>channel,<sp/>v);</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="classusrp__standard__rx_1ab92676b3ff5e472846e957f95c3374e5" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1ab92676b3ff5e472846e957f95c3374e5" kindref="member">usrp_standard_rx::decim_rate</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_decim_rate;<sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="classusrp__standard__rx_1a0ad5d52ec8a7c7270e6248614ae0a4a4" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a0ad5d52ec8a7c7270e6248614ae0a4a4" kindref="member">usrp_standard_rx::nchannels</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_nchan;<sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="classusrp__standard__rx_1a5705205822065977c5e777aafe5c203f" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a5705205822065977c5e777aafe5c203f" kindref="member">usrp_standard_rx::mux</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_sw_mux;<sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="673" refid="classusrp__standard__rx_1a1b8044ecae8a8acc9bb84e40dce4076e" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a1b8044ecae8a8acc9bb84e40dce4076e" kindref="member">usrp_standard_rx::rx_freq</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="674"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&lt;<sp/>0<sp/>||<sp/>channel<sp/>&gt;=<sp/>MAX_CHAN)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_rx_freq[channel];</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="classusrp__standard__rx_1aafcd5898e3cddfaacd0535a6a678aafd" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1aafcd5898e3cddfaacd0535a6a678aafd" kindref="member">usrp_standard_rx::set_fpga_mode</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" kindref="member">_write_fpga_reg</ref><sp/>(FR_MODE,<sp/>mode);</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="classusrp__standard__rx_1a71a1352e5b799f798ea528a09f240b7d" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a71a1352e5b799f798ea528a09f240b7d" kindref="member">usrp_standard_rx::set_ddc_phase</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phase)</highlight></codeline>
<codeline lineno="689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&lt;<sp/>0<sp/>||<sp/>channel<sp/>&gt;=<sp/>MAX_CHAN)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" kindref="member">_write_fpga_reg</ref>(FR_RX_PHASE_0<sp/>+<sp/>channel,<sp/>phase);</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>avoid<sp/>quiet<sp/>failures,<sp/>check<sp/>for<sp/>things<sp/>that<sp/>our<sp/>code<sp/>cares<sp/>about.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">rx_format_is_valid(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__rx_1a138542206516dba75c5c90af984dcf84" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/><sp/><ref refid="classusrp__standard__rx_1a7e7b2474c65673c9a68dfc8f08293399" kindref="member">usrp_standard_rx::format_width</ref>(format);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>want_q<sp/>=<sp/><ref refid="classusrp__standard__rx_1ad5f82de396844f5e1864b6602f3f1066" kindref="member">usrp_standard_rx::format_want_q</ref>(format);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(width<sp/>==<sp/>8<sp/>||<sp/>width<sp/>==<sp/>16))<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>add<sp/>other<sp/>widths<sp/>when<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!want_q)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>remove<sp/>check<sp/>when<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>code<sp/>can<sp/>handle<sp/>I<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="classusrp__standard__rx_1ad196898bb518333f3ce753905d3cfd0a" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1ad196898bb518333f3ce753905d3cfd0a" kindref="member">usrp_standard_rx::set_format</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format)</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rx_format_is_valid(format))</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" kindref="member">_write_fpga_reg</ref>(FR_RX_FORMAT,<sp/>format);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="classusrp__standard__rx_1a138542206516dba75c5c90af984dcf84" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a138542206516dba75c5c90af984dcf84" kindref="member">usrp_standard_rx::format</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="725"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__basic_1af3d08c8bcdd0ed116e76ffa5449004f2" kindref="member">d_fpga_shadows</ref>[FR_RX_FORMAT];</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="732" refid="classusrp__standard__rx_1ae77c37e8be21095bb6add76e1c261121" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1ae77c37e8be21095bb6add76e1c261121" kindref="member">usrp_standard_rx::make_format</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>want_q,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bypass_halfband)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format<sp/>=<sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>(((width<sp/>&lt;&lt;<sp/>bmFR_RX_FORMAT_WIDTH_SHIFT)<sp/>&amp;<sp/>bmFR_RX_FORMAT_WIDTH_MASK)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>|<sp/>((shift<sp/>&lt;&lt;<sp/>bmFR_RX_FORMAT_SHIFT_SHIFT)<sp/>&amp;<sp/>bmFR_RX_FORMAT_SHIFT_MASK));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(want_q)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>format<sp/>|=<sp/>bmFR_RX_FORMAT_WANT_Q;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bypass_halfband)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>format<sp/>|=<sp/>bmFR_RX_FORMAT_BYPASS_HB;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__rx_1a138542206516dba75c5c90af984dcf84" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="classusrp__standard__rx_1a7e7b2474c65673c9a68dfc8f08293399" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a7e7b2474c65673c9a68dfc8f08293399" kindref="member">usrp_standard_rx::format_width</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format)</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(format<sp/>&amp;<sp/>bmFR_RX_FORMAT_WIDTH_MASK)<sp/>&gt;&gt;<sp/>bmFR_RX_FORMAT_WIDTH_SHIFT;</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753" refid="classusrp__standard__rx_1a15cc1572f31cd9b0436dbc4aaad4b634" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a15cc1572f31cd9b0436dbc4aaad4b634" kindref="member">usrp_standard_rx::format_shift</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(format<sp/>&amp;<sp/>bmFR_RX_FORMAT_SHIFT_MASK)<sp/>&gt;&gt;<sp/>bmFR_RX_FORMAT_SHIFT_SHIFT;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759" refid="classusrp__standard__rx_1ad5f82de396844f5e1864b6602f3f1066" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1ad5f82de396844f5e1864b6602f3f1066" kindref="member">usrp_standard_rx::format_want_q</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(format<sp/>&amp;<sp/>bmFR_RX_FORMAT_WANT_Q)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="classusrp__standard__rx_1a8bc4f06d059eff8bc6bc3766d89b5d41" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a8bc4f06d059eff8bc6bc3766d89b5d41" kindref="member">usrp_standard_rx::format_bypass_halfband</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format)</highlight></codeline>
<codeline lineno="766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(format<sp/>&amp;<sp/>bmFR_RX_FORMAT_BYPASS_HB)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="classusrp__standard__rx_1a261d53e643bfc5e6bdaa2f84a070bd42" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__rx_1a261d53e643bfc5e6bdaa2f84a070bd42" kindref="member">usrp_standard_rx::tune</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan,<sp/><ref refid="db__base_8h_1a61ead10400f658a22128a321e14ae0ac" kindref="member">db_base_sptr</ref><sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_freq,<sp/><ref refid="classusrp__tune__result" kindref="compound">usrp_tune_result</ref><sp/>*result)</highlight></codeline>
<codeline lineno="772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><ref refid="classddc__control" kindref="compound">ddc_control</ref><sp/>dxc(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>chan);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tune_a_helper(db,<sp/>target_freq,<sp/><ref refid="classusrp__basic__rx_1afd14b376f2449cfb71865c9980ea2358" kindref="member">converter_rate</ref>(),<sp/>dxc,<sp/>result);</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tx<sp/>data<sp/>is<sp/>timed<sp/>to<sp/>CLKOUT1<sp/>(64<sp/>MHz)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment">//<sp/>interpolate<sp/>4x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fine<sp/>modulator<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tx_regs_use_nco[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><ref refid="ad9862_8h_1a64212ab1643d072de2877248bb010199" kindref="member">REG_TX_IF</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="ad9862_8h_1ad44bf63997b0429defd378a9a53297b5" kindref="member">TX_IF_USE_CLKOUT1</ref></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="ad9862_8h_1a4b09647010c4cf3c02e1b9bde5b1fe77" kindref="member">TX_IF_I_FIRST</ref></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="ad9862_8h_1add5298bf21c56b73c9d7b490c0a4ffc2" kindref="member">TX_IF_2S_COMP</ref></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="ad9862_8h_1a35fc219ef4a13e86fe341c03bb58f5bd" kindref="member">TX_IF_INTERLEAVED</ref>),</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><ref refid="ad9862_8h_1a861fc9efe0664fb4919b7462f3a0cc62" kindref="member">REG_TX_DIGITAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="ad9862_8h_1a97ea7098bcbce7bf382ddc2cd43f8612" kindref="member">TX_DIGITAL_2_DATA_PATHS</ref></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="ad9862_8h_1a7823099404205d27bedf6e6e04a986fd" kindref="member">TX_DIGITAL_INTERPOLATE_4X</ref>)</highlight></codeline>
<codeline lineno="793"><highlight class="normal">};</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal">real_tx_mux_value<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mux<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__rx_1a5705205822065977c5e777aafe5c203f" kindref="member">mux</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(nchan){</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x0098;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0xba98;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(0);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="classusrp__standard__tx_1ab3ebe65a0203867b6c71edcf2d4ffb88" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1ab3ebe65a0203867b6c71edcf2d4ffb88" kindref="member">usrp_standard_tx::usrp_standard_tx</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_board,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interp_rate,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fusb_block_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fusb_nblocks,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>fpga_filename,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>firmware_filename</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classusrp__basic__tx" kindref="compound">usrp_basic_tx</ref><sp/>(which_board,<sp/>fusb_block_size,<sp/>fusb_nblocks,<sp/>fpga_filename,<sp/>firmware_filename),</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__common" kindref="compound">usrp_standard_common</ref>(this),</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>d_sw_mux<sp/>(0x8),<sp/>d_hw_mux<sp/>(0x81)</highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="usrp__prims_8h_1a4ffbe7a8f1f34c079f4e48dd63d5332b" kindref="member">usrp_9862_write_many_all</ref><sp/>(<ref refid="classusrp__basic_1aad5f6f17a9fde484c67e7dbdd0491f74" kindref="member">d_udh</ref>,<sp/>tx_regs_use_nco,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(tx_regs_use_nco))){</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_tx:<sp/>failed<sp/>to<sp/>init<sp/>AD9862<sp/>TX<sp/>regs\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_tx::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__standard__tx_1a5e9167c1f811c6446467ba2935cde618" kindref="member">set_nchannels</ref><sp/>(nchan)){</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_tx:<sp/>set_nchannels<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_tx::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__standard__tx_1a7b092ae2811927291ffc3491e4461282" kindref="member">set_interp_rate</ref><sp/>(interp_rate)){</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_tx:<sp/>set_interp_rate<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_tx::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__standard__tx_1a2e432c316c8a91613b9603ebe664bfd1" kindref="member">set_mux</ref><sp/>(real_tx_mux_value<sp/>(mux,<sp/>nchan))){</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_tx:<sp/>set_mux<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;usrp_standard_tx::ctor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classusrp__standard__tx_1a2d21279d48272cf133db170b9f142218" kindref="member">MAX_CHAN</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[i]<sp/>=<sp/>(<ref refid="ad9862_8h_1a10a813fa1f8ad63553a9d5a6843d4010" kindref="member">TX_MODULATOR_DISABLE_NCO</ref></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="ad9862_8h_1a43eee1217b373c811b6cbace1b4a008c" kindref="member">TX_MODULATOR_COARSE_MODULATION_NONE</ref>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a5c439350ad4d861c49c21d203110eedb" kindref="member">d_coarse_mod</ref>[i]<sp/>=<sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191afd3ae5e29447d64701502467ce0886c7" kindref="member">CM_OFF</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1ae75deb35fef49d5e647b2141443d7106" kindref="member">set_tx_freq</ref><sp/>(i,<sp/>0);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="classusrp__standard__tx_1a440777cafe861f07ddeafa4d30327a1d" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a440777cafe861f07ddeafa4d30327a1d" kindref="member">usrp_standard_tx::~usrp_standard_tx</ref><sp/>()</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fprintf(stderr,<sp/>&quot;\nusrp_standard_tx:<sp/>dtor\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854" refid="classusrp__standard__tx_1ae6f8039f30bf641b937877001127176f" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1ae6f8039f30bf641b937877001127176f" kindref="member">usrp_standard_tx::start</ref><sp/>()</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__basic__tx_1a3d16b0d8e96d5124b6392bc44014124d" kindref="member">usrp_basic_tx::start</ref><sp/>())</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>our<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865" refid="classusrp__standard__tx_1a5173292e6162fce54a875683f02cdd5c" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a5173292e6162fce54a875683f02cdd5c" kindref="member">usrp_standard_tx::stop</ref><sp/>()</highlight></codeline>
<codeline lineno="866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="classusrp__basic__tx_1ab1c5851e72e29e86af914da5c7f62cf8" kindref="member">usrp_basic_tx::stop</ref><sp/>();</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>our<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><ref refid="usrp__standard_8h_1a0982118b5bcfa5fd08137dd5a7583b07" kindref="member">usrp_standard_tx_sptr</ref></highlight></codeline>
<codeline lineno="875" refid="classusrp__standard__tx_1ac156d958c028f4c30a18bda9f23ba8b9" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1ac156d958c028f4c30a18bda9f23ba8b9" kindref="member">usrp_standard_tx::make</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_board,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a2268e9e90e037cce86f9f83cce2a006d" kindref="member">interp_rate</ref>,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fusb_block_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fusb_nblocks,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>fpga_filename,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>firmware_filename</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrp__standard_8h_1a0982118b5bcfa5fd08137dd5a7583b07" kindref="member">usrp_standard_tx_sptr</ref><sp/>u<sp/><sp/>=<sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usrp__standard_8h_1a0982118b5bcfa5fd08137dd5a7583b07" kindref="member">usrp_standard_tx_sptr</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1ab3ebe65a0203867b6c71edcf2d4ffb88" kindref="member">usrp_standard_tx</ref>(which_board,<sp/>interp_rate,<sp/>nchan,<sp/>mux,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fusb_block_size,<sp/>fusb_nblocks,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpga_filename,<sp/>firmware_filename));</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>u-&gt;init_db(u);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...){</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__standard_8h_1a0982118b5bcfa5fd08137dd5a7583b07" kindref="member">usrp_standard_tx_sptr</ref>();</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897" refid="classusrp__standard__tx_1a7b092ae2811927291ffc3491e4461282" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a7b092ae2811927291ffc3491e4461282" kindref="member">usrp_standard_tx::set_interp_rate</ref><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rate)</highlight></codeline>
<codeline lineno="898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fprintf<sp/>(stderr,<sp/>&quot;usrp_standard_tx::set_interp_rate\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rate<sp/>&amp;<sp/>0x3)<sp/>||<sp/>rate<sp/>&lt;<sp/>4<sp/>||<sp/>rate<sp/>&gt;<sp/>512){</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usrp_standard_tx::set_interp_rate:<sp/>rate<sp/>must<sp/>be<sp/>in<sp/>[4,<sp/>512]<sp/>and<sp/>a<sp/>multiple<sp/>of<sp/>4.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx_1ac1c7c7ce9479045ad9dca8f409f5ef87" kindref="member">d_interp_rate</ref><sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><ref refid="classusrp__basic_1a77535750946e7d8443a76941a9611cae" kindref="member">set_usb_data_rate</ref><sp/>((<ref refid="classusrp__basic__tx_1a618be27f79f9ab769f33ead42c9283a7" kindref="member">dac_rate</ref><sp/>()<sp/>/<sp/>rate<sp/>*<sp/><ref refid="classusrp__standard__tx_1afc401f90409da171a5de0f91cf5749ef" kindref="member">nchannels</ref><sp/>())</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>using<sp/>the<sp/>interp<sp/>by<sp/>4<sp/>feature<sp/>of<sp/>the<sp/>9862<sp/>so<sp/>that<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>its<sp/>fine<sp/>modulator.<sp/><sp/>Thus,<sp/>we<sp/>reduce<sp/>the<sp/>FPGA&apos;s<sp/>interpolation<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>a<sp/>factor<sp/>of<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="classusrp__basic__tx_1a2298762ed6e3f39c000a141a4964e181" kindref="member">disable_tx</ref><sp/>();</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" kindref="member">_write_fpga_reg</ref><sp/>(FR_INTERP_RATE,<sp/><ref refid="classusrp__standard__tx_1ac1c7c7ce9479045ad9dca8f409f5ef87" kindref="member">d_interp_rate</ref>/4<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><ref refid="classusrp__basic__tx_1a7dd7dc05a7767f38ce25b407a705c2d5" kindref="member">restore_tx</ref><sp/>(s);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921" refid="classusrp__standard__tx_1a5e9167c1f811c6446467ba2935cde618" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a5e9167c1f811c6446467ba2935cde618" kindref="member">usrp_standard_tx::set_nchannels</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchan)</highlight></codeline>
<codeline lineno="922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(nchan<sp/>==<sp/>1<sp/>||<sp/>nchan<sp/>==<sp/>2))</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nchan<sp/>&gt;<sp/><ref refid="classusrp__standard__common_1a9dec671bc0d7c50157083f46538844af" kindref="member">nducs</ref>())</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx_1a536872bd7b7f90d94bf58f5b45df0f3d" kindref="member">d_nchan</ref><sp/>=<sp/>nchan;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1abd05aee7bbd18ef62bcc8dc18a11a960" kindref="member">write_hw_mux_reg</ref><sp/>();</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934" refid="classusrp__standard__tx_1a2e432c316c8a91613b9603ebe664bfd1" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a2e432c316c8a91613b9603ebe664bfd1" kindref="member">usrp_standard_tx::set_mux</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux)</highlight></codeline>
<codeline lineno="935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx_1adc70d6cc3f72451cd83b7276d35b2615" kindref="member">d_sw_mux</ref><sp/>=<sp/><ref refid="classusrp__standard__tx_1a18b5e48aee2ab110932d382b94e71268" kindref="member">mux</ref>;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx_1a4b22d4e7f26f031d01fe99b4c8394447" kindref="member">d_hw_mux</ref><sp/>=<sp/>mux<sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1abd05aee7bbd18ef62bcc8dc18a11a960" kindref="member">write_hw_mux_reg</ref><sp/>();</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942" refid="classusrp__standard__tx_1abd05aee7bbd18ef62bcc8dc18a11a960" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1abd05aee7bbd18ef62bcc8dc18a11a960" kindref="member">usrp_standard_tx::write_hw_mux_reg</ref><sp/>()</highlight></codeline>
<codeline lineno="943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="classusrp__basic__tx_1a2298762ed6e3f39c000a141a4964e181" kindref="member">disable_tx</ref><sp/>();</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" kindref="member">_write_fpga_reg</ref><sp/>(FR_TX_MUX,<sp/><ref refid="classusrp__standard__tx_1a4b22d4e7f26f031d01fe99b4c8394447" kindref="member">d_hw_mux</ref><sp/>|<sp/><ref refid="classusrp__standard__tx_1a536872bd7b7f90d94bf58f5b45df0f3d" kindref="member">d_nchan</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><ref refid="classusrp__basic__tx_1a7dd7dc05a7767f38ce25b407a705c2d5" kindref="member">restore_tx</ref><sp/>(s);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951" refid="classusrp__standard__tx_1a386da4e76f7b2393563e48555c613a96" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a386da4e76f7b2393563e48555c613a96" kindref="member">usrp_standard_tx::determine_tx_mux_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structusrp__subdev__spec" kindref="compound">usrp_subdev_spec</ref><sp/>&amp;ss)</highlight></codeline>
<codeline lineno="952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/>Determine<sp/>appropriate<sp/>Tx<sp/>mux<sp/>value<sp/>as<sp/>a<sp/>function<sp/>of<sp/>the<sp/>subdevice<sp/>choosen.</highlight></codeline>
<codeline lineno="955"><highlight class="comment"></highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/>@param<sp/>u:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/>of<sp/>USRP<sp/>source</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/><sp/><sp/>@param<sp/>subdev_spec:<sp/>return<sp/>value<sp/>from<sp/>subdev<sp/>option<sp/>parser.<sp/><sp/></highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/>@type<sp/><sp/>subdev_spec:<sp/>(side,<sp/>subdev),<sp/>where<sp/>side<sp/>is<sp/>0<sp/>or<sp/>1<sp/>and<sp/>subdev<sp/>is<sp/>0</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/><sp/><sp/><sp/>@returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Rx<sp/>mux<sp/>value</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>is<sp/>simpler<sp/>than<sp/>the<sp/>rx<sp/>case.<sp/><sp/>Either<sp/>you<sp/>want<sp/>to<sp/>talk</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>side<sp/>A<sp/>or<sp/>side<sp/>B.<sp/><sp/>If<sp/>you<sp/>want<sp/>to<sp/>talk<sp/>to<sp/>both<sp/>sides<sp/>at<sp/>once,</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/><sp/><sp/><sp/>determine<sp/>the<sp/>value<sp/>manually.</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classusrp__basic_1a61af504df443a9d846ecf909871f1481" kindref="member">is_valid</ref>(ss))</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;subdev_spec&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>std::vector&lt;db_base_sptr&gt;<sp/>db<sp/>=<sp/>this-&gt;<ref refid="classusrp__basic_1a8eb1f58ca819437d7f43ad87574bd6da" kindref="member">db</ref>(ss.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(db[ss.<ref refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" kindref="member">subdev</ref>]-&gt;i_and_q_swapped())<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask[2]<sp/>=<sp/>{0x0089,<sp/>0x8900};</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask[ss.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref>];</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask[2]<sp/>=<sp/>{0x0098,<sp/>0x9800};</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask[ss.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref>];</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982" refid="classusrp__standard__tx_1a24a7b471679b8e2485bfff5cce7adb96" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a386da4e76f7b2393563e48555c613a96" kindref="member">usrp_standard_tx::determine_tx_mux_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structusrp__subdev__spec" kindref="compound">usrp_subdev_spec</ref><sp/>&amp;ss_a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structusrp__subdev__spec" kindref="compound">usrp_subdev_spec</ref><sp/>&amp;ss_b)</highlight></codeline>
<codeline lineno="983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ss_a.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref><sp/>==<sp/>ss_b.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref><sp/>&amp;&amp;<sp/>ss_a.<ref refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" kindref="member">subdev</ref><sp/>==<sp/>ss_b.<ref refid="structusrp__subdev__spec_1abb7b7dbdca4355d0957b2233a32119ef" kindref="member">subdev</ref>){</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>compute<sp/>dual<sp/>mux,<sp/>repeated<sp/>subdevice&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux_a<sp/>=<sp/><ref refid="classusrp__standard__tx_1a386da4e76f7b2393563e48555c613a96" kindref="member">determine_tx_mux_value</ref>(ss_a);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>mux<sp/>b:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>DAC0<sp/>becomes<sp/>DAC2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>DAC1<sp/>becomes<sp/>DAC3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask[2]<sp/>=<sp/>{0x0022,<sp/>0x2200};</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mux_b<sp/>=<sp/><ref refid="classusrp__standard__tx_1a386da4e76f7b2393563e48555c613a96" kindref="member">determine_tx_mux_value</ref>(ss_b)<sp/>+<sp/>mask[ss_b.<ref refid="structusrp__subdev__spec_1aeff15f40736fb2af3e1eddb85a243252" kindref="member">side</ref>];</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mux_b<sp/>|<sp/>mux_a;</highlight></codeline>
<codeline lineno="994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_FPGA_TX_CORDIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><ref refid="classusrp__standard__tx_1ae75deb35fef49d5e647b2141443d7106" kindref="member">usrp_standard_tx::set_tx_freq</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&lt;<sp/>0<sp/>||<sp/>channel<sp/>&gt;=<sp/><ref refid="classusrp__standard__tx_1a2d21279d48272cf133db170b9f142218" kindref="member">MAX_CHAN</ref>)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>assumes<sp/>we&apos;re<sp/>running<sp/>the<sp/>4x<sp/>on-chip<sp/>interpolator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>compute_freq_control_word_fpga<sp/>(<ref refid="classusrp__basic__tx_1a618be27f79f9ab769f33ead42c9283a7" kindref="member">dac_rate</ref><sp/>()<sp/>/<sp/>4,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freq,<sp/>&amp;<ref refid="classusrp__standard__tx_1a28918715849de2505bd480cccb5d6b4c" kindref="member">d_tx_freq</ref>[channel],</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classusrp__basic_1a6d0fecbe64f35fef20293c27dc33a0b0" kindref="member">d_verbose</ref>);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__basic_1ac5bdb9be69f27eb3a0530cba9536d0f4" kindref="member">_write_fpga_reg</ref><sp/>(FR_TX_FREQ_0<sp/>+<sp/>channel,<sp/>v);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018" refid="classusrp__standard__tx_1ae75deb35fef49d5e647b2141443d7106" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1ae75deb35fef49d5e647b2141443d7106" kindref="member">usrp_standard_tx::set_tx_freq</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&lt;<sp/>0<sp/>||<sp/>channel<sp/>&gt;=<sp/><ref refid="classusrp__standard__tx_1a2d21279d48272cf133db170b9f142218" kindref="member">MAX_CHAN</ref>)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>freq<sp/>into<sp/>fine<sp/>and<sp/>coarse<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191" kindref="member">coarse_mod_t</ref><sp/><sp/>cm;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarse;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coarse_freq_1<sp/>=<sp/><ref refid="classusrp__basic__tx_1a618be27f79f9ab769f33ead42c9283a7" kindref="member">dac_rate</ref><sp/>()<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>First<sp/>coarse<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coarse_freq_2<sp/>=<sp/><ref refid="classusrp__basic__tx_1a618be27f79f9ab769f33ead42c9283a7" kindref="member">dac_rate</ref><sp/>()<sp/>/<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>Second<sp/>coarse<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coarse_limit_1<sp/>=<sp/>coarse_freq_1<sp/>/<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Midpoint<sp/>of<sp/>[0<sp/>,<sp/>freq1]<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coarse_limit_2<sp/>=<sp/>(coarse_freq_1<sp/>+<sp/>coarse_freq_2)<sp/>/<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Midpoint<sp/>of<sp/>[freq1<sp/>,<sp/>freq2]<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>high_limit<sp/>=<sp/>(double)44e6/128e6*<ref refid="classusrp__basic__tx_1a618be27f79f9ab769f33ead42c9283a7" kindref="member">dac_rate</ref><sp/>();<sp/></highlight><highlight class="comment">//<sp/>Highest<sp/>meaningful<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>&lt;<sp/>-high_limit)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>&lt;<sp/>-coarse_limit_2){<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>64MHz:<sp/>[-44,<sp/>-24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>cm<sp/>=<sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191a55fe460189a049f7aea3f9bc149adf91" kindref="member">CM_NEG_FDAC_OVER_4</ref>;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>coarse<sp/>=<sp/>-coarse_freq_2;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>&lt;<sp/>-coarse_limit_1){<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>64MHz:<sp/>[-24,<sp/>-8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>cm<sp/>=<sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191a98ba952bdb469cbbb02a163216162e7c" kindref="member">CM_NEG_FDAC_OVER_8</ref>;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>coarse<sp/>=<sp/>-coarse_freq_1;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>&lt;<sp/>coarse_limit_1){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>64MHz:<sp/>[-8,<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>cm<sp/>=<sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191afd3ae5e29447d64701502467ce0886c7" kindref="member">CM_OFF</ref>;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>coarse<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>&lt;<sp/>coarse_limit_2){<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>64MHz:<sp/>[8,<sp/>24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>cm<sp/>=<sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191ad3e2a1cb01acbb2e491780a2ad334e14" kindref="member">CM_POS_FDAC_OVER_8</ref>;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>coarse<sp/>=<sp/>coarse_freq_1;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>&lt;=<sp/>high_limit){<sp/></highlight><highlight class="comment">//<sp/>For<sp/>64MHz:<sp/>[24,<sp/>44]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>cm<sp/>=<sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191aad92fc027ad13bcbf3cc8839918822bc" kindref="member">CM_POS_FDAC_OVER_4</ref>;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>coarse<sp/>=<sp/>coarse_freq_2;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>high</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx_1ac19e5234b3139a369a9c7ad5844190ed" kindref="member">set_coarse_modulator</ref><sp/>(channel,<sp/>cm);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>bits<sp/>in<sp/>d_tx_modulator_shadow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fine<sp/>=<sp/>freq<sp/>-<sp/>coarse;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>fine<sp/>tuning<sp/>word...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>assumes<sp/>we&apos;re<sp/>running<sp/>the<sp/>4x<sp/>on-chip<sp/>interpolator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(This<sp/>is<sp/>required<sp/>to<sp/>use<sp/>the<sp/>fine<sp/>modulator.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>compute_freq_control_word_9862<sp/>(<ref refid="classusrp__basic__tx_1a618be27f79f9ab769f33ead42c9283a7" kindref="member">dac_rate</ref><sp/>()<sp/>/<sp/>4,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fine,<sp/>&amp;<ref refid="classusrp__standard__tx_1a28918715849de2505bd480cccb5d6b4c" kindref="member">d_tx_freq</ref>[channel],<sp/><ref refid="classusrp__basic_1a6d0fecbe64f35fef20293c27dc33a0b0" kindref="member">d_verbose</ref>);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx_1a28918715849de2505bd480cccb5d6b4c" kindref="member">d_tx_freq</ref>[channel]<sp/>+=<sp/>coarse;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>actual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>high,<sp/>mid,<sp/>low;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>high<sp/>=<sp/>(v<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>mid<sp/>=<sp/><sp/>(v<sp/>&gt;&gt;<sp/><sp/>8)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>low<sp/>=<sp/><sp/>(v<sp/>&gt;&gt;<sp/><sp/>0)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>fine<sp/>tuning<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="classusrp__basic_1a8a25444c83f59f7517d0ff687d2ff053" kindref="member">_write_9862</ref><sp/>(channel,<sp/><ref refid="ad9862_8h_1a7080a286c1b197a710cdc20df0d45e95" kindref="member">REG_TX_NCO_FTW_23_16</ref>,<sp/>high);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="classusrp__basic_1a8a25444c83f59f7517d0ff687d2ff053" kindref="member">_write_9862</ref><sp/>(channel,<sp/><ref refid="ad9862_8h_1ae0fc0c371977742bad47973948040379" kindref="member">REG_TX_NCO_FTW_15_8</ref>,<sp/><sp/>mid);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="classusrp__basic_1a8a25444c83f59f7517d0ff687d2ff053" kindref="member">_write_9862</ref><sp/>(channel,<sp/><ref refid="ad9862_8h_1ae6b945733366396fe19e79eb0f7e2440" kindref="member">REG_TX_NCO_FTW_7_0</ref>,<sp/><sp/><sp/>low);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>|=<sp/><ref refid="ad9862_8h_1a1d9dd777b14ba8f17175f00bb8d9d2b5" kindref="member">TX_MODULATOR_ENABLE_NCO</ref>;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fine<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>|=<sp/><ref refid="ad9862_8h_1a188784c36751a24a8150aa1823bb2a04" kindref="member">TX_MODULATOR_NEG_FINE_TUNE</ref>;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>&amp;=<sp/>~<ref refid="ad9862_8h_1a188784c36751a24a8150aa1823bb2a04" kindref="member">TX_MODULATOR_NEG_FINE_TUNE</ref>;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>ok<sp/>&amp;=<ref refid="classusrp__basic_1a8a25444c83f59f7517d0ff687d2ff053" kindref="member">_write_9862</ref><sp/>(channel,<sp/><ref refid="ad9862_8h_1ad5c63f9d7a28affa5c98fb7249a471e5" kindref="member">REG_TX_MODULATOR</ref>,<sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103" refid="classusrp__standard__tx_1ac19e5234b3139a369a9c7ad5844190ed" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1ac19e5234b3139a369a9c7ad5844190ed" kindref="member">usrp_standard_tx::set_coarse_modulator</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191" kindref="member">coarse_mod_t</ref><sp/>cm)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&lt;<sp/>0<sp/>||<sp/>channel<sp/>&gt;=<sp/><ref refid="classusrp__standard__tx_1a2d21279d48272cf133db170b9f142218" kindref="member">MAX_CHAN</ref>)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cm){</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191a55fe460189a049f7aea3f9bc149adf91" kindref="member">CM_NEG_FDAC_OVER_4</ref>:</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>&amp;=<sp/>~<ref refid="ad9862_8h_1ae03b7f81768ddf287e588019f135aab5" kindref="member">TX_MODULATOR_CM_MASK</ref>;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>|=<sp/><ref refid="ad9862_8h_1a4ba05aa3da6b440873fb92794b3978e3" kindref="member">TX_MODULATOR_COARSE_MODULATION_F_OVER_4</ref>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>|=<sp/><ref refid="ad9862_8h_1a0b7225cdb6b3e724aa5a2a9cccf0f763" kindref="member">TX_MODULATOR_NEG_COARSE_TUNE</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191a98ba952bdb469cbbb02a163216162e7c" kindref="member">CM_NEG_FDAC_OVER_8</ref>:</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>&amp;=<sp/>~<ref refid="ad9862_8h_1ae03b7f81768ddf287e588019f135aab5" kindref="member">TX_MODULATOR_CM_MASK</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>|=<sp/><ref refid="ad9862_8h_1aeecea632b6bbf221077bce8426c2b2dd" kindref="member">TX_MODULATOR_COARSE_MODULATION_F_OVER_8</ref>;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>|=<sp/><ref refid="ad9862_8h_1a0b7225cdb6b3e724aa5a2a9cccf0f763" kindref="member">TX_MODULATOR_NEG_COARSE_TUNE</ref>;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191afd3ae5e29447d64701502467ce0886c7" kindref="member">CM_OFF</ref>:</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>&amp;=<sp/>~<ref refid="ad9862_8h_1ae03b7f81768ddf287e588019f135aab5" kindref="member">TX_MODULATOR_CM_MASK</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191ad3e2a1cb01acbb2e491780a2ad334e14" kindref="member">CM_POS_FDAC_OVER_8</ref>:</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>&amp;=<sp/>~<ref refid="ad9862_8h_1ae03b7f81768ddf287e588019f135aab5" kindref="member">TX_MODULATOR_CM_MASK</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>|=<sp/><ref refid="ad9862_8h_1aeecea632b6bbf221077bce8426c2b2dd" kindref="member">TX_MODULATOR_COARSE_MODULATION_F_OVER_8</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191aad92fc027ad13bcbf3cc8839918822bc" kindref="member">CM_POS_FDAC_OVER_4</ref>:</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>&amp;=<sp/>~<ref refid="ad9862_8h_1ae03b7f81768ddf287e588019f135aab5" kindref="member">TX_MODULATOR_CM_MASK</ref>;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusrp__standard__tx_1a1b713d251419953e67467df19295c385" kindref="member">d_tx_modulator_shadow</ref>[channel]<sp/>|=<sp/><ref refid="ad9862_8h_1a4ba05aa3da6b440873fb92794b3978e3" kindref="member">TX_MODULATOR_COARSE_MODULATION_F_OVER_4</ref>;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><ref refid="classusrp__standard__tx_1a5c439350ad4d861c49c21d203110eedb" kindref="member">d_coarse_mod</ref>[channel]<sp/>=<sp/>cm;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144" refid="classusrp__standard__tx_1a2268e9e90e037cce86f9f83cce2a006d" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a2268e9e90e037cce86f9f83cce2a006d" kindref="member">usrp_standard_tx::interp_rate</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1ac1c7c7ce9479045ad9dca8f409f5ef87" kindref="member">d_interp_rate</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147" refid="classusrp__standard__tx_1afc401f90409da171a5de0f91cf5749ef" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1afc401f90409da171a5de0f91cf5749ef" kindref="member">usrp_standard_tx::nchannels</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a536872bd7b7f90d94bf58f5b45df0f3d" kindref="member">d_nchan</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150" refid="classusrp__standard__tx_1a18b5e48aee2ab110932d382b94e71268" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a18b5e48aee2ab110932d382b94e71268" kindref="member">usrp_standard_tx::mux</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1adc70d6cc3f72451cd83b7276d35b2615" kindref="member">d_sw_mux</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153" refid="classusrp__standard__tx_1aa527ce0117c6f6fb6e89f09efb4e381f" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1aa527ce0117c6f6fb6e89f09efb4e381f" kindref="member">usrp_standard_tx::tx_freq</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1154"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&lt;<sp/>0<sp/>||<sp/>channel<sp/>&gt;=<sp/><ref refid="classusrp__standard__tx_1a2d21279d48272cf133db170b9f142218" kindref="member">MAX_CHAN</ref>)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a28918715849de2505bd480cccb5d6b4c" kindref="member">d_tx_freq</ref>[channel];</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191" kindref="member">usrp_standard_tx::coarse_mod_t</ref></highlight></codeline>
<codeline lineno="1162" refid="classusrp__standard__tx_1a878b5d0c2c3878a27c54eb95122467f9" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a878b5d0c2c3878a27c54eb95122467f9" kindref="member">usrp_standard_tx::coarse_modulator</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1163"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&lt;<sp/>0<sp/>||<sp/>channel<sp/>&gt;=<sp/><ref refid="classusrp__standard__tx_1a2d21279d48272cf133db170b9f142218" kindref="member">MAX_CHAN</ref>)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a4c70322824b7b9d040aa265d0587c191afd3ae5e29447d64701502467ce0886c7" kindref="member">CM_OFF</ref>;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classusrp__standard__tx_1a5c439350ad4d861c49c21d203110eedb" kindref="member">d_coarse_mod</ref>[channel];</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171" refid="classusrp__standard__tx_1a5c992590408fe90d4711e355ee12852f" refkind="member"><highlight class="normal"><ref refid="classusrp__standard__tx_1a5c992590408fe90d4711e355ee12852f" kindref="member">usrp_standard_tx::tune</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan,<sp/><ref refid="db__base_8h_1a61ead10400f658a22128a321e14ae0ac" kindref="member">db_base_sptr</ref><sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_freq,<sp/><ref refid="classusrp__tune__result" kindref="compound">usrp_tune_result</ref><sp/>*result)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><ref refid="classduc__control" kindref="compound">duc_control</ref><sp/>dxc(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>chan);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tune_a_helper(db,<sp/>target_freq,<sp/><ref refid="classusrp__basic__tx_1a4eefc136417ea3a75a296c1b6dbbd470" kindref="member">converter_rate</ref>(),<sp/>dxc,<sp/>result);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/usrp_standard.cc"/>
  </compounddef>
</doxygen>
