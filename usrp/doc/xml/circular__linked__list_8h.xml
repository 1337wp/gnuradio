<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="circular__linked__list_8h" kind="file" language="C++">
    <compoundname>circular_linked_list.h</compoundname>
    <includes local="no">gruel/thread.h</includes>
    <includes local="no">stdexcept</includes>
    <includedby refid="fusb__darwin_8h" local="yes">fusb_darwin.h</includedby>
    <incdepgraph>
      <node id="20">
        <label>circular_linked_list.h</label>
        <link refid="circular_linked_list.h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>stdexcept</label>
      </node>
      <node id="21">
        <label>gruel/thread.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23">
        <label>circular_linked_list.h</label>
        <link refid="circular_linked_list.h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>fusb_darwin.h</label>
        <link refid="fusb__darwin_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>fusb_darwin.cc</label>
        <link refid="fusb__darwin_8cc"/>
      </node>
      <node id="26">
        <label>fusb_sysconfig_darwin.cc</label>
        <link refid="fusb__sysconfig__darwin_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classs__both" prot="public">s_both</innerclass>
    <innerclass refid="classs__node" prot="public">s_node</innerclass>
    <innerclass refid="classcircular__linked__list" prot="public">circular_linked_list</innerclass>
    <innerclass refid="classs__both" prot="public">s_both</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" prot="public" static="no">
        <name>__INLINE__</name>
        <initializer>inline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/circular_linked_list.h" line="29" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/circular_linked_list.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="circular__linked__list_8h_1a6748a559cfa5d68a4eb3ab5e8f644033" prot="public" static="no">
        <name>DO_DEBUG</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/circular_linked_list.h" line="32" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/circular_linked_list.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="circular__linked__list_8h_1aef41e8aaf4c60819b30faf396cdf4978" prot="public" static="no">
        <name>DEBUG</name>
        <param><defname>X</defname></param>
        <initializer>do{} while(0);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/circular_linked_list.h" line="38" column="10" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/circular_linked_list.h" bodystart="38" bodyend="-1"/>
        <referencedby refid="classcircular__linked__list_1a7217a832472b5bfa0425c8ad60ef1e93" compoundref="circular__linked__list_8h" startline="172" endline="202">circular_linked_list&lt; s_buffer_ptr &gt;::find_next_available_node</referencedby>
        <referencedby refid="classcircular__linked__list_1ac46c781dd6e3c9933628a55b3b35a1e5" compoundref="circular__linked__list_8h" startline="204" endline="227">circular_linked_list&lt; s_buffer_ptr &gt;::make_node_available</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006,2009,2010<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_CIRCULAR_LINKED_LIST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CIRCULAR_LINKED_LIST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gruel/thread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INLINE__<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DO_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="circular__linked__list_8h_1a6748a559cfa5d68a4eb3ab5e8f644033" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DO_DEBUG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DO_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG(X)<sp/>do{X}<sp/>while(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="circular__linked__list_8h_1aef41e8aaf4c60819b30faf396cdf4978" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG(X)<sp/>do{}<sp/>while(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classs__both" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classs__both" kindref="compound">s_both</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classs__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classs__node" kindref="compound">s_node</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classs__node" kindref="compound">s_node&lt;T&gt;</ref>*<sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>T<sp/>d_object;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>d_available;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>s_node_ptr<sp/>d_prev,<sp/>d_next;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classs__both" kindref="compound">s_both&lt;T&gt;</ref>*<sp/>d_both;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54" refid="classs__node_1afbe3c276a0423decc8af7aaf90433f4c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classs__node_1afbe3c276a0423decc8af7aaf90433f4c" kindref="member">s_node</ref><sp/>(T<sp/>l_object,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_node_ptr<sp/>l_prev<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_node_ptr<sp/>l_next<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_object<sp/>(l_object),<sp/>d_available<sp/>(TRUE),<sp/>d_prev<sp/>(l_prev),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>d_next<sp/>(l_next),<sp/>d_both<sp/>(0)<sp/>{};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classs__node_1a2a29651bdde8d34fd8464c998d1ae1dd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/><ref refid="classs__node_1a2a29651bdde8d34fd8464c998d1ae1dd" kindref="member">s_node</ref><sp/>(s_node_ptr<sp/>l_prev,<sp/>s_node_ptr<sp/>l_next<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classs__node_1a5ca67627e354cc80b7ec005f6fcc53f3" kindref="member">s_node</ref><sp/>((T)<sp/>NULL,<sp/>l_prev,<sp/>l_next);<sp/>};</highlight></codeline>
<codeline lineno="62" refid="classs__node_1a5ca67627e354cc80b7ec005f6fcc53f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/><ref refid="classs__node_1a5ca67627e354cc80b7ec005f6fcc53f3" kindref="member">s_node</ref><sp/>()<sp/>{<sp/><ref refid="classs__node_1a5ca67627e354cc80b7ec005f6fcc53f3" kindref="member">s_node</ref><sp/>(NULL,<sp/>NULL,<sp/>NULL);<sp/>};</highlight></codeline>
<codeline lineno="63" refid="classs__node_1a8ae901b835a536058e95002760ead401" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/><ref refid="classs__node_1a8ae901b835a536058e95002760ead401" kindref="member">~s_node</ref><sp/>()<sp/>{};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classs__node_1a4aaf8f0ea1cf81523e4d80796f1bc8ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal"><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>d_prev-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>(d_next);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>d_next-&gt;<ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>(d_prev);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>d_prev<sp/>=<sp/>d_next<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classs__node_1a6d608ac8cebbbd59d758811fad7a705d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classs__node_1a6d608ac8cebbbd59d758811fad7a705d" kindref="member">insert_before</ref><sp/>(s_node_ptr<sp/>l_next)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l_next)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s_node_ptr<sp/>l_prev<sp/>=<sp/>l_next-&gt;<ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_next<sp/>=<sp/>l_next;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_prev<sp/>=<sp/>l_prev;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_prev-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_next-&gt;<ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_next<sp/>=<sp/>d_prev<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classs__node_1a670d64f28a305d0c6d6cb1cea15574de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classs__node_1a670d64f28a305d0c6d6cb1cea15574de" kindref="member">insert_after</ref><sp/>(s_node_ptr<sp/>l_prev)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l_prev)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s_node_ptr<sp/>l_next<sp/>=<sp/>l_prev-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_prev<sp/>=<sp/>l_prev;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_next<sp/>=<sp/>l_next;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_next-&gt;<ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_prev-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_prev<sp/>=<sp/>d_next<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/>T<sp/><ref refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" kindref="member">object</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_object);<sp/>};</highlight></codeline>
<codeline lineno="94" refid="classs__node_1ae58bc285b15ad2cd041e6b6118609f1b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classs__node_1ae58bc285b15ad2cd041e6b6118609f1b" kindref="member">object</ref><sp/>(T<sp/>l_object)<sp/>{<sp/>d_object<sp/>=<sp/>l_object;<sp/>};</highlight></codeline>
<codeline lineno="95" refid="classs__node_1aa8220eb78502b97b61a24cefca6f77b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classs__node_1aa8220eb78502b97b61a24cefca6f77b9" kindref="member">available</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_available);<sp/>};</highlight></codeline>
<codeline lineno="96" refid="classs__node_1ad71bf0bba7b638ef8772796e14b1040f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classs__node_1ad71bf0bba7b638ef8772796e14b1040f" kindref="member">set_available</ref><sp/>()<sp/>{<sp/>d_available<sp/>=<sp/>TRUE;<sp/>};</highlight></codeline>
<codeline lineno="97" refid="classs__node_1a54fe1a9f52fd4d2c31ed9926ef9ff376" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classs__node_1a54fe1a9f52fd4d2c31ed9926ef9ff376" kindref="member">set_available</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>l_avail)<sp/>{<sp/>d_available<sp/>=<sp/>l_avail;<sp/>};</highlight></codeline>
<codeline lineno="98" refid="classs__node_1ae78f39a138892b241295a9e7f9a470d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classs__node_1ae78f39a138892b241295a9e7f9a470d5" kindref="member">set_not_available</ref><sp/>()<sp/>{<sp/>d_available<sp/>=<sp/>FALSE;<sp/>};</highlight></codeline>
<codeline lineno="99" refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/>s_node_ptr<sp/><ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_next);<sp/>};</highlight></codeline>
<codeline lineno="100" refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/>s_node_ptr<sp/><ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_prev);<sp/>};</highlight></codeline>
<codeline lineno="101" refid="classs__node_1ac3b0c2f62a6d14dcf295ae0238a6b5be" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/><ref refid="classs__both" kindref="compound">s_both&lt;T&gt;</ref>*<sp/><ref refid="classs__node_1ac3b0c2f62a6d14dcf295ae0238a6b5be" kindref="member">both</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_both);<sp/>};</highlight></codeline>
<codeline lineno="102" refid="classs__node_1aaaf2f3c58455d6814dba0040d603c7d7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classs__node_1aaaf2f3c58455d6814dba0040d603c7d7" kindref="member">next</ref><sp/>(s_node_ptr<sp/>l_next)<sp/>{<sp/>d_next<sp/>=<sp/>l_next;<sp/>};</highlight></codeline>
<codeline lineno="103" refid="classs__node_1a54fbb84a674624a3a93bb77eddd8d776" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classs__node_1a54fbb84a674624a3a93bb77eddd8d776" kindref="member">prev</ref><sp/>(s_node_ptr<sp/>l_prev)<sp/>{<sp/>d_prev<sp/>=<sp/>l_prev;<sp/>};</highlight></codeline>
<codeline lineno="104" refid="classs__node_1a709ea4820a298a701697f7f40545d2de" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classs__node_1a709ea4820a298a701697f7f40545d2de" kindref="member">both</ref><sp/>(<ref refid="classs__both" kindref="compound">s_both&lt;T&gt;</ref>*<sp/>l_both)<sp/>{<sp/>d_both<sp/>=<sp/>l_both;<sp/>};</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classcircular__linked__list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcircular__linked__list" kindref="compound">circular_linked_list</ref><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classs__node" kindref="compound">s_node&lt;T&gt;</ref>*<sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>s_node_ptr<sp/>d_current,<sp/>d_iterate,<sp/>d_available,<sp/>d_inUse;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d_n_nodes,<sp/>d_n_used;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>gruel::mutex*<sp/>d_internal;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>gruel::condition_variable*<sp/>d_ioBlock;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117" refid="classcircular__linked__list_1acf64b05d565fd8ef5ee74ceba8adbee3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcircular__linked__list_1acf64b05d565fd8ef5ee74ceba8adbee3" kindref="member">circular_linked_list</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_nodes)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_nodes<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;circular_linked_list():<sp/>n_nodes<sp/>==<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>d_iterate<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>d_n_nodes<sp/>=<sp/>n_nodes;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>d_n_used<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>s_node_ptr<sp/>l_prev,<sp/>l_next;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>d_inUse<sp/>=<sp/>d_current<sp/>=<sp/>l_next<sp/>=<sp/>l_prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>l_prev<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classs__node" kindref="compound">s_node&lt;T&gt;</ref><sp/>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>l_prev-&gt;<ref refid="classs__node_1ad71bf0bba7b638ef8772796e14b1040f" kindref="member">set_available</ref><sp/>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>l_prev-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>(l_prev);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>l_prev-&gt;<ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>(l_prev);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_nodes<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_next<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classs__node" kindref="compound">s_node&lt;T&gt;</ref><sp/>(l_prev,<sp/>l_prev);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_next-&gt;<ref refid="classs__node_1ad71bf0bba7b638ef8772796e14b1040f" kindref="member">set_available</ref><sp/>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_next-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>(l_prev);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_next-&gt;<ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>(l_prev);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_prev-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>(l_next);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_prev-&gt;<ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>(l_next);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_nodes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>n_nodes<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_current<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classs__node" kindref="compound">s_node&lt;T&gt;</ref><sp/>(l_prev,<sp/>l_next);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_current-&gt;<ref refid="classs__node_1ad71bf0bba7b638ef8772796e14b1040f" kindref="member">set_available</ref><sp/>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_current-&gt;<ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>(l_prev);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_current-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>(l_next);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_prev-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>(d_current);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_next-&gt;<ref refid="classs__node_1acf2f3ec45ec25871a9485813f3277c8a" kindref="member">prev</ref><sp/>(d_current);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_next<sp/>=<sp/>d_current;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_current<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>d_available<sp/>=<sp/>d_current<sp/>=<sp/>l_prev;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>d_ioBlock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::condition_variable<sp/>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>d_internal<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::mutex<sp/>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classcircular__linked__list_1a15bd158de560ec8314cee16062c5a737" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcircular__linked__list_1a15bd158de560ec8314cee16062c5a737" kindref="member">~circular_linked_list</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>iterate_start<sp/>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>s_node_ptr<sp/>l_node<sp/>=<sp/>iterate_next<sp/>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l_node)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>l_node;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_node<sp/>=<sp/>iterate_next<sp/>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d_ioBlock;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>d_ioBlock<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d_internal;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>d_internal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>d_available<sp/>=<sp/>d_inUse<sp/>=<sp/>d_iterate<sp/>=<sp/>d_current<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>d_n_used<sp/>=<sp/>d_n_nodes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classcircular__linked__list_1a7217a832472b5bfa0425c8ad60ef1e93" refkind="member"><highlight class="normal"><sp/><sp/>s_node_ptr<sp/><ref refid="classcircular__linked__list_1a7217a832472b5bfa0425c8ad60ef1e93" kindref="member">find_next_available_node</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>gruel::scoped_lock<sp/>l<sp/>(*d_internal);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>find<sp/>an<sp/>available<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>s_node_ptr<sp/>l_node<sp/>=<sp/>d_available;<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="circular__linked__list_8h_1aef41e8aaf4c60819b30faf396cdf4978" kindref="member">DEBUG</ref><sp/>(std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;w<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<sp/>l_node)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="circular__linked__list_8h_1aef41e8aaf4c60819b30faf396cdf4978" kindref="member">DEBUG</ref><sp/>(std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>ioBlock<sp/>condition<sp/>will<sp/>automatically<sp/>unlock()<sp/>d_internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_ioBlock-&gt;wait<sp/>(l);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>lock()<sp/>is<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="circular__linked__list_8h_1aef41e8aaf4c60819b30faf396cdf4978" kindref="member">DEBUG</ref><sp/>(std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_node<sp/>=<sp/>d_available;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="circular__linked__list_8h_1aef41e8aaf4c60819b30faf396cdf4978" kindref="member">DEBUG</ref><sp/>(std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::f_n_a_n:<sp/>#u<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>num_used()</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>node<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_node<sp/>&lt;&lt;<sp/>std::endl);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>remove<sp/>this<sp/>one<sp/>from<sp/>the<sp/>current<sp/>available<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_available<sp/>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>last<sp/>one,<sp/>just<sp/>set<sp/>available<sp/>to<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_available<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_available<sp/>=<sp/>l_node-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1a4aaf8f0ea1cf81523e4d80796f1bc8ab" kindref="member">remove</ref><sp/>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>is<sp/>to<sp/>the<sp/>inUse<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>d_inUse)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_inUse<sp/>=<sp/>l_node;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1a6d608ac8cebbbd59d758811fad7a705d" kindref="member">insert_before</ref><sp/>(d_inUse);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>d_n_used++;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1ae78f39a138892b241295a9e7f9a470d5" kindref="member">set_not_available</ref><sp/>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(l_node);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classcircular__linked__list_1ac46c781dd6e3c9933628a55b3b35a1e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1ac46c781dd6e3c9933628a55b3b35a1e5" kindref="member">make_node_available</ref><sp/>(s_node_ptr<sp/>l_node)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l_node)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>gruel::scoped_lock<sp/>l<sp/>(*d_internal);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="circular__linked__list_8h_1aef41e8aaf4c60819b30faf396cdf4978" kindref="member">DEBUG</ref><sp/>(std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::m_n_a:<sp/>#u<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>num_used()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>node<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_node<sp/>&lt;&lt;<sp/>std::endl);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>remove<sp/>this<sp/>node<sp/>from<sp/>the<sp/>inUse<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_used<sp/>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>last<sp/>one,<sp/>just<sp/>set<sp/>inUse<sp/>to<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_inUse<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_inUse<sp/>=<sp/>l_node-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1a4aaf8f0ea1cf81523e4d80796f1bc8ab" kindref="member">remove</ref><sp/>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>this<sp/>node<sp/>to<sp/>the<sp/>available<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>d_available)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_available<sp/>=<sp/>l_node;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1a6d608ac8cebbbd59d758811fad7a705d" kindref="member">insert_before</ref><sp/>(d_available);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>d_n_used--;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="circular__linked__list_8h_1aef41e8aaf4c60819b30faf396cdf4978" kindref="member">DEBUG</ref><sp/>(std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d_n_used);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>signal<sp/>the<sp/>condition<sp/>when<sp/>new<sp/>data<sp/>arrives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>d_ioBlock-&gt;notify_one<sp/>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="circular__linked__list_8h_1aef41e8aaf4c60819b30faf396cdf4978" kindref="member">DEBUG</ref><sp/>(std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;t<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classcircular__linked__list_1aace2f5222a9d5b500b94001e81ec0159" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1aace2f5222a9d5b500b94001e81ec0159" kindref="member">iterate_start</ref><sp/>()<sp/>{<sp/>d_iterate<sp/>=<sp/>d_current;<sp/>};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classcircular__linked__list_1a873b3b21f61ac088ec8e69a413289d8c" refkind="member"><highlight class="normal"><sp/><sp/>s_node_ptr<sp/><ref refid="classcircular__linked__list_1a873b3b21f61ac088ec8e69a413289d8c" kindref="member">iterate_next</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lock<sp/>the<sp/>mutex<sp/>for<sp/>thread<sp/>safety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>gruel::scoped_lock<sp/>l<sp/>(*d_internal);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>s_node_ptr<sp/>l_this<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_iterate)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_this<sp/>=<sp/>d_iterate;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_iterate<sp/>=<sp/>d_iterate-&gt;<ref refid="classs__node_1aa2ae7bb98c523f2d35a3f3a6219fb6e6" kindref="member">next</ref><sp/>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_iterate<sp/>==<sp/>d_current)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_iterate<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(l_this);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classcircular__linked__list_1ae05f5b91c596af7298cd3653f37a1819" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/>T<sp/><ref refid="classcircular__linked__list_1ae05f5b91c596af7298cd3653f37a1819" kindref="member">object</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_current-&gt;d_object);<sp/>};</highlight></codeline>
<codeline lineno="247" refid="classcircular__linked__list_1a66686696b22067ab971c4405c5eba07a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1a66686696b22067ab971c4405c5eba07a" kindref="member">object</ref><sp/>(T<sp/>l_object)<sp/>{<sp/>d_current-&gt;d_object<sp/>=<sp/>l_object;<sp/>};</highlight></codeline>
<codeline lineno="248" refid="classcircular__linked__list_1a0fb587a6d98581abe786c0d13997a33d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1a0fb587a6d98581abe786c0d13997a33d" kindref="member">num_nodes</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_n_nodes);<sp/>};</highlight></codeline>
<codeline lineno="249" refid="classcircular__linked__list_1a931507cc0f607c024e1e78dc277f7a60" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1a931507cc0f607c024e1e78dc277f7a60" kindref="member">num_used</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_n_used);<sp/>};</highlight></codeline>
<codeline lineno="250" refid="classcircular__linked__list_1a4a60e56f5ed3f46d7a5a163f061ccf3b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1a4a60e56f5ed3f46d7a5a163f061ccf3b" kindref="member">num_used</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l_n_used)<sp/>{<sp/>d_n_used<sp/>=<sp/>l_n_used;<sp/>};</highlight></codeline>
<codeline lineno="251" refid="classcircular__linked__list_1a36366dfac0c6f915123557f86ad98210" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1a36366dfac0c6f915123557f86ad98210" kindref="member">num_available</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_n_nodes<sp/>-<sp/>d_n_used);<sp/>};</highlight></codeline>
<codeline lineno="252" refid="classcircular__linked__list_1a1146ad60360cf75a2f0ccb9cf155eefc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1a1146ad60360cf75a2f0ccb9cf155eefc" kindref="member">num_used_inc</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_n_used<sp/>&lt;<sp/>d_n_nodes)<sp/>++d_n_used;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="255" refid="classcircular__linked__list_1a16c2ec8f271a11d1e619ead67a5ff779" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1a16c2ec8f271a11d1e619ead67a5ff779" kindref="member">num_used_dec</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_n_used<sp/>!=<sp/>0)<sp/>--d_n_used;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>signal<sp/>the<sp/>condition<sp/>that<sp/>new<sp/>data<sp/>has<sp/>arrived</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>d_ioBlock-&gt;notify_one<sp/>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="260" refid="classcircular__linked__list_1a89aa83f4cce7dce63bac75d8161c193f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list_1a89aa83f4cce7dce63bac75d8161c193f" kindref="member">in_use</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_n_used<sp/>!=<sp/>0);<sp/>};</highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classs__both" kindref="compound">s_both</ref></highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="classs__node" kindref="compound">s_node&lt;T&gt;</ref>*<sp/>d_node;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>d_this;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="269" refid="classs__both_1aee4f424cd523397428aff39a30aac4df" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/><ref refid="classs__both_1aee4f424cd523397428aff39a30aac4df" kindref="member">s_both</ref><sp/>(<ref refid="classs__node" kindref="compound">s_node&lt;T&gt;</ref>*<sp/>l_node,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>l_this)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_node<sp/>(l_node),<sp/>d_this<sp/>(l_this)<sp/>{};</highlight></codeline>
<codeline lineno="271" refid="classs__both_1a6b939d9e03d2bd426c95a6084634cc8f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/><ref refid="classs__both_1a6b939d9e03d2bd426c95a6084634cc8f" kindref="member">~s_both</ref><sp/>()<sp/>{};</highlight></codeline>
<codeline lineno="272" refid="classs__both_1ab9720e2c280172daa9c536c8de34f4a6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/><ref refid="classs__node" kindref="compound">s_node&lt;T&gt;</ref>*<sp/><ref refid="classs__both_1ab9720e2c280172daa9c536c8de34f4a6" kindref="member">node</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_node);<sp/>};</highlight></codeline>
<codeline lineno="273" refid="classs__both_1a12266700e2cd36fa5fc127e345014d10" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classs__both_1a12266700e2cd36fa5fc127e345014d10" kindref="member">This</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_this);<sp/>};</highlight></codeline>
<codeline lineno="274" refid="classs__both_1ac50997822c5ec236770136a594278098" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="circular__linked__list_8h_1a1b7c2cc6285d73f0449071856f1f5af7" kindref="member">__INLINE__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>(<ref refid="classs__node" kindref="compound">s_node&lt;T&gt;</ref>*<sp/>l_node,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>l_this)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>d_node<sp/>=<sp/>l_node;<sp/>d_this<sp/>=<sp/>l_this;};</highlight></codeline>
<codeline lineno="276"><highlight class="normal">};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_CIRCULAR_LINKED_LIST_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/circular_linked_list.h"/>
  </compounddef>
</doxygen>
