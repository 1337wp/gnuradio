<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="usrper_8cc" kind="file" language="C++">
    <compoundname>usrper.cc</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="getopt_8h" local="no">getopt.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">errno.h</includes>
    <includes refid="usrp__prims_8h" local="yes">usrp/usrp_prims.h</includes>
    <includes local="yes">usrp_spi_defs.h</includes>
    <incdepgraph>
      <node id="1274">
        <label>assert.h</label>
      </node>
      <node id="1278">
        <label>usrp/libusb_types.h</label>
        <link refid="libusb__types_8h"/>
        <childnode refid="1279" relation="include">
        </childnode>
      </node>
      <node id="1270">
        <label>stdlib.h</label>
      </node>
      <node id="1275">
        <label>errno.h</label>
      </node>
      <node id="1277">
        <label>usrp/usrp_slots.h</label>
        <link refid="usrp__slots_8h"/>
      </node>
      <node id="1268">
        <label>usrper.cc</label>
        <link refid="usrper.cc"/>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
      </node>
      <node id="1280">
        <label>string</label>
      </node>
      <node id="1273">
        <label>getopt.h</label>
        <link refid="getopt_8h"/>
      </node>
      <node id="1271">
        <label>string.h</label>
      </node>
      <node id="1272">
        <label>unistd.h</label>
      </node>
      <node id="1279">
        <label>usb.h</label>
      </node>
      <node id="1276">
        <label>usrp/usrp_prims.h</label>
        <link refid="usrp__prims_8h"/>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
      </node>
      <node id="1269">
        <label>stdio.h</label>
      </node>
      <node id="1281">
        <label>usrp_spi_defs.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" prot="public" static="no">
        <name>CHKARGS</name>
        <param><defname>n</defname></param>
        <initializer>if (nopts != n) usage (); else</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="218" column="9"/>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* prog_name</definition>
        <argsstring></argsstring>
        <name>prog_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="37" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" bodystart="37" bodyend="-1"/>
        <referencedby refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="usrper_8cc" startline="158" endline="356">main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="usrper_8cc_1ab655a88e2ae6982c013acbd9e0b4322c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_progname</definition>
        <argsstring>(char *path)</argsstring>
        <name>set_progname</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="40" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="usrper_8cc_1a64a6014565bb3e03294ec4a952d5add0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void usage</definition>
        <argsstring>()</argsstring>
        <name>usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="50" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" bodystart="50" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="usrper_8cc_1aab633fca48afac5a32c5a0b2e877b4a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int hexval</definition>
        <argsstring>(char ch)</argsstring>
        <name>hexval</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="85" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" bodystart="85" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="usrper_8cc_1a5d92964806a3bee52e1881159e3bceb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char* hex_string_to_binary</definition>
        <argsstring>(const char *string, int *lenptr)</argsstring>
        <name>hex_string_to_binary</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lenptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="100" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" bodystart="100" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="usrper_8cc_1a1aeeaaf5aad297f3a3d9e1ef4cb96ca5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_hex</definition>
        <argsstring>(FILE *fp, unsigned char *buf, int len)</argsstring>
        <name>print_hex</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="126" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="usrper_8cc_1a6226a2ad95e00791c48b7e87f6ef8c13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void chk_result</definition>
        <argsstring>(bool ok)</argsstring>
        <name>chk_result</name>
        <param>
          <type>bool</type>
          <declname>ok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="135" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="usrper_8cc_1a0ab535ca463400745e251245cb206521" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool get_on_off</definition>
        <argsstring>(const char *s)</argsstring>
        <name>get_on_off</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="144" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" bodystart="144" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" line="158" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc" bodystart="158" bodyend="356"/>
        <references refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b">CHKARGS</references>
        <references refid="getopt_8h_1a6c5b232cca42dab05f40b47f69715f8b">getopt</references>
        <references refid="getopt_8h_1adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</references>
        <references refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c">optind</references>
        <references refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" compoundref="usrper_8cc" startline="37">prog_name</references>
        <references refid="usrp__prims_8h_1ab68e752026fa29aab0b24b31d440cbe3" compoundref="usrp__prims__common_8cc" startline="895" endline="902">usrp_9862_read</references>
        <references refid="usrp__prims_8h_1a5038d35fe755b8a3863082371b64782e" compoundref="usrp__prims__common_8cc" startline="877" endline="892">usrp_9862_write</references>
        <references refid="usrp__prims_8h_1a5b0fcfee6e1328858c7927d386d0c92a" compoundref="usrp__prims__libusb0_8cc" startline="200" endline="204">usrp_close_interface</references>
        <references refid="usrp__prims_8h_1a91bc9c618e75323cfb96673a135269a9" compoundref="usrp__prims__libusb0_8cc" startline="126" endline="148">usrp_find_device</references>
        <references refid="usrp__prims_8h_1afeb7e5fc77067223e229be02e78718ee" compoundref="usrp__prims__common_8cc" startline="136" endline="141">usrp_fx2_p</references>
        <references refid="usrp__prims_8h_1ab78856b82dd0ded8eba5a39b1555a3b6" compoundref="usrp__prims__common_8cc" startline="430" endline="443">usrp_get_hash</references>
        <references refid="usrp__prims_8h_1a67b5af6739c0f41abeae074d2d9821cc" compoundref="usrp__prims__common_8cc" startline="837" endline="845">usrp_i2c_read</references>
        <references refid="usrp__prims_8h_1a9b367498154b59e4b03fd3d4677734cb" compoundref="usrp__prims__common_8cc" startline="825" endline="833">usrp_i2c_write</references>
        <references refid="usrp__prims_8h_1a2b4f03982b4e0e78095bb51e7e48eb5b" compoundref="usrp__prims__common_8cc" startline="599" endline="606">usrp_load_firmware</references>
        <references refid="usrp__prims_8h_1a95b32b91b15d143ace5e52b1a6a45170" compoundref="usrp__prims__common_8cc" startline="609" endline="616">usrp_load_fpga</references>
        <references refid="usrp__prims_8h_1afad83bab2ee742d3f69298e4b4ff87e0" compoundref="usrp__prims__common_8cc" startline="734" endline="794">usrp_load_standard_bits</references>
        <references refid="usrp__prims_8h_1a7db6e7c1e881f53aca6f36d07c340d12" compoundref="usrp__prims__libusb0_8cc" startline="96" endline="106">usrp_one_time_init</references>
        <references refid="usrp__prims_8h_1ac2d83cf2d42d90dec9f28edbd4e5df78" compoundref="usrp__prims__common_8cc" startline="179" endline="182">usrp_open_cmd_interface</references>
        <references refid="usrp__prims_8h_1a010a01fbc5a1ee5fa8d3692e774aa7f3" compoundref="usrp__prims__common_8cc" startline="515" endline="518">usrp_set_fpga_reset</references>
        <references refid="usrp__prims_8h_1a36a947567043a250ae605dee5eb78bf4" compoundref="usrp__prims__common_8cc" startline="527" endline="530">usrp_set_fpga_rx_enable</references>
        <references refid="usrp__prims_8h_1afdda6f72700cfeb73b9c3337cc4c7607" compoundref="usrp__prims__common_8cc" startline="521" endline="524">usrp_set_fpga_tx_enable</references>
        <references refid="usrp__prims_8h_1a5a4f5c3849c508f01aee76116c403514" compoundref="usrp__prims__common_8cc" startline="414" endline="427">usrp_set_hash</references>
        <references refid="usrp__prims_8h_1ac856910e04aa0da0a7e1d946a268b7f2" compoundref="usrp__prims__common_8cc" startline="406" endline="411">usrp_set_led</references>
        <references refid="usrp__prims_8h_1af4b1c62ea1cf039186177d614c5b95bb" compoundref="usrp__prims__common_8cc" startline="163" endline="166">usrp_unconfigured_usrp_p</references>
        <references refid="usrp__prims_8h_1aaef8715cc33a0cd06fb53e76de13d1eb" compoundref="usrp__prims__common_8cc" startline="491" endline="500">usrp_write_fpga_reg</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>USRP<sp/>-<sp/>Universal<sp/>Software<sp/>Radio<sp/>Peripheral</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2003,2004,2009<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="getopt_8h" kindref="compound">getopt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="usrp__prims_8h" kindref="compound">usrp/usrp_prims.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;usrp_spi_defs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">set_progname<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>strrchr<sp/>(path,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref><sp/>=<sp/>p+1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref><sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">usage<sp/>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;usage:<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>[-v]<sp/>[-w<sp/>&lt;which_board&gt;]<sp/>[-x]<sp/>...\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>load_standard_bits\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>load_firmware<sp/>&lt;file.ihx&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>load_fpga<sp/>&lt;file.rbf&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>write_fpga_reg<sp/>&lt;reg8&gt;<sp/>&lt;value32&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>set_fpga_reset<sp/>{on|off}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>set_fpga_tx_enable<sp/>{on|off}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>set_fpga_rx_enable<sp/>{on|off}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-----<sp/>diagnostic<sp/>routines<sp/>-----\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>led0<sp/>{on|off}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>led1<sp/>{on|off}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>set_hash0<sp/>&lt;hex-string&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>get_hash0\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>i2c_read<sp/>i2c_addr<sp/>len\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>i2c_write<sp/>i2c_addr<sp/>&lt;hex-string&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>9862a_write<sp/>regno<sp/>value\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>9862b_write<sp/>regno<sp/>value\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>9862a_read<sp/>regno\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>9862b_read<sp/>regno\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">die<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>(die):<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>,<sp/>msg);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal">hexval<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>ch<sp/>&amp;&amp;<sp/>ch<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>ch<sp/>&amp;&amp;<sp/>ch<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>ch<sp/>&amp;&amp;<sp/>ch<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="normal">hex_string_to_binary<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lenptr)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>sl<sp/>=<sp/>strlen<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sl<sp/>&amp;<sp/>0x01){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>odd<sp/>number<sp/>of<sp/>chars<sp/>in<sp/>&lt;hex-string&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>sl<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>*lenptr<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[len];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/>hexval<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[2<sp/>*<sp/>i]);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/>hexval<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[2<sp/>*<sp/>i<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hi<sp/>&lt;<sp/>0<sp/>||<sp/>lo<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>invalid<sp/>char<sp/>in<sp/>&lt;hex-string&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buf;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/>(hi<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>lo;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">print_hex<sp/>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(fp,<sp/></highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>buf[i]);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>fprintf<sp/>(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">chk_result<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">get_on_off<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(s,<sp/></highlight><highlight class="stringliteral">&quot;on&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(s,<sp/></highlight><highlight class="stringliteral">&quot;off&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>usage<sp/>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"><ref refid="usrper_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which_board<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx2_ok_p<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>set_progname<sp/>(argv[0]);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ch<sp/>=<sp/><ref refid="getopt_8h_1a6c5b232cca42dab05f40b47f69715f8b" kindref="member">getopt</ref><sp/>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;vw:x&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>EOF){</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ch){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>verbose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;w&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>which_board<sp/>=<sp/>strtol<sp/>(<ref refid="getopt_8h_1adb50a0eab9fed92fc3bfc7dfa4f2c410" kindref="member">optarg</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fx2_ok_p<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>usage<sp/>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nopts<sp/>=<sp/>argc<sp/>-<sp/><ref refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">optind</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nopts<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>usage<sp/>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmd<sp/>=<sp/>argv[optind++];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>nopts--;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="usrp__prims_8h_1a7db6e7c1e881f53aca6f36d07c340d12" kindref="member">usrp_one_time_init</ref><sp/>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="libusb__types_8h_1a6a41e56fed0168fbd7abd9359c805bf1" kindref="member">libusb_device</ref><sp/>*udev<sp/>=<sp/><ref refid="usrp__prims_8h_1a91bc9c618e75323cfb96673a135269a9" kindref="member">usrp_find_device</ref><sp/>(which_board,<sp/>fx2_ok_p);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udev<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>failed<sp/>to<sp/>find<sp/>usrp[%d]\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>,<sp/>which_board);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims_8h_1af4b1c62ea1cf039186177d614c5b95bb" kindref="member">usrp_unconfigured_usrp_p</ref><sp/>(udev)){</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>found<sp/>unconfigured<sp/>usrp;<sp/>needs<sp/>firmware.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="usrp__prims_8h_1afeb7e5fc77067223e229be02e78718ee" kindref="member">usrp_fx2_p</ref><sp/>(udev)){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>found<sp/>unconfigured<sp/>FX2;<sp/>needs<sp/>firmware.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="structusb__dev__handle" kindref="compound">libusb_device_handle</ref><sp/>*udh<sp/>=<sp/><ref refid="usrp__prims_8h_1ac2d83cf2d42d90dec9f28edbd4e5df78" kindref="member">usrp_open_cmd_interface</ref><sp/>(udev);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udh<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>failed<sp/>to<sp/>open_cmd_interface\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usrper_8cc_1a598d558168ea9fcc902baf4a3a42a5ea" kindref="member">prog_name</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHKARGS(n)<sp/>if<sp/>(nopts<sp/>!=<sp/>n)<sp/>usage<sp/>();<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;led0&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on<sp/>=<sp/>get_on_off<sp/>(argv[optind]);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1ac856910e04aa0da0a7e1d946a268b7f2" kindref="member">usrp_set_led</ref><sp/>(udh,<sp/>0,<sp/>on));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;led1&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on<sp/>=<sp/>get_on_off<sp/>(argv[optind]);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1ac856910e04aa0da0a7e1d946a268b7f2" kindref="member">usrp_set_led</ref><sp/>(udh,<sp/>1,<sp/>on));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;led2&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on<sp/>=<sp/>get_on_off<sp/>(argv[optind]);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1ac856910e04aa0da0a7e1d946a268b7f2" kindref="member">usrp_set_led</ref><sp/>(udh,<sp/>2,<sp/>on));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;set_hash0&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>argv[<ref refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">optind</ref>];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[16];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(buf,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>16);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16<sp/>&amp;&amp;<sp/>*p;<sp/>i++)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/>*p++;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1a5a4f5c3849c508f01aee76116c403514" kindref="member">usrp_set_hash</ref><sp/>(udh,<sp/>0,<sp/>buf));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;get_hash0&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(0);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[17];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(buf,<sp/>0,<sp/>17);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="usrp__prims_8h_1ab78856b82dd0ded8eba5a39b1555a3b6" kindref="member">usrp_get_hash</ref><sp/>(udh,<sp/>0,<sp/>buf);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;hash:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(r);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;load_fpga&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/>argv[<ref refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">optind</ref>];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1a95b32b91b15d143ace5e52b1a6a45170" kindref="member">usrp_load_fpga</ref><sp/>(udh,<sp/>filename,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;load_firmware&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/>argv[<ref refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">optind</ref>];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1a2b4f03982b4e0e78095bb51e7e48eb5b" kindref="member">usrp_load_firmware</ref><sp/>(udh,<sp/>filename,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;write_fpga_reg&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(2);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1aaef8715cc33a0cd06fb53e76de13d1eb" kindref="member">usrp_write_fpga_reg</ref><sp/>(udh,<sp/>strtoul<sp/>(argv[optind],<sp/>0,<sp/>0),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strtoul(argv[optind+1],<sp/>0,<sp/>0)));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;set_fpga_reset&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1a010a01fbc5a1ee5fa8d3692e774aa7f3" kindref="member">usrp_set_fpga_reset</ref><sp/>(udh,<sp/>get_on_off<sp/>(argv[optind])));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;set_fpga_tx_enable&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1afdda6f72700cfeb73b9c3337cc4c7607" kindref="member">usrp_set_fpga_tx_enable</ref><sp/>(udh,<sp/>get_on_off<sp/>(argv[optind])));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;set_fpga_rx_enable&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1a36a947567043a250ae605dee5eb78bf4" kindref="member">usrp_set_fpga_rx_enable</ref><sp/>(udh,<sp/>get_on_off<sp/>(argv[optind])));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;load_standard_bits&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrp__prims_8h_1a5b0fcfee6e1328858c7927d386d0c92a" kindref="member">usrp_close_interface</ref><sp/>(udh);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>udh<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1afad83bab2ee742d3f69298e4b4ff87e0" kindref="member">usrp_load_standard_bits</ref><sp/>(which_board,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;i2c_read&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(2);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2c_addr<sp/>=<sp/>strtol<sp/>(argv[optind],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strtol<sp/>(argv[optind<sp/>+<sp/>1],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chk_result<sp/>(0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[len];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="usrp__prims_8h_1a67b5af6739c0f41abeae074d2d9821cc" kindref="member">usrp_i2c_read</ref><sp/>(udh,<sp/>i2c_addr,<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result){</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chk_result<sp/>(0);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>print_hex<sp/>(stdout,<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;i2c_write&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(2);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2c_addr<sp/>=<sp/>strtol<sp/>(argv[optind],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hex_string<sp/><sp/>=<sp/>argv[optind<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>hex_string_to_binary<sp/>(hex_string,<sp/>&amp;len);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chk_result<sp/>(0);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="usrp__prims_8h_1a9b367498154b59e4b03fd3d4677734cb" kindref="member">usrp_i2c_write</ref><sp/>(udh,<sp/>i2c_addr,<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(result);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;9862a_write&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(2);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regno<sp/>=<sp/>strtol<sp/>(argv[optind],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>strtol<sp/>(argv[optind+1],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1a5038d35fe755b8a3863082371b64782e" kindref="member">usrp_9862_write</ref><sp/>(udh,<sp/>0,<sp/>regno,<sp/>value));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;9862b_write&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(2);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regno<sp/>=<sp/>strtol<sp/>(argv[optind],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>strtol<sp/>(argv[optind+1],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>chk_result<sp/>(<ref refid="usrp__prims_8h_1a5038d35fe755b8a3863082371b64782e" kindref="member">usrp_9862_write</ref><sp/>(udh,<sp/>1,<sp/>regno,<sp/>value));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;9862a_read&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regno<sp/>=<sp/>strtol<sp/>(argv[optind],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="usrp__prims_8h_1ab68e752026fa29aab0b24b31d440cbe3" kindref="member">usrp_9862_read</ref><sp/>(udh,<sp/>0,<sp/>regno,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result){</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chk_result<sp/>(0);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stdout,<sp/></highlight><highlight class="stringliteral">&quot;reg[%d]<sp/>=<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>regno,<sp/>value);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cmd,<sp/></highlight><highlight class="stringliteral">&quot;9862b_read&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrper_8cc_1aa7d3bb8454a65346a0c5cee766f5810b" kindref="member">CHKARGS</ref><sp/>(1);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regno<sp/>=<sp/>strtol<sp/>(argv[optind],<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="usrp__prims_8h_1ab68e752026fa29aab0b24b31d440cbe3" kindref="member">usrp_9862_read</ref><sp/>(udh,<sp/>1,<sp/>regno,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result){</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chk_result<sp/>(0);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(stdout,<sp/></highlight><highlight class="stringliteral">&quot;reg[%d]<sp/>=<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>regno,<sp/>value);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>usage<sp/>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udh){</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usrp__prims_8h_1a5b0fcfee6e1328858c7927d386d0c92a" kindref="member">usrp_close_interface</ref><sp/>(udh);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>udh<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/me/gnuradio-3.4.0/usrp/host/apps/usrper.cc"/>
  </compounddef>
</doxygen>
