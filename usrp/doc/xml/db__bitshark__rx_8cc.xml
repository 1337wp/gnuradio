<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="db__bitshark__rx_8cc" kind="file" language="C++">
    <compoundname>db_bitshark_rx.cc</compoundname>
    <includes refid="db__bitshark__rx_8h" local="no">usrp/db_bitshark_rx.h</includes>
    <includes refid="db__base__impl_8h" local="no">db_base_impl.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="164">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="177">
        <label>fpga_regs_standard.h</label>
      </node>
      <node id="160">
        <label>db_bitshark_rx.cc</label>
        <link refid="db_bitshark_rx.cc"/>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>usrp/libusb_types.h</label>
        <link refid="libusb__types_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>stdint.h</label>
      </node>
      <node id="169">
        <label>db_base_impl.h</label>
        <link refid="db__base__impl_8h"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>cmath</label>
      </node>
      <node id="181">
        <label>stdexcept</label>
      </node>
      <node id="172">
        <label>usrp/usrp_slots.h</label>
        <link refid="usrp__slots_8h"/>
      </node>
      <node id="163">
        <label>string</label>
      </node>
      <node id="165">
        <label>boost/weak_ptr.hpp</label>
      </node>
      <node id="170">
        <label>db_util.h</label>
        <link refid="db__util_8h"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>string.h</label>
      </node>
      <node id="183">
        <label>cstdio</label>
      </node>
      <node id="167">
        <label>vector</label>
      </node>
      <node id="162">
        <label>usrp/db_base.h</label>
        <link refid="db__base_8h"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>boost/utility.hpp</label>
      </node>
      <node id="171">
        <label>usrp/usrp_basic.h</label>
        <link refid="usrp__basic_8h"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>usrp/db_bitshark_rx.h</label>
        <link refid="db__bitshark__rx_8h"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>iosfwd</label>
      </node>
      <node id="173">
        <label>usrp/usrp_subdev_spec.h</label>
        <link refid="usrp__subdev__spec_8h"/>
      </node>
      <node id="175">
        <label>usb.h</label>
      </node>
      <node id="178">
        <label>fpga_regs_common.h</label>
      </node>
      <node id="179">
        <label>usrp/usrp_prims.h</label>
        <link refid="usrp__prims_8h"/>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>usrp_spi_defs.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="db__bitshark__rx_8cc_1a2029ca2cbd514be2045b974d23b98a39" prot="public" static="no">
        <name>RF_CENTER_FREQ_REG</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" line="37" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" bodystart="37" bodyend="-1"/>
        <referencedby refid="classdb__bitshark__rx_1aa1b71b8cecd0e4f72c16fe15e480d59c" compoundref="db__bitshark__rx_8cc" startline="356" endline="403">db_bitshark_rx::set_freq</referencedby>
      </memberdef>
      <memberdef kind="define" id="db__bitshark__rx_8cc_1aa304d32779c56b2f7eae5212c997089d" prot="public" static="no">
        <name>RF_CHAN_FILTER_BW_REG</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" line="38" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" bodystart="38" bodyend="-1"/>
        <referencedby refid="classdb__bitshark__rx_1ae8b8f942df5c56d3ce7c9653c98ac701" compoundref="db__bitshark__rx_8cc" startline="192" endline="225">db_bitshark_rx::set_bw</referencedby>
      </memberdef>
      <memberdef kind="define" id="db__bitshark__rx_8cc_1a804a785b8c777bc14043f255cc237cef" prot="public" static="no">
        <name>RF_GAIN_REG</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" line="39" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" bodystart="39" bodyend="-1"/>
        <referencedby refid="classdb__bitshark__rx_1a2bffea86cc9c569523f4c2169bd2b918" compoundref="db__bitshark__rx_8cc" startline="256" endline="288">db_bitshark_rx::set_gain</referencedby>
      </memberdef>
      <memberdef kind="define" id="db__bitshark__rx_8cc_1a4eb919cc5fca7825fbbf5b44bfaac218" prot="public" static="no">
        <name>BB_GAIN_REG</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" line="40" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="db__bitshark__rx_8cc_1ac14038e67147dc720607ae63b4813dae" prot="public" static="no">
        <name>ADF4350_REG</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" line="41" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="db__bitshark__rx_8cc_1a0a8f4012a6cf172ac72204fe486a169a" prot="public" static="no">
        <name>SKY73202_REG</name>
        <initializer>0x11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" line="42" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="db__bitshark__rx_8cc_1a6782a2489f5c0c49955d0ce4b348ab47" prot="public" static="no">
        <name>CLOCK_SCHEME_REG</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" line="43" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" bodystart="43" bodyend="-1"/>
        <referencedby refid="classdb__bitshark__rx_1aed98afdec32fd066bd4ed833390c9cc9" compoundref="db__bitshark__rx_8cc" startline="292" endline="341">db_bitshark_rx::set_clock_scheme</referencedby>
      </memberdef>
      <memberdef kind="define" id="db__bitshark__rx_8cc_1a4a8f61ce34f97d14e1bbde1317bceead" prot="public" static="no">
        <name>NUM_BYTES_IN_I2C_CMD</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" line="117" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc" bodystart="117" bodyend="-1"/>
        <referencedby refid="classdb__bitshark__rx_1ae8b8f942df5c56d3ce7c9653c98ac701" compoundref="db__bitshark__rx_8cc" startline="192" endline="225">db_bitshark_rx::set_bw</referencedby>
        <referencedby refid="classdb__bitshark__rx_1aed98afdec32fd066bd4ed833390c9cc9" compoundref="db__bitshark__rx_8cc" startline="292" endline="341">db_bitshark_rx::set_clock_scheme</referencedby>
        <referencedby refid="classdb__bitshark__rx_1aa1b71b8cecd0e4f72c16fe15e480d59c" compoundref="db__bitshark__rx_8cc" startline="356" endline="403">db_bitshark_rx::set_freq</referencedby>
        <referencedby refid="classdb__bitshark__rx_1a2bffea86cc9c569523f4c2169bd2b918" compoundref="db__bitshark__rx_8cc" startline="256" endline="288">db_bitshark_rx::set_gain</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2010<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>asversion<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="db__bitshark__rx_8h" kindref="compound">usrp/db_bitshark_rx.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="db__base__impl_8h" kindref="compound">db_base_impl.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note:<sp/>Thie<sp/>general<sp/>structure<sp/>of<sp/>this<sp/>file<sp/>is<sp/>based<sp/>on<sp/>the<sp/>db_dbsrx.cc<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/>codebase<sp/>for<sp/>the<sp/>dbsrx<sp/>daughterboard.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>defines<sp/>specify<sp/>the<sp/>address<sp/>map<sp/>provided<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>Bitshark<sp/>card.<sp/>These<sp/>registers<sp/>are<sp/>all<sp/>accessed<sp/>over<sp/>I2C.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="db__bitshark__rx_8cc_1a2029ca2cbd514be2045b974d23b98a39" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RF_CENTER_FREQ_REG<sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="db__bitshark__rx_8cc_1aa304d32779c56b2f7eae5212c997089d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RF_CHAN_FILTER_BW_REG<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="db__bitshark__rx_8cc_1a804a785b8c777bc14043f255cc237cef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RF_GAIN_REG<sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="db__bitshark__rx_8cc_1a4eb919cc5fca7825fbbf5b44bfaac218" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BB_GAIN_REG<sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="db__bitshark__rx_8cc_1ac14038e67147dc720607ae63b4813dae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADF4350_REG<sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="db__bitshark__rx_8cc_1a0a8f4012a6cf172ac72204fe486a169a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SKY73202_REG<sp/>0x11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="db__bitshark__rx_8cc_1a6782a2489f5c0c49955d0ce4b348ab47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOCK_SCHEME_REG<sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>table<sp/>lists<sp/>the<sp/>registers<sp/>provided<sp/>by<sp/>the<sp/>BURX<sp/>board<sp/>that</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>are<sp/>accessible<sp/>over<sp/>I2C:</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>--------------------------------------------------------</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>|RegAddr:<sp/>0x00-RF<sp/>Center<sp/>Freq<sp/>register<sp/>|</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|4-bytes<sp/>0x00|</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|4-byte<sp/>unsigned<sp/>RF<sp/>center<sp/>freq<sp/>(in<sp/>KHz)|</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>|RegAddr:<sp/>0x01-RF<sp/>channel<sp/>filter<sp/>bandwidth<sp/>register<sp/>|</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|4-bytes<sp/>0x00|</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|4-byte<sp/>unsigned<sp/>RF<sp/>channel<sp/>filter<sp/>bw<sp/>(in<sp/>KHz)|</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>|RegAddr:<sp/>0x02-RF<sp/>gain<sp/>register<sp/>|</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|7-bytes<sp/>0x00|</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|1-byte<sp/>signed<sp/>RF<sp/>gain<sp/>(in<sp/>dB)|</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>|RegAddr:<sp/>0x03-Baseband<sp/>gain<sp/>register<sp/>|</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|4-bytes<sp/>0x00|</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|4-byte<sp/>signed<sp/>baseband<sp/>filter<sp/>gain<sp/>(in<sp/>dB)|</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>|RegAddr:<sp/>0x10-ADF4350<sp/>register<sp/>|</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|4-bytes<sp/>0x00|</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|4-byte<sp/>ADF4350<sp/>register<sp/>value<sp/>(actual<sp/>ADF4350<sp/>reg<sp/>addr<sp/>embedded<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>within<sp/>4-byte<sp/>value)|</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>|RegAddr:<sp/>0x11-SKY73202<sp/>register<sp/>|</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|5-bytes<sp/>0x00|</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|1-byte<sp/>reg<sp/>0<sp/>of<sp/>SKY73202<sp/>|</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|1-byte<sp/>reg<sp/>1<sp/>of<sp/>SKY73202<sp/>|</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|1-byte<sp/>reg<sp/>2<sp/>of<sp/>SKY73202<sp/>|</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>|RegAddr:<sp/>0x20-Clock<sp/>Scheme<sp/>|</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|3-bytes<sp/>0x00|</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|1-byte<sp/>indicating<sp/>clocking<sp/>scheme:</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0x00<sp/>-&gt;<sp/>BURX<sp/>local<sp/>TCXO<sp/>off,<sp/>BURX<sp/>accepts<sp/>ref<sp/>clock<sp/>from</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USRP<sp/>(freq<sp/>of<sp/>USRP&apos;s<sp/>ref<sp/>clock<sp/>specified<sp/>in<sp/>bytes<sp/>2-5)</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0x01<sp/>-&gt;<sp/>BURX<sp/>local<sp/>TCXO<sp/>on,<sp/>BURX<sp/>uses<sp/>its<sp/>local<sp/>TCXO<sp/>as<sp/>its<sp/>ref</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock,<sp/>TCXO<sp/>signal<sp/>output<sp/>for<sp/>use<sp/>by<sp/>USRP<sp/>|</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|4-byte<sp/>USRP<sp/>ref<sp/>clock<sp/>freq<sp/>in<sp/>hz<sp/>(only<sp/>needed<sp/>if<sp/>byte<sp/>1<sp/>set<sp/>to<sp/>0x00)<sp/>|</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>As<sp/>an<sp/>example,<sp/>lets<sp/>say<sp/>the<sp/>client<sp/>wants<sp/>to<sp/>set<sp/>an<sp/>RF<sp/>center<sp/>freq<sp/>of</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>1000<sp/>MHz.<sp/><sp/>In<sp/>KHz,<sp/>this<sp/>translates<sp/>to<sp/>1000000<sp/>(resolution<sp/>is<sp/>only<sp/>down<sp/>to</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>steps<sp/>of<sp/>1<sp/>KHz),<sp/>which<sp/>is<sp/>0x000F4240<sp/>in<sp/>hex.<sp/><sp/>So<sp/>the<sp/>complete<sp/>9-byte<sp/>I2C<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>sequence<sp/>that<sp/>the<sp/>client<sp/>should<sp/>send<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>0:<sp/>0x00-register<sp/>0x00<sp/>is<sp/>the<sp/>target<sp/>of<sp/>the<sp/>write<sp/>operation</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>bytes<sp/>1-4:<sp/>0x00<sp/>(padding)</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>5:<sp/>0x40<sp/>(LSB<sp/>of<sp/>the<sp/>1000000<sp/>KHz<sp/>value,<sp/>in<sp/>hex)</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>6:<sp/>0x42</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>7:<sp/>0x0F</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>8:<sp/>0x00<sp/>(MSB<sp/>of<sp/>the<sp/>1000000<sp/>KHz<sp/>value,<sp/>in<sp/>hex)</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>If<sp/>using<sp/>the<sp/>usrper<sp/>cmd-line<sp/>application<sp/>on<sp/>a<sp/>PC,<sp/>this<sp/>sequence<sp/>would</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>be<sp/>sent<sp/>as<sp/>follows<sp/>(assuming<sp/>that<sp/>the<sp/>BURX<sp/>is<sp/>in<sp/>slot<sp/>A):</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/>#<sp/>usrper<sp/>i2c_write<sp/>0x47<sp/>000000000040420F00</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>How<sp/>about<sp/>another<sp/>example...lets<sp/>say<sp/>the<sp/>client<sp/>wants<sp/>to<sp/>setup<sp/>the<sp/>clock</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>scheme<sp/>to<sp/>use<sp/>scheme<sp/>#1<sp/>where<sp/>the<sp/>26<sp/>MHz<sp/>TCXO<sp/>on<sp/>the<sp/>BURX<sp/>board<sp/>is<sp/>enabled,</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/>and<sp/>is<sp/>provided<sp/>to<sp/>the<sp/>USRP.<sp/><sp/>26<sp/>MHz<sp/>(i.e.<sp/>26<sp/>million),<sp/>in<sp/>hex,<sp/>is<sp/>0x18CBA80.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>So<sp/>the<sp/>complete<sp/>9-byte<sp/>I2C<sp/>sequence<sp/>that<sp/>the<sp/>client<sp/>should<sp/>send<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>0:<sp/>0x20-register<sp/>0x20<sp/>is<sp/>the<sp/>target<sp/>of<sp/>the<sp/>write<sp/>operation</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>bytes<sp/>1-3:<sp/>0x00<sp/>(padding)</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>4:<sp/>0x01<sp/>(indicating<sp/>that<sp/>clock<sp/>scheme<sp/>#1<sp/>is<sp/>wanted)</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>5:<sp/>0x80<sp/>(LSB<sp/>of<sp/>the<sp/>BURX<sp/>ref<sp/>clk<sp/>freq)</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>6:<sp/>0xBA</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>7:<sp/>0x8C</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>byte<sp/>8:<sp/>0x01<sp/>(MSB<sp/>of<sp/>the<sp/>BURX<sp/>ref<sp/>clk<sp/>freq)</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>To<sp/>enable<sp/>the<sp/>BURX<sp/>local<sp/>ref<sp/>clk,<sp/>which<sp/>will<sp/>also<sp/>make<sp/>it<sp/>available<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>on-board<sp/>U.FL<sp/>connector<sp/>as<sp/>a<sp/>source<sp/>for<sp/>the<sp/>USRP,<sp/>a<sp/>user<sp/>can<sp/>also<sp/>use</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/>the<sp/>usrper<sp/>cmd-line<sp/>application<sp/>on<sp/>a<sp/>PC.<sp/><sp/>The<sp/>following<sp/>sequence<sp/>would</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>be<sp/>sent<sp/>(assuming<sp/>that<sp/>the<sp/>BURX<sp/>is<sp/>in<sp/>slot<sp/>A):</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>#<sp/>usrper<sp/>i2c_write<sp/>0x47<sp/>200000000180BA8C01</highlight></codeline>
<codeline lineno="114"><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="db__bitshark__rx_8cc_1a4a8f61ce34f97d14e1bbde1317bceead" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_BYTES_IN_I2C_CMD<sp/>9<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classdb__bitshark__rx_1a880c7e45bb15ba64d1dfa0d6b81c059d" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1a880c7e45bb15ba64d1dfa0d6b81c059d" kindref="member">db_bitshark_rx::db_bitshark_rx</ref>(<ref refid="db__base_8h_1a4847231f7e2f85d0a0f4a5ed78b25ee7" kindref="member">usrp_basic_sptr</ref><sp/>_usrp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classdb__base" kindref="compound">db_base</ref>(_usrp,<sp/>which)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Control<sp/>Bitshark<sp/>receiver<sp/>USRP<sp/>daughterboard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>usrp:<sp/>instance<sp/>of<sp/>usrp.source_c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>which:<sp/>which<sp/>side:<sp/>0,<sp/>1<sp/>corresponding<sp/>to<sp/>RX_A<sp/>or<sp/>RX_B<sp/>respectively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>off<sp/>all<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1ac540c04b719f1ce30426ecb2214107ef" kindref="member">_write_oe</ref>(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref>,<sp/>0,<sp/>0xffff);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_i2c_addr<sp/>=<sp/>0x47;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_i2c_addr<sp/>=<sp/>0x45;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>gain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__bitshark__rx_1a2bffea86cc9c569523f4c2169bd2b918" kindref="member">set_gain</ref>((<ref refid="classdb__bitshark__rx_1ac618df0cadb8edc142880e44624ee239" kindref="member">gain_min</ref>()<sp/>+<sp/><ref refid="classdb__bitshark__rx_1a67fbb5a4ed7fe79f593b654f4112d907" kindref="member">gain_max</ref>())<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>default,<sp/>assume<sp/>we&apos;re<sp/>using<sp/>the<sp/>USRPs<sp/>clock<sp/>as<sp/>the<sp/>ref<sp/>clk,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>setup<sp/>the<sp/>clock<sp/>scheme<sp/>and<sp/>frequency.<sp/><sp/>If<sp/>the<sp/>user<sp/>wants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>use<sp/>the<sp/>Bitshark&apos;s<sp/>TCXO,<sp/>the<sp/>clock<sp/>scheme<sp/>should<sp/>be<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>1,<sp/>the<sp/>freq<sp/>should<sp/>be<sp/>set<sp/>to<sp/>26000000,<sp/>and<sp/>a<sp/>top-level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;make&apos;<sp/>and<sp/>&apos;make<sp/>install&apos;<sp/>needs<sp/>to<sp/>be<sp/>executed.<sp/><sp/>In<sp/>addition,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>U.FL<sp/>to<sp/>SMA<sp/>cable<sp/>needs<sp/>to<sp/>connect<sp/>J6<sp/>on<sp/>the<sp/>Bitshark<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>external<sp/>clk<sp/>input<sp/>on<sp/>the<sp/>USRP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__bitshark__rx_1aed98afdec32fd066bd4ed833390c9cc9" kindref="member">set_clock_scheme</ref>(0,52000000);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__bitshark__rx_1ae8b8f942df5c56d3ce7c9653c98ac701" kindref="member">set_bw</ref>(8e6);<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>IF<sp/>bandwidth<sp/>to<sp/>match<sp/>USRP1<sp/>max<sp/>host<sp/>bandwidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__base_1a159a4f97c1c6ecc966b6822174e58735" kindref="member">bypass_adc_buffers</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classdb__bitshark__rx_1a2d833936b1fd09b1278c46c02e64db5f" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1a2d833936b1fd09b1278c46c02e64db5f" kindref="member">db_bitshark_rx::~db_bitshark_rx</ref>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__bitshark__rx_1a0779158c5040f0f409018969e06c59b7" kindref="member">shutdown</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">/************<sp/>Private<sp/>Functions<sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">db_bitshark_rx::_set_pga(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pga_gain)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(pga_gain&gt;=0<sp/>&amp;&amp;<sp/>pga_gain&lt;=20);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref><sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1afdcf0497f2554589b36a57806e239a07" kindref="member">set_pga</ref><sp/>(0,<sp/>pga_gain);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1afdcf0497f2554589b36a57806e239a07" kindref="member">set_pga</ref><sp/>(1,<sp/>pga_gain);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1afdcf0497f2554589b36a57806e239a07" kindref="member">set_pga</ref><sp/>(2,<sp/>pga_gain);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1afdcf0497f2554589b36a57806e239a07" kindref="member">set_pga</ref><sp/>(3,<sp/>pga_gain);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/************<sp/>Public<sp/>Functions<sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classdb__bitshark__rx_1a0779158c5040f0f409018969e06c59b7" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1a0779158c5040f0f409018969e06c59b7" kindref="member">db_bitshark_rx::shutdown</ref>()</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classdb__base_1ac181e0dee5a23fcd36e1e610965ae1b9" kindref="member">d_is_shutdown</ref>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdb__base_1ac181e0dee5a23fcd36e1e610965ae1b9" kindref="member">d_is_shutdown</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classdb__bitshark__rx_1ae8b8f942df5c56d3ce7c9653c98ac701" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1ae8b8f942df5c56d3ce7c9653c98ac701" kindref="member">db_bitshark_rx::set_bw</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bw)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>args(<ref refid="db__bitshark__rx_8cc_1a4a8f61ce34f97d14e1bbde1317bceead" kindref="member">NUM_BYTES_IN_I2C_CMD</ref>,0);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>rf_bw_in_khz<sp/>=<sp/>(uint16_t)(bw/1000.0);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val[4];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>try_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(val,0x00,4);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rf_bw_in_khz<sp/>&lt;<sp/>660<sp/><sp/>||<sp/>rf_bw_in_khz<sp/>&gt;<sp/>56000)<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;db_bitshark_rx::set_bw:<sp/>bw<sp/>(=%d)<sp/>must<sp/>be<sp/>between<sp/>660<sp/>KHz<sp/>and<sp/>56<sp/>MHz<sp/>inclusive\n&quot;</highlight><highlight class="normal">,<sp/>rf_bw_in_khz);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stdout,&quot;Setting<sp/>bw:<sp/>requested<sp/>bw<sp/>in<sp/>khz<sp/>is<sp/>%d\r\n&quot;,rf_bw_in_khz);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(val,&amp;rf_bw_in_khz,4);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>args[0]<sp/>=<sp/><ref refid="db__bitshark__rx_8cc_1aa304d32779c56b2f7eae5212c997089d" kindref="member">RF_CHAN_FILTER_BW_REG</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>args[5]<sp/>=<sp/>val[0];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>args[6]<sp/>=<sp/>val[1];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>args[7]<sp/>=<sp/>val[2];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>args[8]<sp/>=<sp/>val[3];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((result<sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(try_count<sp/>&lt;<sp/>3))</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=<ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a664e5aa3a3fb8a4c50b752906fcb79a0" kindref="member">write_i2c</ref><sp/>(d_i2c_addr,<sp/><ref refid="db__util_8cc_1ac1397f7615adcb5571c7555538fcf8e8" kindref="member">int_seq_to_str</ref><sp/>(args));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try_count++;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;db_bitshark_rx:set_bw:<sp/>giving<sp/>up<sp/>after<sp/>3<sp/>tries<sp/>without<sp/>success\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>gain<sp/>referenced<sp/>below<sp/>is<sp/>RF<sp/>gain<sp/>only.<sp/><sp/>There<sp/>are<sp/>two<sp/>independent</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/>gain<sp/>settings<sp/>at<sp/>RF:<sp/>a<sp/>digital<sp/>step<sp/>attenuator<sp/>(providing<sp/>0,<sp/>-6,<sp/>-12,<sp/>and</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/>-18<sp/>dB<sp/>of<sp/>attenuation),<sp/>and<sp/>a<sp/>second<sp/>LNA<sp/>(LNA2)<sp/>that<sp/>provides<sp/>~25<sp/>dB<sp/>of</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/>gain<sp/>(roughly...it<sp/>actually<sp/>depends<sp/>on<sp/>the<sp/>RF<sp/>freq).<sp/><sp/>So<sp/>combining<sp/>these</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/>two<sp/>stages<sp/>can<sp/>provide<sp/>an<sp/>overall<sp/>gain<sp/>range<sp/>from<sp/>0<sp/>(which<sp/>is<sp/>mapped</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/>to<sp/>-18<sp/>dB<sp/>on<sp/>the<sp/>step<sp/>attenuator<sp/>+<sp/>LNA2<sp/>turned<sp/>off)<sp/>to<sp/>42<sp/>(which<sp/>is</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/>mapped<sp/>to<sp/>0<sp/>dB<sp/>on<sp/>the<sp/>step<sp/>attenuator<sp/>+<sp/>LNA2<sp/>turned<sp/>on).<sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/>There<sp/>could<sp/>be<sp/>better<sp/>ways<sp/>to<sp/>map<sp/>these,<sp/>but<sp/>this<sp/>is<sp/>sufficient<sp/>for</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classdb__bitshark__rx_1ac618df0cadb8edc142880e44624ee239" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1ac618df0cadb8edc142880e44624ee239" kindref="member">db_bitshark_rx::gain_min</ref>()</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classdb__bitshark__rx_1a67fbb5a4ed7fe79f593b654f4112d907" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1a67fbb5a4ed7fe79f593b654f4112d907" kindref="member">db_bitshark_rx::gain_max</ref>()</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>42;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classdb__bitshark__rx_1a2d5c438c559d3a1e2ecf15c2690aceb1" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1a2d5c438c559d3a1e2ecf15c2690aceb1" kindref="member">db_bitshark_rx::gain_db_per_step</ref>()</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>6;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="256" refid="classdb__bitshark__rx_1a2bffea86cc9c569523f4c2169bd2b918" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1a2bffea86cc9c569523f4c2169bd2b918" kindref="member">db_bitshark_rx::set_gain</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gain)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>gain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>gain:<sp/><sp/>RF<sp/>gain<sp/>in<sp/>decibels,<sp/>range<sp/>of<sp/>0-42</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>True/False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>args(<ref refid="db__bitshark__rx_8cc_1a4a8f61ce34f97d14e1bbde1317bceead" kindref="member">NUM_BYTES_IN_I2C_CMD</ref>,0);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>try_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gain<sp/>&lt;<sp/><ref refid="classdb__bitshark__rx_1ac618df0cadb8edc142880e44624ee239" kindref="member">gain_min</ref>()<sp/>||<sp/>gain<sp/>&gt;<sp/><ref refid="classdb__bitshark__rx_1a67fbb5a4ed7fe79f593b654f4112d907" kindref="member">gain_max</ref>())<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;db_bitshark_rx::set_gain:<sp/>gain<sp/>(=%f)<sp/>must<sp/>be<sp/>between<sp/>%f<sp/>and<sp/>%f<sp/>inclusive\n&quot;</highlight><highlight class="normal">,<sp/>gain,<ref refid="classdb__bitshark__rx_1ac618df0cadb8edc142880e44624ee239" kindref="member">gain_min</ref>(),<ref refid="classdb__bitshark__rx_1a67fbb5a4ed7fe79f593b654f4112d907" kindref="member">gain_max</ref>());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stdout,&quot;db_bitshark_rx::set_gain:<sp/>requested<sp/>gain<sp/>of<sp/>%f\r\n&quot;,gain);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>args[0]<sp/>=<sp/><ref refid="db__bitshark__rx_8cc_1a804a785b8c777bc14043f255cc237cef" kindref="member">RF_GAIN_REG</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>args[5]<sp/>=<sp/>(int)gain;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((result<sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(try_count<sp/>&lt;<sp/>3))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=<ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a664e5aa3a3fb8a4c50b752906fcb79a0" kindref="member">write_i2c</ref><sp/>(d_i2c_addr,<sp/><ref refid="db__util_8cc_1ac1397f7615adcb5571c7555538fcf8e8" kindref="member">int_seq_to_str</ref><sp/>(args));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try_count++;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;db_bitshark_rx:set_gain:<sp/>giving<sp/>up<sp/>after<sp/>3<sp/>tries<sp/>without<sp/>success\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="292" refid="classdb__bitshark__rx_1aed98afdec32fd066bd4ed833390c9cc9" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1aed98afdec32fd066bd4ed833390c9cc9" kindref="member">db_bitshark_rx::set_clock_scheme</ref>(uint8_t<sp/>clock_scheme,<sp/>uint32_t<sp/>ref_clk_freq)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>clock<sp/>scheme<sp/>for<sp/>determining<sp/>how<sp/>the<sp/>BURX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dboard<sp/>receives<sp/>its<sp/>clock.<sp/><sp/>Note:<sp/>Ideally,<sp/>the<sp/>constructor<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BURX<sp/>board<sp/>could<sp/>simply<sp/>call<sp/>this<sp/>method<sp/>to<sp/>set<sp/>how<sp/>it<sp/>wants<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clock<sp/>scheme<sp/>configured.<sp/><sp/>However,<sp/>depending<sp/>on<sp/>the<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>daughterboard,<sp/>the<sp/>constructor<sp/>may<sp/>run<sp/>_after_<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>portion<sp/>of<sp/>the<sp/>application<sp/>needs<sp/>the<sp/>FPGA.<sp/><sp/>And<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>clock<sp/>source<sp/>for<sp/>the<sp/>FPGA<sp/>was<sp/>the<sp/>BURX&apos;s<sp/>26<sp/>MHz<sp/>TCXO,<sp/>we&apos;re<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>chicken-before-the-egg<sp/>dilemna.<sp/><sp/>So<sp/>the<sp/>solution<sp/>is<sp/>to<sp/>leave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>here<sp/>for<sp/>reference<sp/>in<sp/>case<sp/>an<sp/>app<sp/>wants<sp/>to<sp/>use<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>also<sp/>give<sp/>the<sp/>user<sp/>the<sp/>ability<sp/>to<sp/>set<sp/>the<sp/>clock<sp/>scheme<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>usrper<sp/>cmd-line<sp/>application<sp/>(see<sp/>example<sp/>at<sp/>the<sp/>top<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>clock_scheme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>ref_clk_freq<sp/>in<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>True/False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>args(<ref refid="db__bitshark__rx_8cc_1a4a8f61ce34f97d14e1bbde1317bceead" kindref="member">NUM_BYTES_IN_I2C_CMD</ref>,0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>try_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val[4];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clock_scheme<sp/>&gt;<sp/>1)<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;db_bitshark_rx::set_clock_scheme:<sp/>invalid<sp/>scheme<sp/>%d\n&quot;</highlight><highlight class="normal">,clock_scheme);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stdout,&quot;db_bitshark_rx::set_clock_scheme:<sp/>requested<sp/>clock<sp/>schem<sp/>of<sp/>%d<sp/>with<sp/>freq<sp/>%d<sp/>Hz<sp/>\n&quot;,clock_scheme,ref_clk_freq);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(val,&amp;ref_clk_freq,4);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>args[0]<sp/>=<sp/><ref refid="db__bitshark__rx_8cc_1a6782a2489f5c0c49955d0ce4b348ab47" kindref="member">CLOCK_SCHEME_REG</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>args[4]<sp/>=<sp/>(int)clock_scheme;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>args[5]<sp/>=<sp/>val[0];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>args[6]<sp/>=<sp/>val[1];</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>args[7]<sp/>=<sp/>val[2];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>args[8]<sp/>=<sp/>val[3];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((result<sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(try_count<sp/>&lt;<sp/>3))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=<ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a664e5aa3a3fb8a4c50b752906fcb79a0" kindref="member">write_i2c</ref><sp/>(d_i2c_addr,<sp/><ref refid="db__util_8cc_1ac1397f7615adcb5571c7555538fcf8e8" kindref="member">int_seq_to_str</ref><sp/>(args));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try_count++;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;db_bitshark_rx:set_clock_scheme:<sp/>giving<sp/>up<sp/>after<sp/>3<sp/>tries<sp/>without<sp/>success\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="classdb__bitshark__rx_1a636404b90ce972e4bcd708c4f9bc08c6" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1a636404b90ce972e4bcd708c4f9bc08c6" kindref="member">db_bitshark_rx::freq_min</ref>()</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>300e6;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="classdb__bitshark__rx_1ad4c1782f65e66057190141514a3e2c8a" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1ad4c1782f65e66057190141514a3e2c8a" kindref="member">db_bitshark_rx::freq_max</ref>()</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4e9;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfreq__result__t" kindref="compound">freq_result_t</ref></highlight></codeline>
<codeline lineno="356" refid="classdb__bitshark__rx_1aa1b71b8cecd0e4f72c16fe15e480d59c" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx" kindref="compound">db_bitshark_rx</ref>::<ref refid="classdb__bitshark__rx_1aa1b71b8cecd0e4f72c16fe15e480d59c" kindref="member">set_freq</ref>(double<sp/>freq)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>freq:<sp/><sp/>target<sp/>RF<sp/>frequency<sp/>in<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@type<sp/>freq:<sp/><sp/><sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@returns<sp/>(ok,<sp/>actual_baseband_freq)<sp/>where:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ok<sp/>is<sp/>True<sp/>or<sp/>False<sp/>and<sp/>indicates<sp/>success<sp/>or<sp/>failure,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>actual_baseband_freq<sp/>is<sp/>RF<sp/>frequency<sp/>that<sp/>corresponds<sp/>to<sp/>DC<sp/>in<sp/>the<sp/>IF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>args(<ref refid="db__bitshark__rx_8cc_1a4a8f61ce34f97d14e1bbde1317bceead" kindref="member">NUM_BYTES_IN_I2C_CMD</ref>,0);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>bytes(2);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val[4];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfreq__result__t" kindref="compound">freq_result_t</ref><sp/>act_freq<sp/>=<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>freq_in_khz<sp/>=<sp/>(uint32_t)(freq/1000.0);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>try_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(val,0x00,4);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(freq&gt;=<ref refid="classdb__bitshark__rx_1a636404b90ce972e4bcd708c4f9bc08c6" kindref="member">freq_min</ref>()<sp/>&amp;&amp;<sp/>freq&lt;=<ref refid="classdb__bitshark__rx_1ad4c1782f65e66057190141514a3e2c8a" kindref="member">freq_max</ref>()))<sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>act_freq;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stdout,&quot;db_bitshark_rx::set_freq:<sp/>requested<sp/>freq<sp/>is<sp/>%d<sp/>KHz\n&quot;,freq_in_khz);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(val,&amp;freq_in_khz,4);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>args[0]<sp/>=<sp/><ref refid="db__bitshark__rx_8cc_1a2029ca2cbd514be2045b974d23b98a39" kindref="member">RF_CENTER_FREQ_REG</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>args[5]<sp/>=<sp/>val[0];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>args[6]<sp/>=<sp/>val[1];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>args[7]<sp/>=<sp/>val[2];</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>args[8]<sp/>=<sp/>val[3];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((result<sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(try_count<sp/>&lt;<sp/>3))</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=<ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a664e5aa3a3fb8a4c50b752906fcb79a0" kindref="member">write_i2c</ref><sp/>(d_i2c_addr,<sp/><ref refid="db__util_8cc_1ac1397f7615adcb5571c7555538fcf8e8" kindref="member">int_seq_to_str</ref><sp/>(args));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try_count++;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;db_bitshark_rx:set_freq:<sp/>giving<sp/>up<sp/>after<sp/>3<sp/>tries<sp/>without<sp/>success\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>act_freq.<ref refid="structfreq__result__t_1a05f1d913c001ce385efb798e8ec9b649" kindref="member">ok</ref><sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>act_freq.<ref refid="structfreq__result__t_1a1c7c958029dfd98e62b6e1fa60fb5a1f" kindref="member">baseband_freq</ref><sp/>=<sp/>(double)freq;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>act_freq;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="406" refid="classdb__bitshark__rx_1a300677eed7dc286b67efa3bc83bf686c" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1a300677eed7dc286b67efa3bc83bf686c" kindref="member">db_bitshark_rx::is_quadrature</ref>()</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>True<sp/>if<sp/>this<sp/>board<sp/>requires<sp/>both<sp/>I<sp/>&amp;<sp/>Q<sp/>analog<sp/>channels.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="classdb__bitshark__rx_1ac7fd434e1bd1158d5391cde9d4abd371" refkind="member"><highlight class="normal"><ref refid="classdb__bitshark__rx_1ac7fd434e1bd1158d5391cde9d4abd371" kindref="member">db_bitshark_rx::i_and_q_swapped</ref>()</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>True<sp/>since<sp/>our<sp/>I<sp/>and<sp/>Q<sp/>channels<sp/>are<sp/>swapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_bitshark_rx.cc"/>
  </compounddef>
</doxygen>
