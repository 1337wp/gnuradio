<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="fusb__darwin_8cc" kind="file" language="C++">
    <compoundname>fusb_darwin.cc</compoundname>
    <includes local="no">usb.h</includes>
    <includes refid="fusb_8h" local="yes">fusb.h</includes>
    <includes refid="fusb__darwin_8h" local="yes">fusb_darwin.h</includes>
    <includes refid="darwin__libusb_8h" local="yes">darwin_libusb.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="645">
        <label>circular_linked_list.h</label>
        <link refid="circular__linked__list_8h"/>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
      </node>
      <node id="640">
        <label>fusb_darwin.h</label>
        <link refid="fusb__darwin_8h"/>
        <childnode refid="637" relation="include">
        </childnode>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="641" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
      </node>
      <node id="639">
        <label>usrp/libusb_types.h</label>
        <link refid="libusb__types_8h"/>
        <childnode refid="637" relation="include">
        </childnode>
      </node>
      <node id="647">
        <label>stdexcept</label>
      </node>
      <node id="643">
        <label>IOKit/usb/IOUSBLib.h</label>
      </node>
      <node id="644">
        <label>IOKit/IOKitLib.h</label>
      </node>
      <node id="646">
        <label>gruel/thread.h</label>
      </node>
      <node id="636">
        <label>fusb_darwin.cc</label>
        <link refid="fusb_darwin.cc"/>
        <childnode refid="637" relation="include">
        </childnode>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="640" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
      </node>
      <node id="650">
        <label>darwin_libusb.h</label>
        <link refid="darwin__libusb_8h"/>
        <childnode refid="641" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
      </node>
      <node id="638">
        <label>fusb.h</label>
        <link refid="fusb_8h"/>
        <childnode refid="639" relation="include">
        </childnode>
      </node>
      <node id="648">
        <label>circular_buffer.h</label>
        <link refid="circular__buffer_8h"/>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
      </node>
      <node id="649">
        <label>iostream</label>
      </node>
      <node id="642">
        <label>IOKit/IOCFPlugIn.h</label>
      </node>
      <node id="641">
        <label>IOKit/IOCFBundle.h</label>
      </node>
      <node id="637">
        <label>usb.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="fusb__darwin_8cc_1a6748a559cfa5d68a4eb3ab5e8f644033" prot="public" static="no">
        <name>DO_DEBUG</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_darwin.cc" line="27" column="9" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_darwin.cc" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fusb__darwin_8cc_1a2772e9787d2ba2ab2396c86766017df4" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int USB_TIMEOUT</definition>
        <argsstring></argsstring>
        <name>USB_TIMEOUT</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_darwin.cc" line="35" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_darwin.cc" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fusb__darwin_8cc_1a12849414bd8fb4f60233edde020e1918" prot="public" static="yes" mutable="no">
        <type>const UInt8</type>
        <definition>const UInt8 NUM_QUEUE_ITEMS</definition>
        <argsstring></argsstring>
        <name>NUM_QUEUE_ITEMS</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_darwin.cc" line="36" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_darwin.cc" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006,2009,2010<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="fusb__darwin_8cc_1a6748a559cfa5d68a4eb3ab5e8f644033" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DO_DEBUG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;usb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fusb_8h" kindref="compound">fusb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fusb__darwin_8h" kindref="compound">fusb_darwin.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="darwin__libusb_8h" kindref="compound">darwin_libusb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>USB_TIMEOUT<sp/>=<sp/>100;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>milliseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UInt8<sp/>NUM_QUEUE_ITEMS<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classfusb__devhandle__darwin_1acb62c443d1c750169b3c912735cf6f29" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__darwin_1acb62c443d1c750169b3c912735cf6f29" kindref="member">fusb_devhandle_darwin::fusb_devhandle_darwin</ref><sp/>(<ref refid="structusb__dev__handle" kindref="compound">usb_dev_handle</ref>*<sp/>udh)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classfusb__devhandle" kindref="compound">fusb_devhandle</ref><sp/>(udh)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that&apos;s<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classfusb__devhandle__darwin_1a37275287d4abb4981d28d3458d75333c" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__darwin_1a37275287d4abb4981d28d3458d75333c" kindref="member">fusb_devhandle_darwin::~fusb_devhandle_darwin</ref><sp/>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>nop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="classfusb__ephandle" kindref="compound">fusb_ephandle</ref>*</highlight></codeline>
<codeline lineno="50" refid="classfusb__devhandle__darwin_1a2edab16988958b0e7108d99e18e171df" refkind="member"><highlight class="normal"><ref refid="classfusb__devhandle__darwin_1a2edab16988958b0e7108d99e18e171df" kindref="member">fusb_devhandle_darwin::make_ephandle</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endpoint,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_p,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nblocks)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__darwin" kindref="compound">fusb_ephandle_darwin</ref><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>endpoint,<sp/>input_p,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_size,<sp/>nblocks);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classfusb__ephandle__darwin_1a75115bc11f04aa7b71f5c834817dc667" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__darwin_1a75115bc11f04aa7b71f5c834817dc667" kindref="member">fusb_ephandle_darwin::fusb_ephandle_darwin</ref><sp/>(<ref refid="classfusb__devhandle__darwin" kindref="compound">fusb_devhandle_darwin</ref>*<sp/>dh,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endpoint,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_p,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nblocks)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classfusb__ephandle" kindref="compound">fusb_ephandle</ref><sp/>(endpoint,<sp/>input_p,<sp/>block_size,<sp/>nblocks),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>d_devhandle<sp/>(dh),<sp/>d_pipeRef<sp/>(0),<sp/>d_transferType<sp/>(0),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>d_interfaceRef<sp/>(0),<sp/><sp/>d_interface<sp/>(0),<sp/>d_queue<sp/>(0),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>d_buffer<sp/>(0),<sp/>d_bufLenBytes<sp/>(0)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1abe51d11608df5388d3ea7d1a0ed125b3" kindref="member">d_bufLenBytes</ref><sp/>=<sp/><ref refid="classfusb__sysconfig_1a984f66e5b11b677d810c0a11f33f4ef6" kindref="member">fusb_sysconfig::max_block_size</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>circular<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a86826bf2951e9be5f28d38f0bc38ec7b" kindref="member">d_buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcircular__buffer" kindref="compound">circular_buffer&lt;char&gt;</ref><sp/>(NUM_QUEUE_ITEMS<sp/>*<sp/><ref refid="classfusb__ephandle__darwin_1abe51d11608df5388d3ea7d1a0ed125b3" kindref="member">d_bufLenBytes</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref>,<sp/><ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcircular__linked__list" kindref="compound">circular_linked_list &lt;s_buffer_ptr&gt;</ref><sp/>(NUM_QUEUE_ITEMS);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>d_queue-&gt;iterate_start<sp/>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref><sp/>l_node<sp/>=<sp/>d_queue-&gt;iterate_next<sp/>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l_node)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1ac3b0c2f62a6d14dcf295ae0238a6b5be" kindref="member">both</ref><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classs__both" kindref="compound">s_both&lt;s_buffer_ptr&gt;</ref><sp/>(l_node,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classs__buffer" kindref="compound">s_buffer_ptr</ref><sp/>l_buf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classs__buffer" kindref="compound">s_buffer</ref><sp/>(d_bufLenBytes);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" kindref="member">object</ref><sp/>(l_buf);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node<sp/>=<sp/>d_queue-&gt;iterate_next<sp/>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>l_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a88814e7de36d423c025bdeb126e64f50" kindref="member">d_readRunning</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::mutex<sp/>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>d_runThreadRunning<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::mutex<sp/>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a86634b17d337747f9483db8ba51136fa" kindref="member">d_runBlock</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::condition_variable<sp/>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1acc9a054a9d2e8c8dae26c3f3af7a3039" kindref="member">d_readBlock</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::condition_variable<sp/>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a42b7dff6eecba8b3157ad44298a8e827" kindref="member">d_runBlock_mutex</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::mutex<sp/>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1ae796719c23f4ca218c8808ba1cf6db34" kindref="member">d_readBlock_mutex</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::mutex<sp/>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classfusb__ephandle__darwin_1a7487f22bb9d633e00ed69fed86ce697b" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__darwin_1a7487f22bb9d633e00ed69fed86ce697b" kindref="member">fusb_ephandle_darwin::~fusb_ephandle_darwin</ref><sp/>()</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1af1424a7d28d0fc927ecdd6a5c3c26ef0" kindref="member">stop</ref><sp/>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>-&gt;<ref refid="classcircular__linked__list_1aace2f5222a9d5b500b94001e81ec0159" kindref="member">iterate_start</ref><sp/>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref><sp/>l_node<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>-&gt;<ref refid="classcircular__linked__list_1a873b3b21f61ac088ec8e69a413289d8c" kindref="member">iterate_next</ref><sp/>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l_node)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classs__both" kindref="compound">s_both_ptr</ref><sp/>l_both<sp/>=<sp/>l_node-&gt;<ref refid="classs__node_1ac3b0c2f62a6d14dcf295ae0238a6b5be" kindref="member">both</ref><sp/>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>l_both;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>l_both<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1ac3b0c2f62a6d14dcf295ae0238a6b5be" kindref="member">both</ref><sp/>(NULL);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classs__buffer" kindref="compound">s_buffer_ptr</ref><sp/>l_buf<sp/>=<sp/>l_node-&gt;<ref refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" kindref="member">object</ref><sp/>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>l_buf;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>l_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" kindref="member">object</ref><sp/>(NULL);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>-&gt;<ref refid="classcircular__linked__list_1a873b3b21f61ac088ec8e69a413289d8c" kindref="member">iterate_next</ref><sp/>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__darwin_1a86826bf2951e9be5f28d38f0bc38ec7b" kindref="member">d_buffer</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a86826bf2951e9be5f28d38f0bc38ec7b" kindref="member">d_buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__darwin_1a88814e7de36d423c025bdeb126e64f50" kindref="member">d_readRunning</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a88814e7de36d423c025bdeb126e64f50" kindref="member">d_readRunning</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d_runThreadRunning;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>d_runThreadRunning<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__darwin_1a42b7dff6eecba8b3157ad44298a8e827" kindref="member">d_runBlock_mutex</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a42b7dff6eecba8b3157ad44298a8e827" kindref="member">d_runBlock_mutex</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__darwin_1ae796719c23f4ca218c8808ba1cf6db34" kindref="member">d_readBlock_mutex</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1ae796719c23f4ca218c8808ba1cf6db34" kindref="member">d_readBlock_mutex</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__darwin_1a86634b17d337747f9483db8ba51136fa" kindref="member">d_runBlock</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a86634b17d337747f9483db8ba51136fa" kindref="member">d_runBlock</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classfusb__ephandle__darwin_1acc9a054a9d2e8c8dae26c3f3af7a3039" kindref="member">d_readBlock</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1acc9a054a9d2e8c8dae26c3f3af7a3039" kindref="member">d_readBlock</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classfusb__ephandle__darwin_1aca1441ae1cd0cff2008c23db7cff9482" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__darwin_1aca1441ae1cd0cff2008c23db7cff9482" kindref="member">fusb_ephandle_darwin::start</ref><sp/>()</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>UInt8<sp/><sp/>direction,<sp/>number,<sp/>interval;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>UInt16<sp/>maxPacketSize;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reset<sp/>circular<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a86826bf2951e9be5f28d38f0bc38ec7b" kindref="member">d_buffer</ref>-&gt;<ref refid="classcircular__buffer_1acc29c0f342fa153d64561b622e3cf3d4" kindref="member">reset</ref><sp/>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>-&gt;<ref refid="classcircular__linked__list_1a931507cc0f607c024e1e78dc277f7a60" kindref="member">num_used</ref><sp/>(0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>-&gt;<ref refid="classcircular__linked__list_1aace2f5222a9d5b500b94001e81ec0159" kindref="member">iterate_start</ref><sp/>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref><sp/>l_node<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>-&gt;<ref refid="classcircular__linked__list_1a873b3b21f61ac088ec8e69a413289d8c" kindref="member">iterate_next</ref><sp/>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l_node)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1ac3b0c2f62a6d14dcf295ae0238a6b5be" kindref="member">both</ref>()-&gt;<ref refid="classs__both_1ac50997822c5ec236770136a594278098" kindref="member">set</ref><sp/>(l_node,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" kindref="member">object</ref>()-&gt;<ref refid="classs__buffer_1aa554e07718c3c8160b1e5de3f6a4ee97" kindref="member">reset</ref><sp/>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classs__node_1ad71bf0bba7b638ef8772796e14b1040f" kindref="member">set_available</ref><sp/>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>-&gt;<ref refid="classcircular__linked__list_1a873b3b21f61ac088ec8e69a413289d8c" kindref="member">iterate_next</ref><sp/>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a0fe61b67ad1e4cf8e1f867b5d7428a90" kindref="member">d_pipeRef</ref><sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a6335642bc300216ff8e43a28453c9b6d" kindref="member">d_transferType</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="structusb__dev__handle" kindref="compound">usb_dev_handle</ref>*<sp/>dev<sp/>=<sp/>d_devhandle-&gt;<ref refid="classfusb__devhandle_1a0f1b7e9680e730d0f6faca7ec41175f1" kindref="member">get_usb_dev_handle</ref><sp/>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>dev)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="darwin__libusb_8h_1a91458181f6a0e61a1a81b135ced5aaa7" kindref="member">USB_ERROR_STR</ref><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-ENXIO,<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::start:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;null<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="structdarwin__dev__handle" kindref="compound">darwin_dev_handle</ref>*<sp/>device<sp/>=<sp/>(<ref refid="structdarwin__dev__handle" kindref="compound">darwin_dev_handle</ref>*)<sp/>dev-&gt;<ref refid="structusb__dev__handle_1ab08f2af9083159ae86648eae05b52c01" kindref="member">impl_info</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>if<sp/>(!<sp/>device)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="darwin__libusb_8h_1a91458181f6a0e61a1a81b135ced5aaa7" kindref="member">USB_ERROR_STR</ref><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-ENOENT,<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::start:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;device<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::start:<sp/>dev<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>dev<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>device<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>device<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref><sp/>=<sp/>device-&gt;<ref refid="structdarwin__dev__handle_1a24033b6bf2283cebd863675951365439" kindref="member">interface</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="darwin__libusb_8h_1a91458181f6a0e61a1a81b135ced5aaa7" kindref="member">USB_ERROR_STR</ref><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-EACCES,<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::start:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;interface<sp/>used<sp/>without<sp/>being<sp/>claimed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a4c946cfbb61ca98f1c3afc5f14e693ec" kindref="member">d_interface</ref><sp/>=<sp/>*<ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>read<sp/>or<sp/>write<sp/>pipe<sp/>info<sp/>(depends<sp/>on<sp/>&quot;d_input_p&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref><sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::start<sp/>d_endpoint<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classfusb__ephandle_1a136e1ab7ba9e180a78ea5085739dd018" kindref="member">d_endpoint</ref></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>d_input_p<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_endpoint<sp/>=<sp/>(<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref><sp/>?<sp/>USB_ENDPOINT_IN<sp/>:<sp/>USB_ENDPOINT_OUT);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pipeRef<sp/>=<sp/>ep_to_pipeRef<sp/>(device,<sp/><ref refid="classfusb__ephandle_1a136e1ab7ba9e180a78ea5085739dd018" kindref="member">d_endpoint</ref><sp/>|<sp/>l_endpoint);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipeRef<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="darwin__libusb_8h_1a91458181f6a0e61a1a81b135ced5aaa7" kindref="member">USB_ERROR_STR</ref><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-EINVAL,<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::start<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>invalid<sp/>pipeRef.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a0fe61b67ad1e4cf8e1f867b5d7428a90" kindref="member">d_pipeRef</ref><sp/>=<sp/>pipeRef;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a4c946cfbb61ca98f1c3afc5f14e693ec" kindref="member">d_interface</ref>-&gt;GetPipeProperties<sp/>(<ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref>,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a0fe61b67ad1e4cf8e1f867b5d7428a90" kindref="member">d_pipeRef</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;direction,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;number,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classfusb__ephandle__darwin_1a6335642bc300216ff8e43a28453c9b6d" kindref="member">d_transferType</ref>,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;maxPacketSize,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;interval);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref><sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::start:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;write&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>ep<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classfusb__ephandle_1a136e1ab7ba9e180a78ea5085739dd018" kindref="member">d_endpoint</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>pipeRef<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classfusb__ephandle__darwin_1a0fe61b67ad1e4cf8e1f867b5d7428a90" kindref="member">d_pipeRef</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;interface<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classfusb__ephandle__darwin_1a4c946cfbb61ca98f1c3afc5f14e693ec" kindref="member">d_interface</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>interfaceRef<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>if_direction<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>direction<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>if_#<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>number</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>if_interval<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>interval<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>if_maxPacketSize<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>maxPacketSize<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>global<sp/>start<sp/>boolean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>the<sp/>runBlock<sp/>mutex,<sp/>before<sp/>creating<sp/>the<sp/>run<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>guarantees<sp/>that<sp/>we<sp/>can<sp/>control<sp/>execution<sp/>between<sp/>these<sp/>2<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>gruel::scoped_lock<sp/>l<sp/>(*<ref refid="classfusb__ephandle__darwin_1a42b7dff6eecba8b3157ad44298a8e827" kindref="member">d_runBlock_mutex</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>run<sp/>thread,<sp/>which<sp/>allows<sp/>OSX<sp/>to<sp/>process<sp/>I/O<sp/>separately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>d_runThread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::thread<sp/>(run_thread,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>until<sp/>the<sp/>run<sp/>thread<sp/>(and<sp/>possibky<sp/>read<sp/>thread)<sp/>are<sp/>-really-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>going;<sp/>this<sp/>will<sp/>unlock<sp/>the<sp/>mutex<sp/>before<sp/>waiting<sp/>for<sp/>a<sp/>signal<sp/>()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a86634b17d337747f9483db8ba51136fa" kindref="member">d_runBlock</ref>-&gt;wait<sp/>(l);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::start:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;write&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>started.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">fusb_ephandle_darwin::run_thread<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin" kindref="compound">fusb_ephandle_darwin</ref>*<sp/>This<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classfusb__ephandle__darwin" kindref="compound">fusb_ephandle_darwin</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>the<sp/>run<sp/>thread<sp/>running<sp/>mutex;<sp/>if<sp/>::stop()<sp/>is<sp/>called,<sp/>it<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>abort()<sp/>the<sp/>pipe<sp/>then<sp/>wait<sp/>for<sp/>the<sp/>run<sp/>thread<sp/>to<sp/>finish,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>via<sp/>a<sp/>lock()<sp/>on<sp/>this<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>gruel::mutex*<sp/>l_runThreadRunning<sp/>=<sp/>This-&gt;d_runThreadRunning;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>gruel::scoped_lock<sp/>l0<sp/>(*l_runThreadRunning);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>gruel::mutex*<sp/>l_readRunning<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1a88814e7de36d423c025bdeb126e64f50" kindref="member">d_readRunning</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>gruel::condition_variable*<sp/>l_readBlock<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1acc9a054a9d2e8c8dae26c3f3af7a3039" kindref="member">d_readBlock</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>gruel::mutex*<sp/>l_readBlock_mutex<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1ae796719c23f4ca218c8808ba1cf6db34" kindref="member">d_readBlock_mutex</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>l_input_p<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::run_thread:<sp/>starting<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(l_input_p<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;write&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="fusb__darwin_8h_1ab20603f7900e18ac518c5684661b9f58" kindref="member">usb_interface_t</ref>**<sp/>l_interfaceRef<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="fusb__darwin_8h_1ab20603f7900e18ac518c5684661b9f58" kindref="member">usb_interface_t</ref>*<sp/>l_interface<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1a4c946cfbb61ca98f1c3afc5f14e693ec" kindref="member">d_interface</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>CFRunLoopSourceRef<sp/>l_cfSource;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>async<sp/>run<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>l_interface-&gt;CreateInterfaceAsyncEventSource<sp/>(l_interfaceRef,<sp/>&amp;l_cfSource);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>CFRunLoopAddSource<sp/>(CFRunLoopGetCurrent<sp/>(),<sp/>l_cfSource,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kCFRunLoopDefaultMode);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>run<sp/>loop<sp/>reference,<sp/>to<sp/>allow<sp/>other<sp/>threads<sp/>to<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>This-&gt;d_CFRunLoopRef<sp/>=<sp/>CFRunLoopGetCurrent<sp/>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>gruel::thread*<sp/>l_rwThread<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l_input_p)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>the<sp/>readBlock<sp/>mutex,<sp/>before<sp/>creating<sp/>the<sp/>read<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>guarantees<sp/>that<sp/>we<sp/>can<sp/>control<sp/>execution<sp/>between<sp/>these<sp/>2<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>gruel::scoped_lock<sp/>l1<sp/>(*l_readBlock_mutex);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>read<sp/>thread,<sp/>which<sp/>just<sp/>issues<sp/>all<sp/>of<sp/>the<sp/>starting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>async<sp/>read<sp/>commands,<sp/>then<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>l_rwThread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>gruel::thread<sp/>(read_thread,<sp/>arg);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>until<sp/>the<sp/>the<sp/>read<sp/>thread<sp/>is<sp/>-really-<sp/>going;<sp/>this<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unlock<sp/>the<sp/>read<sp/>block<sp/>mutex<sp/>before<sp/>waiting<sp/>for<sp/>a<sp/>signal<sp/>()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>l_readBlock-&gt;wait<sp/>(l1);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>signal<sp/>the<sp/>run<sp/>condition<sp/>to<sp/>release<sp/>and<sp/>finish<sp/>::start().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>the<sp/>runBlock<sp/>mutex<sp/>first;<sp/>this<sp/>will<sp/>force<sp/>waiting<sp/>until<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;wait()<sp/>command<sp/>is<sp/>issued<sp/>in<sp/>::start()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>gruel::mutex*<sp/>l_run_block_mutex<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1a42b7dff6eecba8b3157ad44298a8e827" kindref="member">d_runBlock_mutex</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>gruel::scoped_lock<sp/>l2<sp/>(*l_run_block_mutex);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>that<sp/>the<sp/>lock<sp/>is<sp/>in<sp/>place,<sp/>signal<sp/>the<sp/>parent<sp/>thread<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>things<sp/>are<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1a86634b17d337747f9483db8ba51136fa" kindref="member">d_runBlock</ref>-&gt;notify_one<sp/>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>CFRunLoopRun<sp/>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l_input_p)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>read_thread<sp/>()<sp/>to<sp/>finish,<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>gruel::scoped_lock<sp/>l3<sp/>(*l_readRunning);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>run<sp/>loop<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>CFRunLoopRemoveSource<sp/>(CFRunLoopGetCurrent<sp/>(),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_cfSource,<sp/>kCFRunLoopDefaultMode);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::run_thread:<sp/>finished<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(l_input_p<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;write&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">fusb_ephandle_darwin::read_thread<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::read_thread:<sp/>starting.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin" kindref="compound">fusb_ephandle_darwin</ref>*<sp/>This<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classfusb__ephandle__darwin" kindref="compound">fusb_ephandle_darwin</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>doing<sp/>anything<sp/>else,<sp/>lock<sp/>the<sp/>read<sp/>running<sp/>mutex.<sp/><sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mutex<sp/>does<sp/>flow<sp/>control<sp/>between<sp/>this<sp/>thread<sp/>and<sp/>the<sp/>run_thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>gruel::mutex*<sp/>l_readRunning<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1a88814e7de36d423c025bdeb126e64f50" kindref="member">d_readRunning</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>gruel::scoped_lock<sp/>l0<sp/>(*l_readRunning);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>signal<sp/>the<sp/>read<sp/>condition<sp/>from<sp/>run_thread()<sp/>to<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>the<sp/>readBlock<sp/>mutex<sp/>first;<sp/>this<sp/>will<sp/>force<sp/>waiting<sp/>until<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;wait()<sp/>command<sp/>is<sp/>issued<sp/>in<sp/>::run_thread()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>gruel::condition_variable*<sp/>l_readBlock<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1acc9a054a9d2e8c8dae26c3f3af7a3039" kindref="member">d_readBlock</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>gruel::mutex*<sp/>l_read_block_mutex<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1ae796719c23f4ca218c8808ba1cf6db34" kindref="member">d_readBlock_mutex</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>gruel::scoped_lock<sp/>l1<sp/>(*l_read_block_mutex);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>that<sp/>the<sp/>lock<sp/>is<sp/>in<sp/>place,<sp/>signal<sp/>the<sp/>parent<sp/>thread<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>things<sp/>are<sp/>running<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>l_readBlock-&gt;notify_one<sp/>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>queue<sp/>up<sp/>all<sp/>of<sp/>the<sp/>available<sp/>read<sp/>requests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="classcircular__linked__list" kindref="compound">s_queue_ptr</ref><sp/>l_queue<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>l_queue-&gt;<ref refid="classcircular__linked__list_1aace2f5222a9d5b500b94001e81ec0159" kindref="member">iterate_start</ref><sp/>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref><sp/>l_node<sp/>=<sp/>l_queue-&gt;<ref refid="classcircular__linked__list_1a873b3b21f61ac088ec8e69a413289d8c" kindref="member">iterate_next</ref><sp/>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l_node)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>This-&gt;read_issue<sp/>(l_node-&gt;<ref refid="classs__node_1ac3b0c2f62a6d14dcf295ae0238a6b5be" kindref="member">both</ref><sp/>());</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node<sp/>=<sp/>l_queue-&gt;<ref refid="classcircular__linked__list_1a873b3b21f61ac088ec8e69a413289d8c" kindref="member">iterate_next</ref><sp/>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::read_thread:<sp/>finished.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">fusb_ephandle_darwin::read_issue<sp/>(<ref refid="classs__both" kindref="compound">s_both_ptr</ref><sp/>l_both)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!<sp/>l_both)<sp/>||<sp/>(!<sp/><ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref>))<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref><sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::read_issue:<sp/>Doing<sp/>nothing;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;l_both<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_both<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>started<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(<ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>node<sp/>and<sp/>buffer<sp/>from<sp/>the<sp/>input<sp/>&quot;both&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref><sp/>l_node<sp/>=<sp/>l_both-&gt;<ref refid="classs__both_1ab9720e2c280172daa9c536c8de34f4a6" kindref="member">node</ref><sp/>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="classs__buffer" kindref="compound">s_buffer_ptr</ref><sp/>l_buf<sp/>=<sp/>l_node-&gt;<ref refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" kindref="member">object</ref><sp/>();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v_buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_buf-&gt;<ref refid="classs__buffer_1a9200cbab69c0e3c8f2a9e52042d9e9a7" kindref="member">buffer</ref><sp/>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>read<sp/>up<sp/>to<sp/>d_bufLenBytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufLen<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1abe51d11608df5388d3ea7d1a0ed125b3" kindref="member">d_bufLenBytes</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>l_buf-&gt;<ref refid="classs__buffer_1a9a7363a8a0ce0f66235c216e6584d8d9" kindref="member">n_used</ref><sp/>(bufLen);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>setup<sp/>system<sp/>call<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><ref refid="fusb__darwin_8h_1a33b766964215f52ef3eeae1397a3d244" kindref="member">io_return_t</ref><sp/>result<sp/>=<sp/>kIOReturnSuccess;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle__darwin_1a6335642bc300216ff8e43a28453c9b6d" kindref="member">d_transferType</ref><sp/>==<sp/>kUSBInterrupt)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>an<sp/>interrupt<sp/>pipe.<sp/>We<sp/>can&apos;t<sp/>specify<sp/>a<sp/>timeout.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a4c946cfbb61ca98f1c3afc5f14e693ec" kindref="member">d_interface</ref>-&gt;ReadPipeAsync</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref>,<sp/><ref refid="classfusb__ephandle__darwin_1a0fe61b67ad1e4cf8e1f867b5d7428a90" kindref="member">d_pipeRef</ref>,<sp/>v_buffer,<sp/>bufLen,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IOAsyncCallback1)<sp/>read_completed,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_both);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a4c946cfbb61ca98f1c3afc5f14e693ec" kindref="member">d_interface</ref>-&gt;ReadPipeAsyncTO</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref>,<sp/><ref refid="classfusb__ephandle__darwin_1a0fe61b67ad1e4cf8e1f867b5d7428a90" kindref="member">d_pipeRef</ref>,<sp/>v_buffer,<sp/>bufLen,<sp/>0,<sp/>USB_TIMEOUT,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IOAsyncCallback1)<sp/>read_completed,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_both);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>kIOReturnSuccess)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="darwin__libusb_8h_1a6c7a312a78f69953e39305ab222522ca" kindref="member">USB_ERROR_STR_NO_RET</ref><sp/>(-<sp/>darwin_to_errno<sp/>(result),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::read_issue<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(ReadPipeAsync%s):<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a6335642bc300216ff8e43a28453c9b6d" kindref="member">d_transferType</ref><sp/>==<sp/>kUSBInterrupt<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;TO&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>darwin_error_str<sp/>(result));</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref><sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::read_issue:<sp/>Queued<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_both</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bufLen<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Bytes)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">fusb_ephandle_darwin::read_completed<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>refCon,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fusb__darwin_8h_1a33b766964215f52ef3eeae1397a3d244" kindref="member">io_return_t</ref><sp/>result,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>io_size)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l_size<sp/>=<sp/>(size_t)<sp/>io_size;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><ref refid="classs__both" kindref="compound">s_both_ptr</ref><sp/>l_both<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classs__both" kindref="compound">s_both_ptr</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(refCon);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin" kindref="compound">fusb_ephandle_darwin</ref>*<sp/>This<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classfusb__ephandle__darwin" kindref="compound">fusb_ephandle_darwin</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(l_both-&gt;<ref refid="classs__both_1a12266700e2cd36fa5fc127e345014d10" kindref="member">This</ref><sp/>());</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref><sp/>l_node<sp/>=<sp/>l_both-&gt;<ref refid="classs__both_1ab9720e2c280172daa9c536c8de34f4a6" kindref="member">node</ref><sp/>();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="classcircular__buffer" kindref="compound">circular_buffer&lt;char&gt;</ref>*<sp/>l_buffer<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1a86826bf2951e9be5f28d38f0bc38ec7b" kindref="member">d_buffer</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><ref refid="classs__buffer" kindref="compound">s_buffer_ptr</ref><sp/>l_buf<sp/>=<sp/>l_node-&gt;<ref refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" kindref="member">object</ref><sp/>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l_i_size<sp/>=<sp/>l_buf-&gt;<ref refid="classs__buffer_1a9a7363a8a0ce0f66235c216e6584d8d9" kindref="member">n_used</ref><sp/>();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(This-&gt;<ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref><sp/>&amp;&amp;<sp/>(l_i_size<sp/>!=<sp/>l_size))<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::read_completed:<sp/>Expected<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_i_size</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes;<sp/>read<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref><sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::read_completed:<sp/>Read<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_both</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>this<sp/>read<sp/>to<sp/>the<sp/>transfer<sp/>buffer,<sp/>and<sp/>check<sp/>for<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-&gt;<sp/>data<sp/>is<sp/>being<sp/>enqueued<sp/>faster<sp/>than<sp/>it<sp/>can<sp/>be<sp/>dequeued</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l_buffer-&gt;<ref refid="classcircular__buffer_1abcd24de17aa8258835c6dff2c027a6d6" kindref="member">enqueue</ref><sp/>(l_buf-&gt;<ref refid="classs__buffer_1a9200cbab69c0e3c8f2a9e52042d9e9a7" kindref="member">buffer</ref><sp/>(),<sp/>l_size)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/>print<sp/>out<sp/>that<sp/>there&apos;s<sp/>an<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>fputs<sp/>(</highlight><highlight class="stringliteral">&quot;uO&quot;</highlight><highlight class="normal">,<sp/>stderr);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush<sp/>(stderr);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>buffer&apos;s<sp/>#<sp/>data<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>l_buf-&gt;<ref refid="classs__buffer_1a9a7363a8a0ce0f66235c216e6584d8d9" kindref="member">n_used</ref><sp/>(0);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//<sp/>issue<sp/>another<sp/>read<sp/>for<sp/>this<sp/>&quot;both&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>This-&gt;read_issue<sp/>(l_both);</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="classfusb__ephandle__darwin_1a9f45fa5d5fd0c1dda8244da08f707862" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__darwin_1a9f45fa5d5fd0c1dda8244da08f707862" kindref="member">fusb_ephandle_darwin::read</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l_nbytes<sp/>=<sp/>(size_t)<sp/>nbytes;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a86826bf2951e9be5f28d38f0bc38ec7b" kindref="member">d_buffer</ref>-&gt;<ref refid="classcircular__buffer_1a7f86491a41b04da07ed2f5b3dbc748d1" kindref="member">dequeue</ref><sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>buffer,<sp/>&amp;l_nbytes);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref><sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::read:<sp/>request<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nbytes</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_nbytes<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes<sp/>retrieved.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>l_nbytes);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="classfusb__ephandle__darwin_1ad703974c4df48763a1ec4d0d489237e3" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__darwin_1ad703974c4df48763a1ec4d0d489237e3" kindref="member">fusb_ephandle_darwin::write</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l_nbytes<sp/>=<sp/>(size_t)<sp/>nbytes;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::write:<sp/>Not<sp/>yet<sp/>started.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l_nbytes<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/>find<sp/>out<sp/>how<sp/>much<sp/>data<sp/>to<sp/>copy;<sp/>limited<sp/>to<sp/>&quot;d_bufLenBytes&quot;<sp/>per<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>t_nbytes<sp/>=<sp/>(l_nbytes<sp/>&gt;<sp/><ref refid="classfusb__ephandle__darwin_1abe51d11608df5388d3ea7d1a0ed125b3" kindref="member">d_bufLenBytes</ref>)<sp/>?<sp/><ref refid="classfusb__ephandle__darwin_1abe51d11608df5388d3ea7d1a0ed125b3" kindref="member">d_bufLenBytes</ref><sp/>:<sp/>l_nbytes;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>next<sp/>available<sp/>node<sp/>to<sp/>write<sp/>into;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blocks<sp/>internally<sp/>if<sp/>none<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref><sp/>l_node<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>-&gt;<ref refid="classcircular__linked__list_1a7217a832472b5bfa0425c8ad60ef1e93" kindref="member">find_next_available_node</ref><sp/>();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>input<sp/>into<sp/>the<sp/>node&apos;s<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classs__buffer" kindref="compound">s_buffer_ptr</ref><sp/>l_buf<sp/>=<sp/>l_node-&gt;<ref refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" kindref="member">object</ref><sp/>();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>l_buf-&gt;<ref refid="classs__buffer_1a9200cbab69c0e3c8f2a9e52042d9e9a7" kindref="member">buffer</ref><sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>buffer,<sp/>t_nbytes);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v_buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_buf-&gt;<ref refid="classs__buffer_1a9200cbab69c0e3c8f2a9e52042d9e9a7" kindref="member">buffer</ref><sp/>();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>setup<sp/>callback<sp/>parameter<sp/>&amp;<sp/>system<sp/>call<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classs__both" kindref="compound">s_both_ptr</ref><sp/>l_both<sp/>=<sp/>l_node-&gt;<ref refid="classs__node_1ac3b0c2f62a6d14dcf295ae0238a6b5be" kindref="member">both</ref><sp/>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fusb__darwin_8h_1a33b766964215f52ef3eeae1397a3d244" kindref="member">io_return_t</ref><sp/>result<sp/>=<sp/>kIOReturnSuccess;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle__darwin_1a6335642bc300216ff8e43a28453c9b6d" kindref="member">d_transferType</ref><sp/>==<sp/>kUSBInterrupt)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>an<sp/>interrupt<sp/>pipe<sp/>...<sp/>can&apos;t<sp/>specify<sp/>a<sp/>timeout.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a4c946cfbb61ca98f1c3afc5f14e693ec" kindref="member">d_interface</ref>-&gt;WritePipeAsync</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref>,<sp/><ref refid="classfusb__ephandle__darwin_1a0fe61b67ad1e4cf8e1f867b5d7428a90" kindref="member">d_pipeRef</ref>,<sp/>v_buffer,<sp/>t_nbytes,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IOAsyncCallback1)<sp/>write_completed,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_both);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a4c946cfbb61ca98f1c3afc5f14e693ec" kindref="member">d_interface</ref>-&gt;WritePipeAsyncTO</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref>,<sp/><ref refid="classfusb__ephandle__darwin_1a0fe61b67ad1e4cf8e1f867b5d7428a90" kindref="member">d_pipeRef</ref>,<sp/>v_buffer,<sp/>t_nbytes,<sp/>0,<sp/>USB_TIMEOUT,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IOAsyncCallback1)<sp/>write_completed,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_both);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>kIOReturnSuccess)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="darwin__libusb_8h_1a91458181f6a0e61a1a81b135ced5aaa7" kindref="member">USB_ERROR_STR</ref><sp/>(-1,<sp/>-<sp/>darwin_to_errno<sp/>(result),</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::write_thread<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(WritePipeAsync%s):<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a6335642bc300216ff8e43a28453c9b6d" kindref="member">d_transferType</ref><sp/>==<sp/>kUSBInterrupt<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;TO&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>darwin_error_str<sp/>(result));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref><sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::write_thread:<sp/>Queued<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_both</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t_nbytes<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Bytes)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>l_nbytes<sp/>-=<sp/>t_nbytes;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nbytes);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">fusb_ephandle_darwin::write_completed<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>refCon,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fusb__darwin_8h_1a33b766964215f52ef3eeae1397a3d244" kindref="member">io_return_t</ref><sp/>result,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>io_size)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><ref refid="classs__both" kindref="compound">s_both_ptr</ref><sp/>l_both<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classs__both" kindref="compound">s_both_ptr</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(refCon);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin" kindref="compound">fusb_ephandle_darwin</ref>*<sp/>This<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classfusb__ephandle__darwin" kindref="compound">fusb_ephandle_darwin</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(l_both-&gt;<ref refid="classs__both_1a12266700e2cd36fa5fc127e345014d10" kindref="member">This</ref><sp/>());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l_size<sp/>=<sp/>(size_t)<sp/>io_size;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><ref refid="classs__node" kindref="compound">s_node_ptr</ref><sp/>l_node<sp/>=<sp/>l_both-&gt;<ref refid="classs__both_1ab9720e2c280172daa9c536c8de34f4a6" kindref="member">node</ref><sp/>();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><ref refid="classcircular__linked__list" kindref="compound">s_queue_ptr</ref><sp/>l_queue<sp/>=<sp/>This-&gt;<ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><ref refid="classs__buffer" kindref="compound">s_buffer_ptr</ref><sp/>l_buf<sp/>=<sp/>l_node-&gt;<ref refid="classs__node_1a8051b14d5a222a3f9c60836f38216755" kindref="member">object</ref><sp/>();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l_i_size<sp/>=<sp/>l_buf-&gt;<ref refid="classs__buffer_1a9a7363a8a0ce0f66235c216e6584d8d9" kindref="member">n_used</ref><sp/>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(This-&gt;<ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref><sp/>&amp;&amp;<sp/>(l_i_size<sp/>!=<sp/>l_size))<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::write_completed:<sp/>Expected<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_i_size</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes<sp/>written;<sp/>wrote<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref><sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::write_completed:<sp/>Wrote<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>l_both</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Bytes)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>buffer&apos;s<sp/>#<sp/>data<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>l_buf-&gt;<ref refid="classs__buffer_1a9a7363a8a0ce0f66235c216e6584d8d9" kindref="member">n_used</ref><sp/>(0);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/>make<sp/>the<sp/>node<sp/>available<sp/>for<sp/>reuse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>l_queue-&gt;<ref refid="classcircular__linked__list_1ac46c781dd6e3c9933628a55b3b35a1e5" kindref="member">make_node_available</ref><sp/>(l_node);</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="classfusb__ephandle__darwin_1aa5067d1f65048940bffdfdb7996ea8d3" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__darwin_1aa5067d1f65048940bffdfdb7996ea8d3" kindref="member">fusb_ephandle_darwin::abort</ref><sp/>()</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::abort:<sp/>starting.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><ref refid="fusb__darwin_8h_1a33b766964215f52ef3eeae1397a3d244" kindref="member">io_return_t</ref><sp/>result<sp/>=<sp/><ref refid="classfusb__ephandle__darwin_1a4c946cfbb61ca98f1c3afc5f14e693ec" kindref="member">d_interface</ref>-&gt;AbortPipe<sp/>(<ref refid="classfusb__ephandle__darwin_1a833a58e14de40f53f45df6ba213d2058" kindref="member">d_interfaceRef</ref>,<sp/><ref refid="classfusb__ephandle__darwin_1a0fe61b67ad1e4cf8e1f867b5d7428a90" kindref="member">d_pipeRef</ref>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>kIOReturnSuccess)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="darwin__libusb_8h_1a6c7a312a78f69953e39305ab222522ca" kindref="member">USB_ERROR_STR_NO_RET</ref><sp/>(-<sp/>darwin_to_errno<sp/>(result),</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::abort<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(AbortPipe):<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>darwin_error_str<sp/>(result));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::abort:<sp/>finished.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="classfusb__ephandle__darwin_1af1424a7d28d0fc927ecdd6a5c3c26ef0" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__darwin_1af1424a7d28d0fc927ecdd6a5c3c26ef0" kindref="member">fusb_ephandle_darwin::stop</ref><sp/>()</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/><ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::stop:<sp/>stopping<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;write&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle_1ad6506c0efdf8eea1dcd8df8d65ecc609" kindref="member">d_started</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment">//<sp/>abort<sp/>any<sp/>pending<sp/>IO<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1aa5067d1f65048940bffdfdb7996ea8d3" kindref="member">abort</ref><sp/>();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>write<sp/>transfer<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a456d75e85abf8c2d3e76c7bed03e9993" kindref="member">wait_for_completion</ref><sp/>();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tell<sp/>IO<sp/>buffer<sp/>to<sp/>abort<sp/>any<sp/>waiting<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><ref refid="classfusb__ephandle__darwin_1a86826bf2951e9be5f28d38f0bc38ec7b" kindref="member">d_buffer</ref>-&gt;<ref refid="classcircular__buffer_1a1da17d5f94fe3ca1ffca42a5d307f4f5" kindref="member">abort</ref><sp/>();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stop<sp/>the<sp/>run<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>CFRunLoopStop<sp/>(d_CFRunLoopRef);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>the<sp/>runThread<sp/>to<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>gruel::scoped_lock<sp/>l<sp/>(*d_runThreadRunning);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fusb__darwin_8h_1ae3f6d70c719c77e228ccc905331d7784" kindref="member">usb_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fusb_ephandle_darwin::stop:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classfusb__ephandle_1a123fcada49a57077500fab084e537643" kindref="member">d_input_p</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;write&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stopped.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="classfusb__ephandle__darwin_1a456d75e85abf8c2d3e76c7bed03e9993" refkind="member"><highlight class="normal"><ref refid="classfusb__ephandle__darwin_1a456d75e85abf8c2d3e76c7bed03e9993" kindref="member">fusb_ephandle_darwin::wait_for_completion</ref><sp/>()</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classfusb__ephandle__darwin_1a547ad950d744a4af1fcd1908bfc43135" kindref="member">d_queue</ref>-&gt;<ref refid="classcircular__linked__list_1a89aa83f4cce7dce63bac75d8161c193f" kindref="member">in_use</ref><sp/>())</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>usleep<sp/>(1000);</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/fusb_darwin.cc"/>
  </compounddef>
</doxygen>
