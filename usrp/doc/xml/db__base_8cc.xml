<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="db__base_8cc" kind="file" language="C++">
    <compoundname>db_base.cc</compoundname>
    <includes refid="db__base_8h" local="no">usrp/db_base.h</includes>
    <includes refid="db__base__impl_8h" local="no">db_base_impl.h</includes>
    <incdepgraph>
      <node id="37">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="49">
        <label>fpga_regs_standard.h</label>
      </node>
      <node id="46">
        <label>usrp/libusb_types.h</label>
        <link refid="libusb__types_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>db_base_impl.h</label>
        <link refid="db__base__impl_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>stdexcept</label>
      </node>
      <node id="44">
        <label>usrp/usrp_slots.h</label>
        <link refid="usrp__slots_8h"/>
      </node>
      <node id="34">
        <label>db_base.cc</label>
        <link refid="db_base.cc"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>string</label>
      </node>
      <node id="38">
        <label>boost/weak_ptr.hpp</label>
      </node>
      <node id="41">
        <label>db_util.h</label>
        <link refid="db__util_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>vector</label>
      </node>
      <node id="35">
        <label>usrp/db_base.h</label>
        <link refid="db__base_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>boost/utility.hpp</label>
      </node>
      <node id="43">
        <label>usrp/usrp_basic.h</label>
        <link refid="usrp__basic_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>iosfwd</label>
      </node>
      <node id="45">
        <label>usrp/usrp_subdev_spec.h</label>
        <link refid="usrp__subdev__spec_8h"/>
      </node>
      <node id="47">
        <label>usb.h</label>
      </node>
      <node id="50">
        <label>fpga_regs_common.h</label>
      </node>
      <node id="51">
        <label>usrp/usrp_prims.h</label>
        <link refid="usrp__prims_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>usrp_spi_defs.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="db__base_8cc_1af7425840ce46878ac3269ea46b1b7f94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, db_base &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classdb__base" kindref="compound">db_base</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_base.cc" line="252" column="1" bodyfile="/home/me/gnuradio-3.4.0/usrp/host/lib/db_base.cc" bodystart="252" bodyend="256"/>
        <references refid="classdb__base_1a9cee7496d9a4d09b72a008fb5d7e6664" compoundref="db__base_8cc" startline="76" endline="82">db_base::side_and_name</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2008,2009<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>asversion<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="db__base_8h" kindref="compound">usrp/db_base.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="db__base__impl_8h" kindref="compound">db_base_impl.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">tune_result::tune_result(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseband,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dxc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>residual,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inv)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>:<sp/>ok(false),<sp/>baseband_freq(baseband),<sp/>dxc_freq(dxc),<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>residual_freq(residual),<sp/>inverted(inv)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">tune_result::~tune_result()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classdb__base_1aeddb69ef4218642cb8b03eff94ff8efc" refkind="member"><highlight class="normal"><ref refid="classdb__base_1aeddb69ef4218642cb8b03eff94ff8efc" kindref="member">db_base::db_base</ref>(<ref refid="db__base_8h_1a4847231f7e2f85d0a0f4a5ed78b25ee7" kindref="member">usrp_basic_sptr</ref><sp/>usrp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>:<sp/>d_is_shutdown(false),<sp/>d_raw_usrp(usrp.get()),<sp/>d_which(which),<sp/>d_lo_offset(0.0)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classdb__base_1a6c28d39ecaa14d475acb9ce6bfc1b4b0" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a6c28d39ecaa14d475acb9ce6bfc1b4b0" kindref="member">db_base::~db_base</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classdb__base_1a73aae0d09b138c28e70541c63e2cb498" kindref="member">shutdown</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classdb__base_1a73aae0d09b138c28e70541c63e2cb498" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a73aae0d09b138c28e70541c63e2cb498" kindref="member">db_base::shutdown</ref>()</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classdb__base_1ac181e0dee5a23fcd36e1e610965ae1b9" kindref="member">d_is_shutdown</ref>){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__base_1ac181e0dee5a23fcd36e1e610965ae1b9" kindref="member">d_is_shutdown</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>whatever<sp/>there<sp/>is<sp/>to<sp/>do<sp/>to<sp/>shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="64" refid="classdb__base_1a6c70380b8abff2d051eece9d2b208408" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a6c70380b8abff2d051eece9d2b208408" kindref="member">db_base::dbid</ref>()</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a6d639e50633c165b23e0c4770b26bec2" kindref="member">daughterboard_id</ref>(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">std::string<sp/></highlight></codeline>
<codeline lineno="70" refid="classdb__base_1aef52f371112795b933570a269da85847" refkind="member"><highlight class="normal"><ref refid="classdb__base_1aef52f371112795b933570a269da85847" kindref="member">db_base::name</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usrp__prims_8h_1ab860189f7bc6e0531912c03aa52d3dbe" kindref="member">usrp_dbid_to_string</ref>(<ref refid="classdb__base_1a6c70380b8abff2d051eece9d2b208408" kindref="member">dbid</ref>());</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">std::string<sp/></highlight></codeline>
<codeline lineno="76" refid="classdb__base_1a9cee7496d9a4d09b72a008fb5d7e6664" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a9cee7496d9a4d09b72a008fb5d7e6664" kindref="member">db_base::side_and_name</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;A:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classdb__base_1aef52f371112795b933570a269da85847" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;B:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classdb__base_1aef52f371112795b933570a269da85847" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>bypass<sp/>ADC<sp/>buffers.<sp/>Any<sp/>board<sp/>which<sp/>is<sp/>DC-coupled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>bypass<sp/>the<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classdb__base_1a159a4f97c1c6ecc966b6822174e58735" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a159a4f97c1c6ecc966b6822174e58735" kindref="member">db_base::bypass_adc_buffers</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bypass)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(d_tx)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>throw<sp/><sp/>std::runtime_error(&quot;TX<sp/>Board<sp/>has<sp/>no<sp/>adc<sp/>buffers\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref>==0)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a97fc801cbafa85040a3d39be03d27a62" kindref="member">set_adc_buffer_bypass</ref>(0,<sp/>bypass);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a97fc801cbafa85040a3d39be03d27a62" kindref="member">set_adc_buffer_bypass</ref>(1,<sp/>bypass);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a97fc801cbafa85040a3d39be03d27a62" kindref="member">set_adc_buffer_bypass</ref>(2,<sp/>bypass);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a97fc801cbafa85040a3d39be03d27a62" kindref="member">set_adc_buffer_bypass</ref>(3,<sp/>bypass);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="107" refid="classdb__base_1a13d2573892b4acea9fc0f6125aaee4f2" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a13d2573892b4acea9fc0f6125aaee4f2" kindref="member">db_base::set_atr_mask</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Auto<sp/>T/R<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a49074783b3757b6af17ddf8e8f56be6c" kindref="member">write_atr_mask</ref>(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref>,<sp/>v);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="114" refid="classdb__base_1a9722d03f078d1206539ad097c28a9562" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a9722d03f078d1206539ad097c28a9562" kindref="member">db_base::set_atr_txval</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Auto<sp/>T/R<sp/>register<sp/>value<sp/>to<sp/>be<sp/>used<sp/>when<sp/>transmitting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a504bf45d241c56ddf00ee07fc946207e" kindref="member">write_atr_txval</ref>(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref>,<sp/>v);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="121" refid="classdb__base_1aa74f9ee4316672004876d1f2c81728ce" refkind="member"><highlight class="normal"><ref refid="classdb__base_1aa74f9ee4316672004876d1f2c81728ce" kindref="member">db_base::set_atr_rxval</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Auto<sp/>T/R<sp/>register<sp/>value<sp/>to<sp/>be<sp/>used<sp/>when<sp/>receiving.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1ae5466590dd7ec5646fefbb82d92ad899" kindref="member">write_atr_rxval</ref>(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref>,<sp/>v);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="128" refid="classdb__base_1a01586c74a2cab95c3e12951402fab1a3" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a01586c74a2cab95c3e12951402fab1a3" kindref="member">db_base::set_atr_tx_delay</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Auto<sp/>T/R<sp/>delay<sp/>(in<sp/>clock<sp/>ticks)<sp/>from<sp/>when<sp/>Tx<sp/>fifo<sp/>gets<sp/>data<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>T/R<sp/>switches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a70f4070830b0db3fd0c3addb97ce966e" kindref="member">write_atr_tx_delay</ref>(v);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="136" refid="classdb__base_1aec8010d1f2412ffe33bb0f27ee6d8275" refkind="member"><highlight class="normal"><ref refid="classdb__base_1aec8010d1f2412ffe33bb0f27ee6d8275" kindref="member">db_base::set_atr_rx_delay</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Auto<sp/>T/R<sp/>delay<sp/>(in<sp/>clock<sp/>ticks)<sp/>from<sp/>when<sp/>Tx<sp/>fifo<sp/>goes<sp/>empty<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>T/R<sp/>switches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1ad9b95b1ca0e2616c1b3808892fdda1b0" kindref="member">write_atr_rx_delay</ref>(v);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classdb__base_1aa2d4002c1550d262e74def064a230e1a" refkind="member"><highlight class="normal"><ref refid="classdb__base_1aa2d4002c1550d262e74def064a230e1a" kindref="member">db_base::i_and_q_swapped</ref>()</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>True<sp/>if<sp/>this<sp/>is<sp/>a<sp/>quadrature<sp/>device<sp/>and<sp/>(for<sp/>RX)<sp/>ADC<sp/>0<sp/>is<sp/>Q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>(for<sp/>TX)<sp/>DAC<sp/>0<sp/>is<sp/>Q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="152" refid="classdb__base_1ab6a6fad01c3df159fb7124aec13489d7" refkind="member"><highlight class="normal"><ref refid="classdb__base_1ab6a6fad01c3df159fb7124aec13489d7" kindref="member">db_base::spectrum_inverted</ref>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>True<sp/>if<sp/>the<sp/>dboard<sp/>gives<sp/>an<sp/>inverted<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classdb__base_1afa9d1b54d69312317258723a2ee1a1e7" refkind="member"><highlight class="normal"><ref refid="classdb__base_1afa9d1b54d69312317258723a2ee1a1e7" kindref="member">db_base::set_enable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>tx<sp/>daughterboards,<sp/>this<sp/>controls<sp/>the<sp/>transmitter<sp/>enable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>is<sp/>nop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classdb__base_1aa636457dfe89f1f0dca5fa06b67fdb58" refkind="member"><highlight class="normal"><ref refid="classdb__base_1aa636457dfe89f1f0dca5fa06b67fdb58" kindref="member">db_base::set_auto_tr</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>automatic<sp/>Transmit/Receive<sp/>switching<sp/>(ATR).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>be<sp/>overridden<sp/>in<sp/>subclasses<sp/>that<sp/>care.<sp/><sp/>This<sp/>will<sp/>typically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>atr_mask,<sp/>txval<sp/>and<sp/>rxval.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classdb__base_1a3d8eb19a95b9ca4970c56f1a699e85bf" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a3d8eb19a95b9ca4970c56f1a699e85bf" kindref="member">db_base::set_lo_offset</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>how<sp/>much<sp/>LO<sp/>is<sp/>offset<sp/>from<sp/>requested<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="classdb__base_1a0665a615c2eb4236814825c89dd024e0" kindref="member">d_lo_offset</ref><sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classdb__base_1aecc92b603e94509aa04f12aec563ea17" refkind="member"><highlight class="normal"><ref refid="classdb__base_1aecc92b603e94509aa04f12aec563ea17" kindref="member">db_base::select_rx_antenna</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_antenna)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Specify<sp/>which<sp/>antenna<sp/>port<sp/>to<sp/>use<sp/>for<sp/>reception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>be<sp/>overriden<sp/>by<sp/>daughterboards<sp/>that<sp/>care.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>which_antenna<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classdb__base_1ab6aba3bd757102bf14fba4e98fb17f0d" refkind="member"><highlight class="normal"><ref refid="classdb__base_1aecc92b603e94509aa04f12aec563ea17" kindref="member">db_base::select_rx_antenna</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;which_antenna)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Specify<sp/>which<sp/>antenna<sp/>port<sp/>to<sp/>use<sp/>for<sp/>reception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>be<sp/>overriden<sp/>by<sp/>daughterboards<sp/>that<sp/>care.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>which_antenna<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reference<sp/>Clock<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Control<sp/>whether<sp/>a<sp/>reference<sp/>clock<sp/>is<sp/>sent<sp/>to<sp/>the<sp/>daughterboards,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>what<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bit<sp/>7<sp/><sp/>--<sp/>1<sp/>turns<sp/>on<sp/>refclk,<sp/>0<sp/>allows<sp/>IO<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bits<sp/>6:0<sp/>Divider<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="classdb__base_1a5f8f3e592b85cb3151b5d2c81802f6ed" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a5f8f3e592b85cb3151b5d2c81802f6ed" kindref="member">db_base::_refclk_freq</ref>()<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a244d4aa01bb6a054cd5bd0998ce2a09a" kindref="member">fpga_master_clock_freq</ref>()<sp/>/<sp/><ref refid="classdb__base_1acd58b612941f45fabab13438463c327b" kindref="member">_refclk_divisor</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="222" refid="classdb__base_1a7a076785965c3252a663b762b4a25d73" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a7a076785965c3252a663b762b4a25d73" kindref="member">db_base::_enable_refclk</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="db__flexrf_8cc_1a483572219a71ba43ec8932b992fdd54e" kindref="member">CLOCK_OUT</ref><sp/>=<sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clock<sp/>is<sp/>on<sp/>lowest<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>REFCLK_ENABLE<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>REFCLK_DIVISOR_MASK<sp/>=<sp/>0x7f;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enable)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1ac540c04b719f1ce30426ecb2214107ef" kindref="member">_write_oe</ref>(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref>,<sp/>CLOCK_OUT,<sp/>CLOCK_OUT);<sp/></highlight><highlight class="comment">//<sp/>output<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a80a4f8800742b6b06ec6f1908a448fc8" kindref="member">write_refclk</ref>(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref>,<sp/>(<ref refid="classdb__base_1acd58b612941f45fabab13438463c327b" kindref="member">_refclk_divisor</ref>()<sp/>&amp;<sp/>REFCLK_DIVISOR_MASK)<sp/>|<sp/>REFCLK_ENABLE);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdb__base_1a67eafbae0359d2f082f73914d40abc82" kindref="member">usrp</ref>()-&gt;<ref refid="classusrp__basic_1a80a4f8800742b6b06ec6f1908a448fc8" kindref="member">write_refclk</ref>(<ref refid="classdb__base_1a0d3eb10d9abb8b863dcee0fcb8183d7a" kindref="member">d_which</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="238" refid="classdb__base_1acd58b612941f45fabab13438463c327b" refkind="member"><highlight class="normal"><ref refid="classdb__base_1acd58b612941f45fabab13438463c327b" kindref="member">db_base::_refclk_divisor</ref>()</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>value<sp/>to<sp/>stick<sp/>in<sp/>REFCLK_DIVISOR<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;_refclk_divisor()<sp/>called<sp/>from<sp/>base<sp/>class\n&quot;</highlight><highlight class="normal">);;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classdb__base_1a7adcd5e0883f838cc6cd2bc9dda1ef87" refkind="member"><highlight class="normal"><ref refid="classdb__base_1a7adcd5e0883f838cc6cd2bc9dda1ef87" kindref="member">db_base::set_bw</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bw)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>baseband<sp/>bandwidth<sp/>(board<sp/>specific)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>be<sp/>overriden<sp/>by<sp/>boards<sp/>that<sp/>implement<sp/>variable<sp/>IF<sp/>filtering<sp/>(e.g.,<sp/>DBSRX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="db__base_8cc_1af7425840ce46878ac3269ea46b1b7f94" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="db__base_8cc_1af7425840ce46878ac3269ea46b1b7f94" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/><ref refid="classdb__base" kindref="compound">db_base</ref><sp/>&amp;x)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>x.<ref refid="classdb__base_1a9cee7496d9a4d09b72a008fb5d7e6664" kindref="member">side_and_name</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/me/gnuradio-3.4.0/usrp/host/lib/db_base.cc"/>
  </compounddef>
</doxygen>
