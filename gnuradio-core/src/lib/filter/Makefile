# Makefile.in generated by automake 1.15 from Makefile.am.
# gnuradio-core/src/lib/filter/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Copyright 2001,2002,2004,2005,2006,2007,2008,2009,2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

# -*- Makefile -*-
#
# Copyright 2004,2006,2007,2008,2009,2010 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

# -*- Makefile -*-
#
# Copyright 2009 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

# -*- Makefile -*-
#
# Copyright 2009 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/gnuradio
pkgincludedir = $(includedir)/gnuradio
pkglibdir = $(libdir)/gnuradio
pkglibexecdir = $(libexecdir)/gnuradio
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
subdir = gnuradio-core/src/lib/filter
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/acx_cblas.m4 \
	$(top_srcdir)/config/acx_pthread.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/cppunit.m4 \
	$(top_srcdir)/config/gr_check_createfilemapping.m4 \
	$(top_srcdir)/config/gr_check_memalign.m4 \
	$(top_srcdir)/config/gr_check_shm_open.m4 \
	$(top_srcdir)/config/gr_doxygen.m4 \
	$(top_srcdir)/config/gr_git.m4 \
	$(top_srcdir)/config/gr_gprof.m4 \
	$(top_srcdir)/config/gr_guile.m4 \
	$(top_srcdir)/config/gr_lib64.m4 \
	$(top_srcdir)/config/gr_libgnuradio_core_extra_ldflags.m4 \
	$(top_srcdir)/config/gr_no_undefined.m4 \
	$(top_srcdir)/config/gr_pwin32.m4 \
	$(top_srcdir)/config/gr_python.m4 \
	$(top_srcdir)/config/gr_qwt.m4 \
	$(top_srcdir)/config/gr_scripting.m4 \
	$(top_srcdir)/config/gr_set_md_cpu.m4 \
	$(top_srcdir)/config/gr_swig.m4 \
	$(top_srcdir)/config/gr_sysv_shm.m4 \
	$(top_srcdir)/config/gr_version.m4 \
	$(top_srcdir)/config/gr_vmcircbuf.m4 \
	$(top_srcdir)/config/grc_build.m4 \
	$(top_srcdir)/config/grc_docs.m4 \
	$(top_srcdir)/config/grc_gcell.m4 \
	$(top_srcdir)/config/grc_gnuradio_core.m4 \
	$(top_srcdir)/config/grc_gnuradio_examples.m4 \
	$(top_srcdir)/config/grc_gr_atsc.m4 \
	$(top_srcdir)/config/grc_gr_audio.m4 \
	$(top_srcdir)/config/grc_gr_comedi.m4 \
	$(top_srcdir)/config/grc_gr_cvsd_vocoder.m4 \
	$(top_srcdir)/config/grc_gr_gcell.m4 \
	$(top_srcdir)/config/grc_gr_gpio.m4 \
	$(top_srcdir)/config/grc_gr_gsm_fr_vocoder.m4 \
	$(top_srcdir)/config/grc_gr_msdd6000.m4 \
	$(top_srcdir)/config/grc_gr_noaa.m4 \
	$(top_srcdir)/config/grc_gr_pager.m4 \
	$(top_srcdir)/config/grc_gr_qtgui.m4 \
	$(top_srcdir)/config/grc_gr_radar_mono.m4 \
	$(top_srcdir)/config/grc_gr_radio_astronomy.m4 \
	$(top_srcdir)/config/grc_gr_sounder.m4 \
	$(top_srcdir)/config/grc_gr_trellis.m4 \
	$(top_srcdir)/config/grc_gr_uhd.m4 \
	$(top_srcdir)/config/grc_gr_usrp.m4 \
	$(top_srcdir)/config/grc_gr_usrp2.m4 \
	$(top_srcdir)/config/grc_gr_utils.m4 \
	$(top_srcdir)/config/grc_gr_video_sdl.m4 \
	$(top_srcdir)/config/grc_gr_wxgui.m4 \
	$(top_srcdir)/config/grc_grc.m4 \
	$(top_srcdir)/config/grc_gruel.m4 \
	$(top_srcdir)/config/grc_usrp.m4 \
	$(top_srcdir)/config/grc_usrp2.m4 \
	$(top_srcdir)/config/grc_volk.m4 $(top_srcdir)/config/lf_cc.m4 \
	$(top_srcdir)/config/lf_cxx.m4 \
	$(top_srcdir)/config/lf_warnings.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/macosx_audiounit.m4 \
	$(top_srcdir)/config/mkstemp.m4 \
	$(top_srcdir)/config/onceonly.m4 $(top_srcdir)/config/pkg.m4 \
	$(top_srcdir)/config/sdl.m4 \
	$(top_srcdir)/config/usrp_fusb_tech.m4 \
	$(top_srcdir)/config/usrp_libusb.m4 \
	$(top_srcdir)/config/usrp_sdcc.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(grinclude_HEADERS) \
	$(noinst_HEADERS) $(swiginclude_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libfilter_qa_la_LIBADD =
am__libfilter_qa_la_SOURCES_DIST = qa_filter.cc qa_gr_fir_ccf.cc \
	qa_gr_fir_fcc.cc qa_gr_fir_fff.cc qa_gr_fir_ccc.cc \
	qa_gr_fir_scc.cc qa_gr_rotator.cc \
	qa_gri_mmse_fir_interpolator.cc \
	qa_gri_mmse_fir_interpolator_cc.cc \
	qa_gri_fir_filter_with_buffer_ccf.cc \
	qa_gri_fir_filter_with_buffer_ccc.cc \
	qa_gri_fir_filter_with_buffer_fcc.cc \
	qa_gri_fir_filter_with_buffer_fff.cc \
	qa_gri_fir_filter_with_buffer_fsf.cc \
	qa_gri_fir_filter_with_buffer_scc.cc qa_dotprod_armv7_a.cc \
	qa_dotprod_generic.cc qa_dotprod_powerpc.cc qa_dotprod_x86.cc \
	qa_float_dotprod_x86.cc qa_complex_dotprod_x86.cc \
	qa_ccomplex_dotprod_x86.cc
am__objects_1 = qa_filter.lo qa_gr_fir_ccf.lo qa_gr_fir_fcc.lo \
	qa_gr_fir_fff.lo qa_gr_fir_ccc.lo qa_gr_fir_scc.lo \
	qa_gr_rotator.lo qa_gri_mmse_fir_interpolator.lo \
	qa_gri_mmse_fir_interpolator_cc.lo \
	qa_gri_fir_filter_with_buffer_ccf.lo \
	qa_gri_fir_filter_with_buffer_ccc.lo \
	qa_gri_fir_filter_with_buffer_fcc.lo \
	qa_gri_fir_filter_with_buffer_fff.lo \
	qa_gri_fir_filter_with_buffer_fsf.lo \
	qa_gri_fir_filter_with_buffer_scc.lo
am__objects_2 = qa_dotprod_armv7_a.lo
am__objects_3 = qa_dotprod_generic.lo
am__objects_4 = qa_dotprod_powerpc.lo
am__objects_5 = qa_dotprod_x86.lo qa_float_dotprod_x86.lo \
	qa_complex_dotprod_x86.lo qa_ccomplex_dotprod_x86.lo
am_libfilter_qa_la_OBJECTS = $(am__objects_1) \
	$(am__objects_5)
#am_libfilter_qa_la_OBJECTS = $(am__objects_1) \
#	$(am__objects_4)
#am_libfilter_qa_la_OBJECTS =  \
#	$(am__objects_1) \
#	$(am__objects_3)
#am_libfilter_qa_la_OBJECTS = $(am__objects_1) \
#	$(am__objects_2)
libfilter_qa_la_OBJECTS = $(am_libfilter_qa_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libfilter_la_LIBADD =
am__libfilter_la_SOURCES_DIST = gr_fir_ccc.cc gr_fir_ccc_generic.cc \
	gr_fir_ccf.cc gr_fir_ccf_generic.cc gr_fir_fcc.cc \
	gr_fir_fcc_generic.cc gr_fir_fff.cc gr_fir_fff_generic.cc \
	gr_fir_filter_ccc.cc gr_fir_filter_ccf.cc gr_fir_filter_fcc.cc \
	gr_fir_filter_fff.cc gr_fir_filter_fsf.cc gr_fir_filter_scc.cc \
	gr_fir_fsf.cc gr_fir_fsf_generic.cc gr_fir_scc.cc \
	gr_fir_scc_generic.cc gr_fir_sysconfig.cc \
	gr_fir_sysconfig_generic.cc gr_fir_util.cc \
	gr_freq_xlating_fir_filter_ccc.cc \
	gr_freq_xlating_fir_filter_ccf.cc \
	gr_freq_xlating_fir_filter_fcc.cc \
	gr_freq_xlating_fir_filter_fcf.cc \
	gr_freq_xlating_fir_filter_scc.cc \
	gr_freq_xlating_fir_filter_scf.cc gr_interp_fir_filter_ccc.cc \
	gr_interp_fir_filter_ccf.cc gr_interp_fir_filter_fcc.cc \
	gr_interp_fir_filter_fff.cc gr_interp_fir_filter_fsf.cc \
	gr_interp_fir_filter_scc.cc gr_rational_resampler_base_ccc.cc \
	gr_rational_resampler_base_ccf.cc \
	gr_rational_resampler_base_fcc.cc \
	gr_rational_resampler_base_fff.cc \
	gr_rational_resampler_base_fsf.cc \
	gr_rational_resampler_base_scc.cc \
	gri_fir_filter_with_buffer_ccc.cc \
	gri_fir_filter_with_buffer_ccf.cc \
	gri_fir_filter_with_buffer_fcc.cc \
	gri_fir_filter_with_buffer_fff.cc \
	gri_fir_filter_with_buffer_fsf.cc \
	gri_fir_filter_with_buffer_scc.cc gr_adaptive_fir_ccf.cc \
	gr_cma_equalizer_cc.cc gri_fft_filter_fff_generic.cc \
	gri_fft_filter_ccc_generic.cc gr_fft_filter_ccc.cc \
	gr_fft_filter_fff.cc gr_goertzel_fc.cc gr_filter_delay_fc.cc \
	gr_fractional_interpolator_ff.cc \
	gr_fractional_interpolator_cc.cc gr_hilbert_fc.cc \
	gr_iir_filter_ffd.cc gr_sincos.c \
	gr_single_pole_iir_filter_ff.cc \
	gr_single_pole_iir_filter_cc.cc gri_goertzel.cc \
	gri_mmse_fir_interpolator.cc gri_mmse_fir_interpolator_cc.cc \
	complex_dotprod_generic.cc ccomplex_dotprod_generic.cc \
	float_dotprod_generic.c short_dotprod_generic.c \
	gr_pfb_channelizer_ccf.cc gr_pfb_synthesis_filterbank_ccf.cc \
	gr_pfb_decimator_ccf.cc gr_pfb_interpolator_ccf.cc \
	gr_pfb_arb_resampler_ccf.cc gr_pfb_clock_sync_ccf.cc \
	gr_pfb_clock_sync_fff.cc gr_dc_blocker_cc.cc \
	gr_dc_blocker_ff.cc sysconfig_armv7_a.cc \
	gr_fir_sysconfig_armv7_a.cc gr_cpu_armv7_a.cc \
	gr_fir_fff_armv7_a.cc dotprod_fff_armv7_a.c \
	gr_fir_ccf_armv7_a.cc dotprod_ccf_armv7_a.c \
	sysconfig_generic.cc sysconfig_powerpc.cc \
	gr_fir_sysconfig_powerpc.cc gr_cpu_powerpc.cc \
	gr_fir_fff_altivec.cc gr_altivec.c dotprod_fff_altivec.c \
	float_dotprod_sse.S float_dotprod_3dnow.S \
	complex_dotprod_3dnowext.S complex_dotprod_3dnow.S \
	complex_dotprod_sse.S ccomplex_dotprod_3dnowext.S \
	ccomplex_dotprod_3dnow.S ccomplex_dotprod_sse.S \
	fcomplex_dotprod_3dnow.S fcomplex_dotprod_sse.S \
	short_dotprod_mmx.S sysconfig_x86.cc gr_fir_sysconfig_x86.cc \
	gr_cpu_x86.cc gr_fir_ccc_simd.cc gr_fir_ccc_x86.cc \
	gr_fir_fff_simd.cc gr_fir_fff_x86.cc gr_fir_fsf_simd.cc \
	gr_fir_fsf_x86.cc gr_fir_scc_simd.cc gr_fir_scc_x86.cc \
	gr_fir_fcc_simd.cc gr_fir_fcc_x86.cc gr_fir_ccf_simd.cc \
	gr_fir_ccf_x86.cc sse_debug.c float_dotprod_sse64.S \
	float_dotprod_3dnow64.S complex_dotprod_3dnowext64.S \
	complex_dotprod_3dnow64.S complex_dotprod_sse64.S \
	ccomplex_dotprod_3dnowext64.S ccomplex_dotprod_3dnow64.S \
	ccomplex_dotprod_sse64.S fcomplex_dotprod_3dnow64.S \
	fcomplex_dotprod_sse64.S short_dotprod_mmx64.S
am__objects_6 = gr_fir_ccc.lo gr_fir_ccc_generic.lo gr_fir_ccf.lo \
	gr_fir_ccf_generic.lo gr_fir_fcc.lo gr_fir_fcc_generic.lo \
	gr_fir_fff.lo gr_fir_fff_generic.lo gr_fir_filter_ccc.lo \
	gr_fir_filter_ccf.lo gr_fir_filter_fcc.lo gr_fir_filter_fff.lo \
	gr_fir_filter_fsf.lo gr_fir_filter_scc.lo gr_fir_fsf.lo \
	gr_fir_fsf_generic.lo gr_fir_scc.lo gr_fir_scc_generic.lo \
	gr_fir_sysconfig.lo gr_fir_sysconfig_generic.lo gr_fir_util.lo \
	gr_freq_xlating_fir_filter_ccc.lo \
	gr_freq_xlating_fir_filter_ccf.lo \
	gr_freq_xlating_fir_filter_fcc.lo \
	gr_freq_xlating_fir_filter_fcf.lo \
	gr_freq_xlating_fir_filter_scc.lo \
	gr_freq_xlating_fir_filter_scf.lo gr_interp_fir_filter_ccc.lo \
	gr_interp_fir_filter_ccf.lo gr_interp_fir_filter_fcc.lo \
	gr_interp_fir_filter_fff.lo gr_interp_fir_filter_fsf.lo \
	gr_interp_fir_filter_scc.lo gr_rational_resampler_base_ccc.lo \
	gr_rational_resampler_base_ccf.lo \
	gr_rational_resampler_base_fcc.lo \
	gr_rational_resampler_base_fff.lo \
	gr_rational_resampler_base_fsf.lo \
	gr_rational_resampler_base_scc.lo \
	gri_fir_filter_with_buffer_ccc.lo \
	gri_fir_filter_with_buffer_ccf.lo \
	gri_fir_filter_with_buffer_fcc.lo \
	gri_fir_filter_with_buffer_fff.lo \
	gri_fir_filter_with_buffer_fsf.lo \
	gri_fir_filter_with_buffer_scc.lo
am__objects_7 = $(am__objects_6) gr_adaptive_fir_ccf.lo \
	gr_cma_equalizer_cc.lo gri_fft_filter_fff_generic.lo \
	gri_fft_filter_ccc_generic.lo gr_fft_filter_ccc.lo \
	gr_fft_filter_fff.lo gr_goertzel_fc.lo gr_filter_delay_fc.lo \
	gr_fractional_interpolator_ff.lo \
	gr_fractional_interpolator_cc.lo gr_hilbert_fc.lo \
	gr_iir_filter_ffd.lo gr_sincos.lo \
	gr_single_pole_iir_filter_ff.lo \
	gr_single_pole_iir_filter_cc.lo gri_goertzel.lo \
	gri_mmse_fir_interpolator.lo gri_mmse_fir_interpolator_cc.lo \
	complex_dotprod_generic.lo ccomplex_dotprod_generic.lo \
	float_dotprod_generic.lo short_dotprod_generic.lo \
	gr_pfb_channelizer_ccf.lo gr_pfb_synthesis_filterbank_ccf.lo \
	gr_pfb_decimator_ccf.lo gr_pfb_interpolator_ccf.lo \
	gr_pfb_arb_resampler_ccf.lo gr_pfb_clock_sync_ccf.lo \
	gr_pfb_clock_sync_fff.lo gr_dc_blocker_cc.lo \
	gr_dc_blocker_ff.lo
am__objects_8 = sysconfig_armv7_a.lo gr_fir_sysconfig_armv7_a.lo \
	gr_cpu_armv7_a.lo gr_fir_fff_armv7_a.lo dotprod_fff_armv7_a.lo \
	gr_fir_ccf_armv7_a.lo dotprod_ccf_armv7_a.lo
am__objects_9 = sysconfig_generic.lo
am__objects_10 = sysconfig_powerpc.lo gr_fir_sysconfig_powerpc.lo \
	gr_cpu_powerpc.lo gr_fir_fff_altivec.lo gr_altivec.lo \
	dotprod_fff_altivec.lo
am__objects_11 = float_dotprod_sse.lo float_dotprod_3dnow.lo \
	complex_dotprod_3dnowext.lo complex_dotprod_3dnow.lo \
	complex_dotprod_sse.lo ccomplex_dotprod_3dnowext.lo \
	ccomplex_dotprod_3dnow.lo ccomplex_dotprod_sse.lo \
	fcomplex_dotprod_3dnow.lo fcomplex_dotprod_sse.lo \
	short_dotprod_mmx.lo
am__objects_12 = sysconfig_x86.lo gr_fir_sysconfig_x86.lo \
	gr_cpu_x86.lo gr_fir_ccc_simd.lo gr_fir_ccc_x86.lo \
	gr_fir_fff_simd.lo gr_fir_fff_x86.lo gr_fir_fsf_simd.lo \
	gr_fir_fsf_x86.lo gr_fir_scc_simd.lo gr_fir_scc_x86.lo \
	gr_fir_fcc_simd.lo gr_fir_fcc_x86.lo gr_fir_ccf_simd.lo \
	gr_fir_ccf_x86.lo sse_debug.lo
am__objects_13 = float_dotprod_sse64.lo float_dotprod_3dnow64.lo \
	complex_dotprod_3dnowext64.lo complex_dotprod_3dnow64.lo \
	complex_dotprod_sse64.lo ccomplex_dotprod_3dnowext64.lo \
	ccomplex_dotprod_3dnow64.lo ccomplex_dotprod_sse64.lo \
	fcomplex_dotprod_3dnow64.lo fcomplex_dotprod_sse64.lo \
	short_dotprod_mmx64.lo
#am_libfilter_la_OBJECTS = $(am__objects_7) \
#	$(am__objects_11) \
#	$(am__objects_12)
am_libfilter_la_OBJECTS = $(am__objects_7) \
	$(am__objects_13) \
	$(am__objects_12)
#am_libfilter_la_OBJECTS = $(am__objects_7) \
#	$(am__objects_10)
#am_libfilter_la_OBJECTS =  \
#	$(am__objects_7) \
#	$(am__objects_9)
#am_libfilter_la_OBJECTS = $(am__objects_7) \
#	$(am__objects_8)
libfilter_la_OBJECTS = $(am_libfilter_la_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CCASFLAGS) $(CCASFLAGS)
AM_V_CPPAS = $(am__v_CPPAS_$(V))
am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))
am__v_CPPAS_0 = @echo "  CPPAS   " $@;
am__v_CPPAS_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libfilter_qa_la_SOURCES) $(libfilter_la_SOURCES) \
	$(EXTRA_libfilter_la_SOURCES)
DIST_SOURCES = $(am__libfilter_qa_la_SOURCES_DIST) \
	$(am__libfilter_la_SOURCES_DIST) $(EXTRA_libfilter_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(grincludedir)" \
	"$(DESTDIR)$(swigincludedir)"
HEADERS = $(grinclude_HEADERS) $(noinst_HEADERS) \
	$(swiginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.gen $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.common $(top_srcdir)/Makefile.gen.gen \
	$(top_srcdir)/Makefile.par.gen $(top_srcdir)/depcomp README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/me/gnuradio-3.4.0/missing aclocal-1.15
ALLOCA = 
ALSA_CFLAGS = -I/usr/include/alsa
ALSA_CPPFLAGS =  -I/usr/include/alsa
ALSA_INCLUDEDIR = /usr/include
ALSA_LIBS = -lasound -lm -ldl -lpthread -lrt
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/me/gnuradio-3.4.0/missing autoconf
AUTOHEADER = ${SHELL} /home/me/gnuradio-3.4.0/missing autoheader

# Make rebuilds less verbose with stuff we can safely ignore
# about GNU make only extensions.
AUTOMAKE = ${SHELL} /home/me/gnuradio-3.4.0/missing automake-1.15 -Wno-portability -Wnone
AWK = gawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_CXXFLAGS = -pthread
BOOST_DATE_TIME_LIB = -lboost_date_time
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BUILD_DATE = Tue, 13 Mar 2018 18:32:00
CBLAS_LIBS = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CFLAGS =  -pthread
COMEDI_CFLAGS = 
COMEDI_CPPFLAGS = 
COMEDI_INCLUDEDIR = 
COMEDI_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG = 
CPPUNIT_CPPFLAGS = 
CPPUNIT_INCLUDEDIR = /usr/include
CPPUNIT_INCLUDES = 
CPPUNIT_LIBS = -lcppunit -ldl
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -pthread
CXX_FOR_BUILD = g++
CYGPATH_W = echo
DEFINES = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOCVER = 3.4.0
DOT = 
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FFTW3F_CFLAGS = 
FFTW3F_CPPFLAGS = 
FFTW3F_INCLUDEDIR = /usr/include
FFTW3F_LIBS = -lfftw3f -lm
FGREP = /bin/grep -F
FUSB_TECH = linux
GIT = /usr/bin/git
GIT_COMMIT = 
GIT_DESCRIBE = 
GIT_SEQNO = 
GIT_TAG = 
GREP = /bin/grep
GR_ARCH_BIGENDIAN = 0
GR_HAVE_ARPA_INET = 1
GR_HAVE_BYTESWAP = 1
GR_HAVE_NETINET_IN = 1
GR_PREFSDIR = /usr/local/etc/gnuradio/conf.d
GSL_CFLAGS = 
GSL_CPPFLAGS = 
GSL_INCLUDEDIR = 
GSL_LIBS = 
GUILE = 
GUILE_CFLAGS = 
GUILE_CONFIG = 
GUILE_LIBS = Wl,-Bsymbolic-functions -lguile -lgmp -lcrypt
GUILE_PKDATADIR = 
GUILE_PKLIBDIR = 
HAVE_DOT = NO
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IPC_LIBS = -lltdl 
JACK_CFLAGS = 
JACK_CPPFLAGS = 
JACK_INCLUDEDIR = 
JACK_LIBS = 
LD = /usr/bin/ld
LDFLAGS = -lboost_system -lboost_filesystem
LIBGNURADIO_CORE_EXTRA_LDFLAGS = 
LIBOBJS = 
LIBS = -lltdl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUSB_PKG_CONFIG_NAME = libusb
LIBVER = 3.4.0
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/me/gnuradio-3.4.0/missing makeinfo
MANIFEST_TOOL = :
MD_CPU = x86
MD_SUBCPU = x86_64
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
NO_UNDEFINED = 
OBJDUMP = objdump
OBJEXT = o
OSS_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = gnuradio
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PORTAUDIO_CFLAGS = 
PORTAUDIO_CPPFLAGS = 
PORTAUDIO_INCLUDEDIR = 
PORTAUDIO_LIBS = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python
PYTHON_CPPFLAGS = -I/usr/include/python2.7
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_LDFLAGS = 
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
QMAKE_INCLUDES = 
QTCORE_CFLAGS = 
QTCORE_CPPFLAGS = 
QTCORE_INCLUDEDIR = 
QTCORE_LIBS = 
QTGUI_CFLAGS = 
QTGUI_CPPFLAGS = 
QTGUI_INCLUDEDIR = 
QTGUI_LIBS = 
QTOPENGL_CFLAGS = 
QTOPENGL_CPPFLAGS = 
QTOPENGL_INCLUDEDIR = 
QTOPENGL_LIBS = 
QT_INCLUDES = 
QT_LIBS = 
QT_MOC_EXEC = 
QT_UIC_EXEC = 
QWT_CFLAGS = 
QWT_LIBS = 
RANLIB = ranlib
RELEASE = 3.4.0
RM_PROG = /bin/rm
SDL_CFLAGS = 
SDL_CONFIG = 
SDL_CPPFLAGS = 
SDL_INCLUDEDIR = 
SDL_LIBS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHM_OPEN_LIBS = -lrt -lltdl 
SPU_GCC_PROG = 
STRIP = strip
SWIG = /usr/bin/swig -c++
SWIG_GUILE_CPPFLAGS = 
SWIG_GUILE_LIB = 
SWIG_GUILE_OPT = 
SWIG_PYTHON_CPPFLAGS = 
SWIG_PYTHON_LIB = 
SWIG_PYTHON_OPT = 
SYSCONFDIR = /usr/local/etc
UHD_CFLAGS = 
UHD_CPPFLAGS = 
UHD_INCLUDEDIR = 
UHD_LIBS = 
USB_CFLAGS = 
USB_CPPFLAGS = 
USB_INCLUDEDIR = /usr/include
USB_INCLUDES = -I/usr/include
USB_LIBS = -lusb
USE_LIBUSB1 = 0
USRP2_INCLUDES = -I${abs_top_srcdir}/usrp2/host/include 		-I${abs_top_srcdir}/usrp2/firmware/include
USRP2_LA = ${abs_top_builddir}/usrp2/host/lib/libusrp2.la
VERSION = 3.4.0
WINAUDIO_LIBS = -lwinmm
XAS = asx8051 -plosgff
XCC = sdcc -mmcs51 --no-xinit-opt
XDG_UTILS = true
XMLTO = 
abs_builddir = /home/me/gnuradio-3.4.0/gnuradio-core/src/lib/filter
abs_srcdir = /home/me/gnuradio-3.4.0/gnuradio-core/src/lib/filter
abs_top_builddir = /home/me/gnuradio-3.4.0
abs_top_srcdir = /home/me/gnuradio-3.4.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
autoconf_default_CFLAGS = -g -O2
autoconf_default_CXXFLAGS = -g -O2
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_dirs = config gruel usrp
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
docs_INCLUDEDIR = 
docs_INCLUDES = 
docs_LA = 
docs_LDFLAG = 
docs_LIBDIRPATH = 
dvidir = ${docdir}
enable_dot = no
enable_html_docs = YES
enable_latex_docs = NO
enable_xml_docs = YES
exec_prefix = ${prefix}
gcell_INCLUDEDIR = 
gcell_INCLUDES = -I${abs_top_srcdir}/gcell/include
gcell_LA = ${abs_top_builddir}/gcell/lib/libgcell.la
gcell_LDFLAG = 
gcell_LIBDIRPATH = 
gcell_spu_INCLUDES = -I${abs_top_srcdir}/gcell/include
gcell_spu_LA = ${abs_top_builddir}/gcell/lib/spu/libgcell_spu.a
generate_docs = docs
gnuradio_core_I = 
gnuradio_core_INCLUDEDIR = 
gnuradio_core_INCLUDES = -I${abs_top_srcdir}/gnuradio-core/src/lib/runtime -I${abs_top_srcdir}/gnuradio-core/src/lib/general -I${abs_top_builddir}/gnuradio-core/src/lib/general -I${abs_top_srcdir}/gnuradio-core/src/lib/gengen -I${abs_top_builddir}/gnuradio-core/src/lib/gengen -I${abs_top_srcdir}/gnuradio-core/src/lib/filter -I${abs_top_builddir}/gnuradio-core/src/lib/filter -I${abs_top_srcdir}/gnuradio-core/src/lib/missing -I${abs_top_srcdir}/gnuradio-core/src/lib/reed-solomon -I${abs_top_srcdir}/gnuradio-core/src/lib/viterbi -I${abs_top_srcdir}/gnuradio-core/src/lib/io -I${abs_top_srcdir}/gnuradio-core/src/lib/g72x -I${abs_top_srcdir}/gnuradio-core/src/lib/swig -I${abs_top_srcdir}/gnuradio-core/src/lib/hier -I${abs_top_builddir}/gnuradio-core/src/lib/swig
gnuradio_core_LA = ${abs_top_builddir}/gnuradio-core/src/lib/libgnuradio-core.la
gnuradio_core_LDFLAG = 
gnuradio_core_LIBDIRPATH = ${abs_top_builddir}/gnuradio-core/src/lib:${abs_top_builddir}/gnuradio-core/src/lib/.libs
gnuradio_core_PYDIRPATH = ${abs_top_srcdir}/gnuradio-core/src/python
gnuradio_core_SWIGDIRPATH = ${abs_top_builddir}/gnuradio-core/src/lib/swig:${abs_top_builddir}/gnuradio-core/src/lib/swig/.libs:${abs_top_srcdir}/gnuradio-core/src/lib/swig
gnuradio_examples_INCLUDEDIR = 
gnuradio_examples_INCLUDES = 
gnuradio_examples_LA = 
gnuradio_examples_LDFLAG = 
gnuradio_examples_LIBDIRPATH = 
gr_atsc_INCLUDEDIR = 
gr_atsc_INCLUDES = 
gr_atsc_LA = 
gr_atsc_LDFLAG = 
gr_atsc_LIBDIRPATH = 
gr_audio_INCLUDEDIR = 
gr_audio_INCLUDES = 
gr_audio_LA = 
gr_audio_LDFLAG = 
gr_audio_LIBDIRPATH = 
gr_comedi_INCLUDEDIR = 
gr_comedi_INCLUDES = 
gr_comedi_LA = 
gr_comedi_LDFLAG = 
gr_comedi_LIBDIRPATH = 
gr_cvsd_vocoder_INCLUDEDIR = 
gr_cvsd_vocoder_INCLUDES = 
gr_cvsd_vocoder_LA = 
gr_cvsd_vocoder_LDFLAG = 
gr_cvsd_vocoder_LIBDIRPATH = 
gr_gcell_INCLUDEDIR = 
gr_gcell_INCLUDES = 
gr_gcell_LA = 
gr_gcell_LDFLAG = 
gr_gcell_LIBDIRPATH = 
gr_gpio_INCLUDEDIR = 
gr_gpio_INCLUDES = 
gr_gpio_LA = 
gr_gpio_LDFLAG = 
gr_gpio_LIBDIRPATH = 
gr_gsm_fr_vocoder_INCLUDEDIR = 
gr_gsm_fr_vocoder_INCLUDES = 
gr_gsm_fr_vocoder_LA = 
gr_gsm_fr_vocoder_LDFLAG = 
gr_gsm_fr_vocoder_LIBDIRPATH = 
gr_libdir_suffix = 64
gr_msdd6000_INCLUDEDIR = 
gr_msdd6000_INCLUDES = 
gr_msdd6000_LA = 
gr_msdd6000_LDFLAG = 
gr_msdd6000_LIBDIRPATH = 
gr_noaa_INCLUDEDIR = 
gr_noaa_INCLUDES = 
gr_noaa_LA = 
gr_noaa_LDFLAG = 
gr_noaa_LIBDIRPATH = 
gr_pager_INCLUDEDIR = 
gr_pager_INCLUDES = 
gr_pager_LA = 
gr_pager_LDFLAG = 
gr_pager_LIBDIRPATH = 
gr_qtgui_INCLUDEDIR = 
gr_qtgui_INCLUDES = 
gr_qtgui_LA = 
gr_qtgui_LDFLAG = 
gr_qtgui_LIBDIRPATH = 
gr_radar_mono_INCLUDEDIR = 
gr_radar_mono_INCLUDES = 
gr_radar_mono_LA = 
gr_radar_mono_LDFLAG = 
gr_radar_mono_LIBDIRPATH = 
gr_radio_astronomy_INCLUDEDIR = 
gr_radio_astronomy_INCLUDES = 
gr_radio_astronomy_LA = 
gr_radio_astronomy_LDFLAG = 
gr_radio_astronomy_LIBDIRPATH = 
gr_sounder_INCLUDEDIR = 
gr_sounder_INCLUDES = 
gr_sounder_LA = 
gr_sounder_LDFLAG = 
gr_sounder_LIBDIRPATH = 
gr_trellis_INCLUDEDIR = 
gr_trellis_INCLUDES = 
gr_trellis_LA = 
gr_trellis_LDFLAG = 
gr_trellis_LIBDIRPATH = 
gr_uhd_INCLUDEDIR = 
gr_uhd_INCLUDES = 
gr_uhd_LA = 
gr_uhd_LDFLAG = 
gr_uhd_LIBDIRPATH = 
gr_usrp2_INCLUDEDIR = 
gr_usrp2_INCLUDES = 
gr_usrp2_LA = 
gr_usrp2_LDFLAG = 
gr_usrp2_LIBDIRPATH = 
gr_usrp_INCLUDEDIR = 
gr_usrp_INCLUDES = 
gr_usrp_LA = 
gr_usrp_LDFLAG = 
gr_usrp_LIBDIRPATH = 
gr_utils_INCLUDEDIR = 
gr_utils_INCLUDES = 
gr_utils_LA = 
gr_utils_LDFLAG = 
gr_utils_LIBDIRPATH = 
gr_video_sdl_INCLUDEDIR = 
gr_video_sdl_INCLUDES = 
gr_video_sdl_LA = 
gr_video_sdl_LDFLAG = 
gr_video_sdl_LIBDIRPATH = 
gr_wxgui_INCLUDEDIR = 
gr_wxgui_INCLUDES = 
gr_wxgui_LA = 
gr_wxgui_LDFLAG = 
gr_wxgui_LIBDIRPATH = 
grc_INCLUDEDIR = 
grc_INCLUDES = 
grc_LA = 
grc_LDFLAG = 
grc_LIBDIRPATH = 
gruel_INCLUDEDIR = 
gruel_INCLUDES = -I${abs_top_srcdir}/gruel/src/include -I${abs_top_builddir}/gruel/src/include
gruel_LA = ${abs_top_builddir}/gruel/src/lib/libgruel.la
gruel_LDFLAG = 
gruel_LIBDIRPATH = ${abs_top_builddir}/gruel/src/lib:${abs_top_builddir}/gruel/src/lib/.libs
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/me/gnuradio-3.4.0/install-sh
lf_CFLAGS =  -Wall -Werror-implicit-function-declaration
lf_CXXFLAGS =  -Wall -Woverloaded-virtual
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/gnuradio
pkgpythondir = ${pythondir}/gnuradio
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
skipped_dirs =  volk gcell gnuradio-core usrp2 gr-usrp gr-usrp2 gr-gcell gr-msdd6000 gr-audio gr-atsc gr-comedi gr-cvsd-vocoder gr-gpio gr-gsm-fr-vocoder gr-noaa gr-pager gr-radar-mono gr-radio-astronomy gr-trellis gr-video-sdl gr-wxgui gr-qtgui gr-sounder gr-utils gnuradio-examples grc gr-uhd docs
srcdir = .
subdirs =  usrp2/firmware
swig_CXXFLAGS = -g -O1 -Wno-strict-aliasing -Wno-parentheses
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../../../
top_builddir = ../../../..
top_srcdir = ../../../..
usrp2_INCLUDEDIR = 
usrp2_INCLUDES = 
usrp2_LA = 
usrp2_LDFLAG = 
usrp2_LIBDIRPATH = 
usrp_INCLUDEDIR = 
usrp_INCLUDES =  		-I${abs_top_srcdir}/usrp/host/include 		-I${abs_top_builddir}/usrp/host/include 		-I${abs_top_srcdir}/usrp/firmware/include
usrp_LA = ${abs_top_builddir}/usrp/host/lib/libusrp.la
usrp_LDFLAG = 
usrp_LIBDIRPATH = 
volk_INCLUDEDIR = 
volk_INCLUDES = 
volk_LA = 
volk_LDFLAG = 
volk_LIBDIRPATH = 
with_GUILE_LOAD_PATH = 
with_INCLUDES = 
with_LIBDIRPATH = 
with_PYDIRPATH = 
with_SWIGDIRPATH = 
with_SWIG_INCLUDES = 
with_dirs = 

# Every Makefile starts with common vars so we can
# consistently use +=

# Source built by Python into $(builddir)
BUILT_SOURCES = $(GENERATED_H) $(GENERATED_I) $(GENERATED_CC) \
	filter_generated.i
MOSTLYCLEANFILES = $(BUILT_SOURCES) $(STAMPS) *.pyc *.pyo *~ *.tmp \
	*.loT .unittests/* .unittests/python/* stamp-sources-generate
CLEANFILES = guile.log
DISTCLEANFILES = 
EXTRA_DIST = 3dnow_float_dotprod_really_simple.S \
	3dnow_float_dotprod_simple.S $(code_generator) \
	stamp-sources-generate

# Other common defines; use "+=" to add to these
STAMPS = $(DEPDIR)/Makefile.gen-generate-generate-* \
	$(DEPDIR)/stamp-sources-generate*
AM_CFLAGS = -g -O2  -Wall -Werror-implicit-function-declaration
AM_CXXFLAGS = -g -O2  -Wall -Woverloaded-virtual

# Sets ABI version in SONAME and appends -LIBVER to filename
LTVERSIONFLAGS = -version-info 0:0:0 -release $(LIBVER)

# includes
grincludedir = $(includedir)/gnuradio

# swig includes
swigincludedir = $(grincludedir)/swig

# Guile scheme code ends up under here:
guiledir = $(prefix)/share/guile/site

# Install the gnuradio stuff in the appropriate subdirectory
# This usually ends up at:
#   ${prefix}/lib/python${python_version}/site-packages/gnuradio
grpythondir = $(pythondir)/gnuradio
grpyexecdir = $(pyexecdir)/gnuradio

# Install the non-gnuradio usrp stuff in the appropriate subdirectory
# This usually ends up at:
#   ${prefix}/lib/python${python_version}/site-packages/usrpm
usrppythondir = $(pythondir)/usrpm
usrppyexecdir = $(pyexecdir)/usrpm

# gcell includes
gcellincludedir = $(includedir)/gcell
gcellspuincludedir = $(includedir)/gcell/spu

# Cell spu libs
libspudir = $(libdir)spu

# This used to be set in configure.ac but is now defined here for all 
# Makefiles when this fragment is included.
STD_DEFINES_AND_INCLUDES = $(DEFINES) $(GNURADIO_INCLUDES) \
	$(GRUEL_INCLUDES) $(VOLK_INCLUDES) $(BOOST_CPPFLAGS)


# when including for compilation from pre-installed libraries and such,
# need to make sure those are put last on the compile command
WITH_INCLUDES = 
WITH_SWIG_INCLUDES = 

# Where to find gnuradio include files in the current build tree
# top_srcdir for original stuff, top_builddir for generated files
GNURADIO_INCLUDES = -I${abs_top_srcdir}/gnuradio-core/src/lib/runtime -I${abs_top_srcdir}/gnuradio-core/src/lib/general -I${abs_top_builddir}/gnuradio-core/src/lib/general -I${abs_top_srcdir}/gnuradio-core/src/lib/gengen -I${abs_top_builddir}/gnuradio-core/src/lib/gengen -I${abs_top_srcdir}/gnuradio-core/src/lib/filter -I${abs_top_builddir}/gnuradio-core/src/lib/filter -I${abs_top_srcdir}/gnuradio-core/src/lib/missing -I${abs_top_srcdir}/gnuradio-core/src/lib/reed-solomon -I${abs_top_srcdir}/gnuradio-core/src/lib/viterbi -I${abs_top_srcdir}/gnuradio-core/src/lib/io -I${abs_top_srcdir}/gnuradio-core/src/lib/g72x -I${abs_top_srcdir}/gnuradio-core/src/lib/swig -I${abs_top_srcdir}/gnuradio-core/src/lib/hier -I${abs_top_builddir}/gnuradio-core/src/lib/swig

# How to link in GNU Radio core library from inside the tree
GNURADIO_CORE_LA = ${abs_top_builddir}/gnuradio-core/src/lib/libgnuradio-core.la

# How to link in the GRUEL library from inside the tree
GRUEL_INCLUDES = -I${abs_top_srcdir}/gruel/src/include -I${abs_top_builddir}/gruel/src/include
GRUEL_LA = ${abs_top_builddir}/gruel/src/lib/libgruel.la

# How to link in the VOLK library from inside the tree
VOLK_INCLUDES = 
VOLK_LA = 

# How to link in the USRP library from inside the tree
USRP_INCLUDES =  		-I${abs_top_srcdir}/usrp/host/include 		-I${abs_top_builddir}/usrp/host/include 		-I${abs_top_srcdir}/usrp/firmware/include
USRP_LA = ${abs_top_builddir}/usrp/host/lib/libusrp.la

# How to link the gcell library from inside the tree (the PPU part)
GCELL_INCLUDES = -I${abs_top_srcdir}/gcell/include
GCELL_LA = ${abs_top_builddir}/gcell/lib/libgcell.la

# How to link the gcell library from inside the tree (the SPU part)
GCELL_SPU_INCLUDES = -I${abs_top_srcdir}/gcell/include
GCELL_SPU_LA = ${abs_top_builddir}/gcell/lib/spu/libgcell_spu.a

# libtool aware wrapper for ppu-embedspu
GCELL_EMBEDSPU_LIBTOOL = /home/me/gnuradio-3.4.0/gcell/lib/runtime/gcell-embedspu-libtool

# Fix for BSD make not defining $(RM).  We define it now in configure.ac
# using AM_PATH_PROG, but now here have to add a -f to be like GNU make
RM = $(RM_PROG) -f
RUN_GUILE = GUILE_LOAD_PATH="/home/me/gnuradio-3.4.0/gruel/src/scheme"  -e main -s

# Base directory for example applications
exampledir = $(datadir)/gnuradio/examples
gr_docdir = $(docdir)-$(DOCVER)

# System configuration files
gr_prefsdir = $(GR_PREFSDIR)

# Data directory for grc block wrappers
grc_blocksdir = $(pkgdatadir)/grc/blocks

#
# This directory contains mostly filter routines, plus a few
# other performance critical items
#

# $(WITH_INCLUDES) must _always_ be last
AM_CPPFLAGS = $(STD_DEFINES_AND_INCLUDES) $(CPPUNIT_INCLUDES) \
	$(FFTW3F_CPPFLAGS) $(WITH_INCLUDES)

noinst_LTLIBRARIES = libfilter.la libfilter-qa.la

# ----------------------------------------------------------------
# these scripts generate FIR code
#
code_generator = \
	generate_all.py					\
	generate_gr_fir_XXX.py				\
	generate_gr_fir_filter_XXX.py			\
	generate_gr_interp_fir_filter_XXX.py		\
	generate_gr_rational_resampler_base_XXX.py	\
	generate_gr_fir_sysconfig.py			\
	generate_gr_fir_sysconfig_generic.py		\
	generate_gr_fir_util.py				\
	generate_gr_freq_xlating_fir_filter_XXX.py	\
	generate_gri_fir_filter_with_buffer_XXX.py	\
	generate_utils.py				\
	gr_fir_XXX.cc.t					\
	gr_fir_XXX.h.t					\
	gr_fir_XXX_generic.cc.t				\
	gr_fir_XXX_generic.h.t				\
	gr_fir_filter_XXX.cc.t				\
	gr_fir_filter_XXX.h.t				\
	gr_fir_filter_XXX.i.t				\
	gr_interp_fir_filter_XXX.cc.t			\
	gr_interp_fir_filter_XXX.h.t			\
	gr_interp_fir_filter_XXX.i.t			\
	gr_rational_resampler_base_XXX.cc.t		\
	gr_rational_resampler_base_XXX.h.t		\
	gr_rational_resampler_base_XXX.i.t		\
	gr_freq_xlating_fir_filter_XXX.cc.t		\
	gr_freq_xlating_fir_filter_XXX.h.t		\
	gr_freq_xlating_fir_filter_XXX.i.t		\
	gri_fir_filter_with_buffer_XXX.cc.t		\
	gri_fir_filter_with_buffer_XXX.h.t


# ----------------------------------------------------------------
# MD_CPU and MD_SUBCPU are set at configure time by way of 
#   gnuradio/config/gr_set_md_cpu.m4.  
#   It indicates which set of machine dependent code we should be building.
#   We currently implement "generic" and "x86"

#
# <foo>_CODE entry for each set of machine specific speedups
#
generic_CODE = \
	sysconfig_generic.cc		

generic_qa_CODE = \
	qa_dotprod_generic.cc

x86_CODE = \
	sysconfig_x86.cc		\
	gr_fir_sysconfig_x86.cc		\
	gr_cpu_x86.cc			\
	gr_fir_ccc_simd.cc		\
	gr_fir_ccc_x86.cc		\
	gr_fir_fff_simd.cc		\
	gr_fir_fff_x86.cc		\
	gr_fir_fsf_simd.cc		\
	gr_fir_fsf_x86.cc		\
	gr_fir_scc_simd.cc		\
	gr_fir_scc_x86.cc		\
	gr_fir_fcc_simd.cc		\
	gr_fir_fcc_x86.cc		\
	gr_fir_ccf_simd.cc		\
	gr_fir_ccf_x86.cc		\
	sse_debug.c

x86_SUBCODE = \
	float_dotprod_sse.S		\
	float_dotprod_3dnow.S		\
	complex_dotprod_3dnowext.S	\
	complex_dotprod_3dnow.S		\
	complex_dotprod_sse.S		\
	ccomplex_dotprod_3dnowext.S	\
	ccomplex_dotprod_3dnow.S	\
	ccomplex_dotprod_sse.S		\
	fcomplex_dotprod_3dnow.S	\
	fcomplex_dotprod_sse.S		\
	short_dotprod_mmx.S

x86_64_SUBCODE = \
	float_dotprod_sse64.S		\
	float_dotprod_3dnow64.S		\
	complex_dotprod_3dnowext64.S	\
	complex_dotprod_3dnow64.S	\
	complex_dotprod_sse64.S		\
	ccomplex_dotprod_3dnowext64.S	\
	ccomplex_dotprod_3dnow64.S	\
	ccomplex_dotprod_sse64.S	\
	fcomplex_dotprod_3dnow64.S	\
	fcomplex_dotprod_sse64.S	\
	short_dotprod_mmx64.S

x86_qa_CODE = \
	qa_dotprod_x86.cc		\
	qa_float_dotprod_x86.cc		\
	qa_complex_dotprod_x86.cc	\
	qa_ccomplex_dotprod_x86.cc	

powerpc_CODE = \
	sysconfig_powerpc.cc \
	gr_fir_sysconfig_powerpc.cc \
	gr_cpu_powerpc.cc \
	gr_fir_fff_altivec.cc \
	gr_altivec.c \
	dotprod_fff_altivec.c

powerpc_qa_CODE = \
	qa_dotprod_powerpc.cc

armv7_a_CODE = \
	sysconfig_armv7_a.cc \
	gr_fir_sysconfig_armv7_a.cc \
	gr_cpu_armv7_a.cc \
	gr_fir_fff_armv7_a.cc \
	dotprod_fff_armv7_a.c \
	gr_fir_ccf_armv7_a.cc \
	dotprod_ccf_armv7_a.c

armv7_a_qa_CODE = \
	qa_dotprod_armv7_a.cc


#
# include each <foo>_CODE entry here...
#
EXTRA_libfilter_la_SOURCES = \
	$(generic_CODE)			\
	$(generic_qa_CODE)		\
	$(x86_CODE)			\
	$(x86_SUBCODE)			\
	$(x86_64_SUBCODE)		\
	$(x86_qa_CODE)			\
	$(powerpc_CODE)			\
	$(powerpc_qa_CODE)		\
	$(armv7_a_CODE)		\
	$(armv7_a_qa_CODE)


# work around automake deficiency
libfilter_la_common_SOURCES = \
	$(GENERATED_CC)			\
	gr_adaptive_fir_ccf.cc		\
	gr_cma_equalizer_cc.cc		\
	gri_fft_filter_fff_generic.cc	\
	gri_fft_filter_ccc_generic.cc	\
	gr_fft_filter_ccc.cc		\
	gr_fft_filter_fff.cc		\
	gr_goertzel_fc.cc		\
	gr_filter_delay_fc.cc		\
	gr_fractional_interpolator_ff.cc \
	gr_fractional_interpolator_cc.cc \
	gr_hilbert_fc.cc		\
	gr_iir_filter_ffd.cc		\
	gr_sincos.c			\
	gr_single_pole_iir_filter_ff.cc	\
	gr_single_pole_iir_filter_cc.cc	\
	gri_goertzel.cc			\
	gri_mmse_fir_interpolator.cc	\
	gri_mmse_fir_interpolator_cc.cc	\
	complex_dotprod_generic.cc	\
	ccomplex_dotprod_generic.cc	\
	float_dotprod_generic.c		\
	short_dotprod_generic.c		\
	gr_pfb_channelizer_ccf.cc	\
	gr_pfb_synthesis_filterbank_ccf.cc\
	gr_pfb_decimator_ccf.cc		\
	gr_pfb_interpolator_ccf.cc	\
	gr_pfb_arb_resampler_ccf.cc	\
	gr_pfb_clock_sync_ccf.cc	\
	gr_pfb_clock_sync_fff.cc	\
	gr_dc_blocker_cc.cc		\
	gr_dc_blocker_ff.cc

libfilter_qa_la_common_SOURCES = \
	qa_filter.cc			\
	qa_gr_fir_ccf.cc		\
	qa_gr_fir_fcc.cc		\
	qa_gr_fir_fff.cc		\
	qa_gr_fir_ccc.cc		\
	qa_gr_fir_scc.cc		\
	qa_gr_rotator.cc		\
	qa_gri_mmse_fir_interpolator.cc	\
	qa_gri_mmse_fir_interpolator_cc.cc \
	qa_gri_fir_filter_with_buffer_ccf.cc \
	qa_gri_fir_filter_with_buffer_ccc.cc \
	qa_gri_fir_filter_with_buffer_fcc.cc \
	qa_gri_fir_filter_with_buffer_fff.cc \
	qa_gri_fir_filter_with_buffer_fsf.cc \
	qa_gri_fir_filter_with_buffer_scc.cc

#libfilter_la_SOURCES = $(libfilter_la_common_SOURCES) $(armv7_a_CODE)
#libfilter_la_SOURCES = $(libfilter_la_common_SOURCES) $(generic_CODE)
#libfilter_la_SOURCES = $(libfilter_la_common_SOURCES) $(powerpc_CODE)
#libfilter_la_SOURCES = $(libfilter_la_common_SOURCES) $(x86_SUBCODE) $(x86_CODE)
libfilter_la_SOURCES = $(libfilter_la_common_SOURCES) $(x86_64_SUBCODE) $(x86_CODE)
#libfilter_qa_la_SOURCES = $(libfilter_qa_la_common_SOURCES) $(armv7_a_qa_CODE)
#libfilter_qa_la_SOURCES = $(libfilter_qa_la_common_SOURCES) $(generic_qa_CODE)
#libfilter_qa_la_SOURCES = $(libfilter_qa_la_common_SOURCES) $(powerpc_qa_CODE)
libfilter_qa_la_SOURCES = $(libfilter_qa_la_common_SOURCES) $(x86_qa_CODE)
grinclude_HEADERS = \
	$(GENERATED_H)			\
	complex_dotprod_generic.h	\
	complex_dotprod_x86.h		\
	fcomplex_dotprod_x86.h		\
	ccomplex_dotprod_generic.h	\
	ccomplex_dotprod_x86.h		\
	float_dotprod_generic.h		\
	float_dotprod_x86.h		\
	gr_adaptive_fir_ccf.h		\
	gr_altivec.h			\
	gr_cma_equalizer_cc.h		\
	gr_cpu.h			\
	gri_fft_filter_fff_generic.h	\
	gri_fft_filter_ccc_generic.h	\
	gr_fft_filter_ccc.h		\
	gr_fft_filter_fff.h		\
	gr_filter_delay_fc.h		\
	gr_fir_sysconfig_x86.h		\
	gr_fir_sysconfig_powerpc.h	\
	gr_fractional_interpolator_ff.h	\
	gr_fractional_interpolator_cc.h	\
	gr_goertzel_fc.h		\
	gr_hilbert_fc.h			\
	gr_iir_filter_ffd.h		\
	gr_rotator.h			\
	gr_sincos.h			\
	gr_single_pole_iir.h		\
	gr_single_pole_iir_filter_ff.h	\
	gr_single_pole_iir_filter_cc.h  \
	gr_vec_types.h			\
	gri_goertzel.h			\
	gri_iir.h			\
	gri_mmse_fir_interpolator.h	\
	gri_mmse_fir_interpolator_cc.h	\
	qa_filter.h			\
	short_dotprod_generic.h		\
	short_dotprod_x86.h		\
	sse_debug.h			\
	gr_pfb_channelizer_ccf.h	\
	gr_pfb_synthesis_filterbank_ccf.h\
	gr_pfb_decimator_ccf.h		\
	gr_pfb_interpolator_ccf.h	\
	gr_pfb_arb_resampler_ccf.h	\
	gr_pfb_clock_sync_ccf.h		\
	gr_pfb_clock_sync_fff.h		\
	gr_dc_blocker_cc.h		\
	gr_dc_blocker_ff.h

noinst_HEADERS = \
	assembly.h			\
	gcc_x86_cpuid.h			\
	dotprod_fff_altivec.h		\
	dotprod_fff_armv7_a.h		\
	dotprod_ccf_armv7_a.h		\
	gr_fir_scc_simd.h		\
	gr_fir_scc_x86.h		\
	gr_fir_fcc_simd.h		\
	gr_fir_fcc_x86.h		\
	gr_fir_ccf_simd.h		\
	gr_fir_ccf_x86.h		\
	gr_fir_ccc_simd.h		\
	gr_fir_ccc_x86.h		\
	gr_fir_fff_altivec.h		\
	gr_fir_fff_armv7_a.h		\
	gr_fir_ccf_armv7_a.h		\
	gr_fir_fff_simd.h		\
	gr_fir_fff_x86.h		\
	gr_fir_fsf_simd.h		\
	gr_fir_fsf_x86.h		\
	interpolator_taps.h		\
	qa_complex_dotprod_x86.h	\
	qa_ccomplex_dotprod_x86.h	\
	qa_dotprod.h			\
	qa_float_dotprod_x86.h		\
	qa_gr_fir_ccf.h			\
	qa_gr_fir_fcc.h			\
	qa_gr_fir_fff.h			\
	qa_gr_fir_ccc.h			\
	qa_gr_fir_scc.h			\
	qa_gr_rotator.h			\
	qa_gri_mmse_fir_interpolator.h	\
	qa_gri_mmse_fir_interpolator_cc.h \
	qa_gri_fir_filter_with_buffer_ccf.h \
	qa_gri_fir_filter_with_buffer_ccc.h \
	qa_gri_fir_filter_with_buffer_fcc.h \
	qa_gri_fir_filter_with_buffer_fff.h \
	qa_gri_fir_filter_with_buffer_fsf.h \
	qa_gri_fir_filter_with_buffer_scc.h

swiginclude_HEADERS = \
	filter.i			\
	filter_generated.i		\
	gr_adaptive_fir_ccf.i		\
	gr_cma_equalizer_cc.i		\
	gr_fft_filter_ccc.i		\
	gr_fft_filter_fff.i		\
	gr_filter_delay_fc.i		\
	gr_fractional_interpolator_ff.i \
	gr_fractional_interpolator_cc.i \
	gr_goertzel_fc.i		\
	gr_hilbert_fc.i			\
	gr_iir_filter_ffd.i		\
	gr_single_pole_iir_filter_ff.i	\
	gr_single_pole_iir_filter_cc.i	\
	gr_pfb_channelizer_ccf.i	\
	gr_pfb_synthesis_filterbank_ccf.i\
	gr_pfb_decimator_ccf.i		\
	gr_pfb_interpolator_ccf.i	\
	gr_pfb_arb_resampler_ccf.i	\
	gr_pfb_clock_sync_ccf.i		\
	gr_pfb_clock_sync_fff.i		\
	gr_dc_blocker_cc.i		\
	gr_dc_blocker_ff.i		\
	$(GENERATED_I)


#
# This file is machine generated.  All edits will be overwritten
#
GENERATED_H = \
	gr_fir_ccc.h \
	gr_fir_ccc_generic.h \
	gr_fir_ccf.h \
	gr_fir_ccf_generic.h \
	gr_fir_fcc.h \
	gr_fir_fcc_generic.h \
	gr_fir_fff.h \
	gr_fir_fff_generic.h \
	gr_fir_filter_ccc.h \
	gr_fir_filter_ccf.h \
	gr_fir_filter_fcc.h \
	gr_fir_filter_fff.h \
	gr_fir_filter_fsf.h \
	gr_fir_filter_scc.h \
	gr_fir_fsf.h \
	gr_fir_fsf_generic.h \
	gr_fir_scc.h \
	gr_fir_scc_generic.h \
	gr_fir_sysconfig.h \
	gr_fir_sysconfig_generic.h \
	gr_fir_util.h \
	gr_freq_xlating_fir_filter_ccc.h \
	gr_freq_xlating_fir_filter_ccf.h \
	gr_freq_xlating_fir_filter_fcc.h \
	gr_freq_xlating_fir_filter_fcf.h \
	gr_freq_xlating_fir_filter_scc.h \
	gr_freq_xlating_fir_filter_scf.h \
	gr_interp_fir_filter_ccc.h \
	gr_interp_fir_filter_ccf.h \
	gr_interp_fir_filter_fcc.h \
	gr_interp_fir_filter_fff.h \
	gr_interp_fir_filter_fsf.h \
	gr_interp_fir_filter_scc.h \
	gr_rational_resampler_base_ccc.h \
	gr_rational_resampler_base_ccf.h \
	gr_rational_resampler_base_fcc.h \
	gr_rational_resampler_base_fff.h \
	gr_rational_resampler_base_fsf.h \
	gr_rational_resampler_base_scc.h \
	gri_fir_filter_with_buffer_ccc.h \
	gri_fir_filter_with_buffer_ccf.h \
	gri_fir_filter_with_buffer_fcc.h \
	gri_fir_filter_with_buffer_fff.h \
	gri_fir_filter_with_buffer_fsf.h \
	gri_fir_filter_with_buffer_scc.h

GENERATED_I = \
	gr_fir_filter_ccc.i \
	gr_fir_filter_ccf.i \
	gr_fir_filter_fcc.i \
	gr_fir_filter_fff.i \
	gr_fir_filter_fsf.i \
	gr_fir_filter_scc.i \
	gr_freq_xlating_fir_filter_ccc.i \
	gr_freq_xlating_fir_filter_ccf.i \
	gr_freq_xlating_fir_filter_fcc.i \
	gr_freq_xlating_fir_filter_fcf.i \
	gr_freq_xlating_fir_filter_scc.i \
	gr_freq_xlating_fir_filter_scf.i \
	gr_interp_fir_filter_ccc.i \
	gr_interp_fir_filter_ccf.i \
	gr_interp_fir_filter_fcc.i \
	gr_interp_fir_filter_fff.i \
	gr_interp_fir_filter_fsf.i \
	gr_interp_fir_filter_scc.i \
	gr_rational_resampler_base_ccc.i \
	gr_rational_resampler_base_ccf.i \
	gr_rational_resampler_base_fcc.i \
	gr_rational_resampler_base_fff.i \
	gr_rational_resampler_base_fsf.i \
	gr_rational_resampler_base_scc.i

GENERATED_CC = \
	gr_fir_ccc.cc \
	gr_fir_ccc_generic.cc \
	gr_fir_ccf.cc \
	gr_fir_ccf_generic.cc \
	gr_fir_fcc.cc \
	gr_fir_fcc_generic.cc \
	gr_fir_fff.cc \
	gr_fir_fff_generic.cc \
	gr_fir_filter_ccc.cc \
	gr_fir_filter_ccf.cc \
	gr_fir_filter_fcc.cc \
	gr_fir_filter_fff.cc \
	gr_fir_filter_fsf.cc \
	gr_fir_filter_scc.cc \
	gr_fir_fsf.cc \
	gr_fir_fsf_generic.cc \
	gr_fir_scc.cc \
	gr_fir_scc_generic.cc \
	gr_fir_sysconfig.cc \
	gr_fir_sysconfig_generic.cc \
	gr_fir_util.cc \
	gr_freq_xlating_fir_filter_ccc.cc \
	gr_freq_xlating_fir_filter_ccf.cc \
	gr_freq_xlating_fir_filter_fcc.cc \
	gr_freq_xlating_fir_filter_fcf.cc \
	gr_freq_xlating_fir_filter_scc.cc \
	gr_freq_xlating_fir_filter_scf.cc \
	gr_interp_fir_filter_ccc.cc \
	gr_interp_fir_filter_ccf.cc \
	gr_interp_fir_filter_fcc.cc \
	gr_interp_fir_filter_fff.cc \
	gr_interp_fir_filter_fsf.cc \
	gr_interp_fir_filter_scc.cc \
	gr_rational_resampler_base_ccc.cc \
	gr_rational_resampler_base_ccf.cc \
	gr_rational_resampler_base_fcc.cc \
	gr_rational_resampler_base_fff.cc \
	gr_rational_resampler_base_fsf.cc \
	gr_rational_resampler_base_scc.cc \
	gri_fir_filter_with_buffer_ccc.cc \
	gri_fir_filter_with_buffer_ccf.cc \
	gri_fir_filter_with_buffer_fcc.cc \
	gri_fir_filter_with_buffer_fff.cc \
	gri_fir_filter_with_buffer_fsf.cc \
	gri_fir_filter_with_buffer_scc.cc


# Do creation and inclusion of other Makefiles last

# include the srcdir's Makefile.gen; doing this creates an implicit
# dependency between $(srcdir)/Makefile.in and $(srcdir)/Makefile.gen.

# common way for generating local Makefile.gen
makefile_gen_gen_command = PYTHONPATH=$(top_srcdir)/gnuradio-core/src/python srcdir=$(srcdir) do_makefile=1 do_sources=0 $(PYTHON) $(srcdir)/generate_all.py

# common way for generating sources from templates when using
# BUILT_SOURCES, using parallel build protection.
gen_sources = $(BUILT_SOURCES)
gen_sources_deps = $(core_generator)
par_gen_command = PYTHONPATH=$(top_srcdir)/gnuradio-core/src/python srcdir=$(srcdir) $(PYTHON) $(srcdir)/generate_all.py
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .S .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(srcdir)/Makefile.gen $(top_srcdir)/Makefile.gen.gen $(top_srcdir)/Makefile.par.gen $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu gnuradio-core/src/lib/filter/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu gnuradio-core/src/lib/filter/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.common $(srcdir)/Makefile.gen $(top_srcdir)/Makefile.gen.gen $(top_srcdir)/Makefile.par.gen $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libfilter-qa.la: $(libfilter_qa_la_OBJECTS) $(libfilter_qa_la_DEPENDENCIES) $(EXTRA_libfilter_qa_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libfilter_qa_la_OBJECTS) $(libfilter_qa_la_LIBADD) $(LIBS)

libfilter.la: $(libfilter_la_OBJECTS) $(libfilter_la_DEPENDENCIES) $(EXTRA_libfilter_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libfilter_la_OBJECTS) $(libfilter_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ccomplex_dotprod_3dnow.Plo
include ./$(DEPDIR)/ccomplex_dotprod_3dnow64.Plo
include ./$(DEPDIR)/ccomplex_dotprod_3dnowext.Plo
include ./$(DEPDIR)/ccomplex_dotprod_3dnowext64.Plo
include ./$(DEPDIR)/ccomplex_dotprod_generic.Plo
include ./$(DEPDIR)/ccomplex_dotprod_sse.Plo
include ./$(DEPDIR)/ccomplex_dotprod_sse64.Plo
include ./$(DEPDIR)/complex_dotprod_3dnow.Plo
include ./$(DEPDIR)/complex_dotprod_3dnow64.Plo
include ./$(DEPDIR)/complex_dotprod_3dnowext.Plo
include ./$(DEPDIR)/complex_dotprod_3dnowext64.Plo
include ./$(DEPDIR)/complex_dotprod_generic.Plo
include ./$(DEPDIR)/complex_dotprod_sse.Plo
include ./$(DEPDIR)/complex_dotprod_sse64.Plo
include ./$(DEPDIR)/dotprod_ccf_armv7_a.Plo
include ./$(DEPDIR)/dotprod_fff_altivec.Plo
include ./$(DEPDIR)/dotprod_fff_armv7_a.Plo
include ./$(DEPDIR)/fcomplex_dotprod_3dnow.Plo
include ./$(DEPDIR)/fcomplex_dotprod_3dnow64.Plo
include ./$(DEPDIR)/fcomplex_dotprod_sse.Plo
include ./$(DEPDIR)/fcomplex_dotprod_sse64.Plo
include ./$(DEPDIR)/float_dotprod_3dnow.Plo
include ./$(DEPDIR)/float_dotprod_3dnow64.Plo
include ./$(DEPDIR)/float_dotprod_generic.Plo
include ./$(DEPDIR)/float_dotprod_sse.Plo
include ./$(DEPDIR)/float_dotprod_sse64.Plo
include ./$(DEPDIR)/gr_adaptive_fir_ccf.Plo
include ./$(DEPDIR)/gr_altivec.Plo
include ./$(DEPDIR)/gr_cma_equalizer_cc.Plo
include ./$(DEPDIR)/gr_cpu_armv7_a.Plo
include ./$(DEPDIR)/gr_cpu_powerpc.Plo
include ./$(DEPDIR)/gr_cpu_x86.Plo
include ./$(DEPDIR)/gr_dc_blocker_cc.Plo
include ./$(DEPDIR)/gr_dc_blocker_ff.Plo
include ./$(DEPDIR)/gr_fft_filter_ccc.Plo
include ./$(DEPDIR)/gr_fft_filter_fff.Plo
include ./$(DEPDIR)/gr_filter_delay_fc.Plo
include ./$(DEPDIR)/gr_fir_ccc.Plo
include ./$(DEPDIR)/gr_fir_ccc_generic.Plo
include ./$(DEPDIR)/gr_fir_ccc_simd.Plo
include ./$(DEPDIR)/gr_fir_ccc_x86.Plo
include ./$(DEPDIR)/gr_fir_ccf.Plo
include ./$(DEPDIR)/gr_fir_ccf_armv7_a.Plo
include ./$(DEPDIR)/gr_fir_ccf_generic.Plo
include ./$(DEPDIR)/gr_fir_ccf_simd.Plo
include ./$(DEPDIR)/gr_fir_ccf_x86.Plo
include ./$(DEPDIR)/gr_fir_fcc.Plo
include ./$(DEPDIR)/gr_fir_fcc_generic.Plo
include ./$(DEPDIR)/gr_fir_fcc_simd.Plo
include ./$(DEPDIR)/gr_fir_fcc_x86.Plo
include ./$(DEPDIR)/gr_fir_fff.Plo
include ./$(DEPDIR)/gr_fir_fff_altivec.Plo
include ./$(DEPDIR)/gr_fir_fff_armv7_a.Plo
include ./$(DEPDIR)/gr_fir_fff_generic.Plo
include ./$(DEPDIR)/gr_fir_fff_simd.Plo
include ./$(DEPDIR)/gr_fir_fff_x86.Plo
include ./$(DEPDIR)/gr_fir_filter_ccc.Plo
include ./$(DEPDIR)/gr_fir_filter_ccf.Plo
include ./$(DEPDIR)/gr_fir_filter_fcc.Plo
include ./$(DEPDIR)/gr_fir_filter_fff.Plo
include ./$(DEPDIR)/gr_fir_filter_fsf.Plo
include ./$(DEPDIR)/gr_fir_filter_scc.Plo
include ./$(DEPDIR)/gr_fir_fsf.Plo
include ./$(DEPDIR)/gr_fir_fsf_generic.Plo
include ./$(DEPDIR)/gr_fir_fsf_simd.Plo
include ./$(DEPDIR)/gr_fir_fsf_x86.Plo
include ./$(DEPDIR)/gr_fir_scc.Plo
include ./$(DEPDIR)/gr_fir_scc_generic.Plo
include ./$(DEPDIR)/gr_fir_scc_simd.Plo
include ./$(DEPDIR)/gr_fir_scc_x86.Plo
include ./$(DEPDIR)/gr_fir_sysconfig.Plo
include ./$(DEPDIR)/gr_fir_sysconfig_armv7_a.Plo
include ./$(DEPDIR)/gr_fir_sysconfig_generic.Plo
include ./$(DEPDIR)/gr_fir_sysconfig_powerpc.Plo
include ./$(DEPDIR)/gr_fir_sysconfig_x86.Plo
include ./$(DEPDIR)/gr_fir_util.Plo
include ./$(DEPDIR)/gr_fractional_interpolator_cc.Plo
include ./$(DEPDIR)/gr_fractional_interpolator_ff.Plo
include ./$(DEPDIR)/gr_freq_xlating_fir_filter_ccc.Plo
include ./$(DEPDIR)/gr_freq_xlating_fir_filter_ccf.Plo
include ./$(DEPDIR)/gr_freq_xlating_fir_filter_fcc.Plo
include ./$(DEPDIR)/gr_freq_xlating_fir_filter_fcf.Plo
include ./$(DEPDIR)/gr_freq_xlating_fir_filter_scc.Plo
include ./$(DEPDIR)/gr_freq_xlating_fir_filter_scf.Plo
include ./$(DEPDIR)/gr_goertzel_fc.Plo
include ./$(DEPDIR)/gr_hilbert_fc.Plo
include ./$(DEPDIR)/gr_iir_filter_ffd.Plo
include ./$(DEPDIR)/gr_interp_fir_filter_ccc.Plo
include ./$(DEPDIR)/gr_interp_fir_filter_ccf.Plo
include ./$(DEPDIR)/gr_interp_fir_filter_fcc.Plo
include ./$(DEPDIR)/gr_interp_fir_filter_fff.Plo
include ./$(DEPDIR)/gr_interp_fir_filter_fsf.Plo
include ./$(DEPDIR)/gr_interp_fir_filter_scc.Plo
include ./$(DEPDIR)/gr_pfb_arb_resampler_ccf.Plo
include ./$(DEPDIR)/gr_pfb_channelizer_ccf.Plo
include ./$(DEPDIR)/gr_pfb_clock_sync_ccf.Plo
include ./$(DEPDIR)/gr_pfb_clock_sync_fff.Plo
include ./$(DEPDIR)/gr_pfb_decimator_ccf.Plo
include ./$(DEPDIR)/gr_pfb_interpolator_ccf.Plo
include ./$(DEPDIR)/gr_pfb_synthesis_filterbank_ccf.Plo
include ./$(DEPDIR)/gr_rational_resampler_base_ccc.Plo
include ./$(DEPDIR)/gr_rational_resampler_base_ccf.Plo
include ./$(DEPDIR)/gr_rational_resampler_base_fcc.Plo
include ./$(DEPDIR)/gr_rational_resampler_base_fff.Plo
include ./$(DEPDIR)/gr_rational_resampler_base_fsf.Plo
include ./$(DEPDIR)/gr_rational_resampler_base_scc.Plo
include ./$(DEPDIR)/gr_sincos.Plo
include ./$(DEPDIR)/gr_single_pole_iir_filter_cc.Plo
include ./$(DEPDIR)/gr_single_pole_iir_filter_ff.Plo
include ./$(DEPDIR)/gri_fft_filter_ccc_generic.Plo
include ./$(DEPDIR)/gri_fft_filter_fff_generic.Plo
include ./$(DEPDIR)/gri_fir_filter_with_buffer_ccc.Plo
include ./$(DEPDIR)/gri_fir_filter_with_buffer_ccf.Plo
include ./$(DEPDIR)/gri_fir_filter_with_buffer_fcc.Plo
include ./$(DEPDIR)/gri_fir_filter_with_buffer_fff.Plo
include ./$(DEPDIR)/gri_fir_filter_with_buffer_fsf.Plo
include ./$(DEPDIR)/gri_fir_filter_with_buffer_scc.Plo
include ./$(DEPDIR)/gri_goertzel.Plo
include ./$(DEPDIR)/gri_mmse_fir_interpolator.Plo
include ./$(DEPDIR)/gri_mmse_fir_interpolator_cc.Plo
include ./$(DEPDIR)/qa_ccomplex_dotprod_x86.Plo
include ./$(DEPDIR)/qa_complex_dotprod_x86.Plo
include ./$(DEPDIR)/qa_dotprod_armv7_a.Plo
include ./$(DEPDIR)/qa_dotprod_generic.Plo
include ./$(DEPDIR)/qa_dotprod_powerpc.Plo
include ./$(DEPDIR)/qa_dotprod_x86.Plo
include ./$(DEPDIR)/qa_filter.Plo
include ./$(DEPDIR)/qa_float_dotprod_x86.Plo
include ./$(DEPDIR)/qa_gr_fir_ccc.Plo
include ./$(DEPDIR)/qa_gr_fir_ccf.Plo
include ./$(DEPDIR)/qa_gr_fir_fcc.Plo
include ./$(DEPDIR)/qa_gr_fir_fff.Plo
include ./$(DEPDIR)/qa_gr_fir_scc.Plo
include ./$(DEPDIR)/qa_gr_rotator.Plo
include ./$(DEPDIR)/qa_gri_fir_filter_with_buffer_ccc.Plo
include ./$(DEPDIR)/qa_gri_fir_filter_with_buffer_ccf.Plo
include ./$(DEPDIR)/qa_gri_fir_filter_with_buffer_fcc.Plo
include ./$(DEPDIR)/qa_gri_fir_filter_with_buffer_fff.Plo
include ./$(DEPDIR)/qa_gri_fir_filter_with_buffer_fsf.Plo
include ./$(DEPDIR)/qa_gri_fir_filter_with_buffer_scc.Plo
include ./$(DEPDIR)/qa_gri_mmse_fir_interpolator.Plo
include ./$(DEPDIR)/qa_gri_mmse_fir_interpolator_cc.Plo
include ./$(DEPDIR)/short_dotprod_generic.Plo
include ./$(DEPDIR)/short_dotprod_mmx.Plo
include ./$(DEPDIR)/short_dotprod_mmx64.Plo
include ./$(DEPDIR)/sse_debug.Plo
include ./$(DEPDIR)/sysconfig_armv7_a.Plo
include ./$(DEPDIR)/sysconfig_generic.Plo
include ./$(DEPDIR)/sysconfig_powerpc.Plo
include ./$(DEPDIR)/sysconfig_x86.Plo

.S.o:
	$(AM_V_CPPAS)$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(AM_V_CPPAS)$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
	$(AM_V_CPPAS)$(LTCPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(LTCPPASCOMPILE) -c -o $@ $<

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-grincludeHEADERS: $(grinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(grinclude_HEADERS)'; test -n "$(grincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(grincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(grincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(grincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(grincludedir)" || exit $$?; \
	done

uninstall-grincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(grinclude_HEADERS)'; test -n "$(grincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(grincludedir)'; $(am__uninstall_files_from_dir)
install-swigincludeHEADERS: $(swiginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(swiginclude_HEADERS)'; test -n "$(swigincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(swigincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(swigincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(swigincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(swigincludedir)" || exit $$?; \
	done

uninstall-swigincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(swiginclude_HEADERS)'; test -n "$(swigincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(swigincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(grincludedir)" "$(DESTDIR)$(swigincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-grincludeHEADERS install-swigincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-grincludeHEADERS uninstall-swigincludeHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
	ctags-am dist-hook distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-grincludeHEADERS \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip install-swigincludeHEADERS \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-grincludeHEADERS \
	uninstall-swigincludeHEADERS

.PRECIOUS: Makefile


# Base directory for documentation (docdir undefined in autoconf < 1.60)
docdir ?= $(datadir)/doc/$(PACKAGE)

# Don't distribute the files defined in the variable 'no_dist_files'

dist-hook:
	@for file in $(no_dist_files); do \
		echo $(RM) $(distdir)/$$file; \
		$(RM) $(distdir)/$$file; \
	done

generate-makefile $(srcdir)/Makefile.gen:
	@trap 'rm -rf $(DEPDIR)/Makefile.gen-generate-*' 1 2 13 15; \
	if mkdir $(DEPDIR)/Makefile.gen-generate-lock 2>/dev/null; then \
		rm -f $(DEPDIR)/Makefile.gen-generate-stamp; \
		rm -f $(DEPDIR)/Makefile.gen-generate-tmp; \
		touch $(DEPDIR)/Makefile.gen-generate-tmp; \
		do_recreate=0; \
		if test -f $(srcdir)/Makefile.gen; then \
			if $(RM) $(srcdir)/Makefile.gen 2>/dev/null; then \
				do_recreate=1; \
			fi; \
		else \
			if touch $(srcdir)/Makefile.gen 2>/dev/null; then \
				do_recreate=1; \
			fi; \
		fi; \
		if test "$$do_recreate" == "1"; then \
			echo "Regenerating $(srcdir)/Makefile.gen"; \
			$(makefile_gen_gen_command); \
		else \
			echo "Cannot recreate $(srcdir)/Makefile.gen because the directory or file is write-protected."; \
			exit -1; \
		fi; \
		mv -f $(DEPDIR)/Makefile.gen-generate-tmp $(DEPDIR)/Makefile.gen-generate-stamp; \
		rmdir $(DEPDIR)/Makefile.gen-generate-lock; \
	else \
		while test -d $(DEPDIR)/Makefile.gen-generate-lock; do sleep 1; done; \
		test -f $(DEPDIR)/Makefile.gen-generate-stamp; exit $$?; \
	fi;

STAMPS ?=
EXTRA_DIST ?=
MOSTLYCLEANFILES ?=

stamp-sources-generate: $(gen_sources_deps)
	@rm -f $(DEPDIR)/stamp-sources-generate-tmp
	@touch $(DEPDIR)/stamp-sources-generate-tmp
	$(par_gen_command)
	@mv -f $(DEPDIR)/stamp-sources-generate-tmp $@

$(gen_sources): stamp-sources-generate
	@if test -f $@; then :; else \
		trap 'rm -rf $(DEPDIR)/stamp-sources-generate-*' 1 2 13 15; \
		if mkdir $(DEPDIR)/stamp-sources-generate-lock 2>/dev/null; then \
			rm -f stamp-sources-generate; \
			$(MAKE) $(AM_MAKEFLAGS) stamp-sources-generate; \
			rmdir $(DEPDIR)/stamp-sources-generate-lock; \
		else \
			while test -d $(DEPDIR)/stamp-sources-generate-lock; do sleep 1; done; \
			test -f stamp-sources-generate; exit $$?; \
		fi; \
	fi;

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
