# Makefile.in generated by automake 1.15 from Makefile.am.
# gruel/src/swig/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Copyright 2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

# -*- Makefile -*-
#
# Copyright 2004,2006,2007,2008,2009,2010 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

# -*- Makefile -*-
#
# Copyright 2009,2010 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

# -*- Makefile -*-
#
# Copyright 2009 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

# Makefile.swig.gen for gnuradio_core_runtime.i



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/gnuradio
pkgincludedir = $(includedir)/gnuradio
pkglibdir = $(libdir)/gnuradio
pkglibexecdir = $(libexecdir)/gnuradio
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
am__append_1 = $(PYTHON_GEN)

# Now add .h, .cc to _all_
am__append_2 = $(PYTHON_GEN) $(foreach \
	IFILE,$(TOP_SWIG_IFILES), $(patsubst \
	%.i,python/%.h,$(IFILE))) $(foreach \
	IFILE,$(TOP_SWIG_IFILES), $(patsubst \
	%.i,python/%.cc,$(IFILE)))
#am__append_3 = $(GUILE_GEN)

# Now add -primitive.scm, .cc to _all_
#am__append_4 = $(GUILE_GEN) $(foreach \
#	IFILE,$(TOP_SWIG_IFILES), $(patsubst \
#	%.i,gnuradio/%-primitive.scm,$(IFILE))) $(foreach \
#	IFILE,$(TOP_SWIG_IFILES), $(patsubst \
#	%.i,guile/%.cc,$(IFILE)))
TESTS =
subdir = gruel/src/swig
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/acx_cblas.m4 \
	$(top_srcdir)/config/acx_pthread.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/cppunit.m4 \
	$(top_srcdir)/config/gr_check_createfilemapping.m4 \
	$(top_srcdir)/config/gr_check_memalign.m4 \
	$(top_srcdir)/config/gr_check_shm_open.m4 \
	$(top_srcdir)/config/gr_doxygen.m4 \
	$(top_srcdir)/config/gr_git.m4 \
	$(top_srcdir)/config/gr_gprof.m4 \
	$(top_srcdir)/config/gr_guile.m4 \
	$(top_srcdir)/config/gr_lib64.m4 \
	$(top_srcdir)/config/gr_libgnuradio_core_extra_ldflags.m4 \
	$(top_srcdir)/config/gr_no_undefined.m4 \
	$(top_srcdir)/config/gr_pwin32.m4 \
	$(top_srcdir)/config/gr_python.m4 \
	$(top_srcdir)/config/gr_qwt.m4 \
	$(top_srcdir)/config/gr_scripting.m4 \
	$(top_srcdir)/config/gr_set_md_cpu.m4 \
	$(top_srcdir)/config/gr_swig.m4 \
	$(top_srcdir)/config/gr_sysv_shm.m4 \
	$(top_srcdir)/config/gr_version.m4 \
	$(top_srcdir)/config/gr_vmcircbuf.m4 \
	$(top_srcdir)/config/grc_build.m4 \
	$(top_srcdir)/config/grc_docs.m4 \
	$(top_srcdir)/config/grc_gcell.m4 \
	$(top_srcdir)/config/grc_gnuradio_core.m4 \
	$(top_srcdir)/config/grc_gnuradio_examples.m4 \
	$(top_srcdir)/config/grc_gr_atsc.m4 \
	$(top_srcdir)/config/grc_gr_audio.m4 \
	$(top_srcdir)/config/grc_gr_comedi.m4 \
	$(top_srcdir)/config/grc_gr_cvsd_vocoder.m4 \
	$(top_srcdir)/config/grc_gr_gcell.m4 \
	$(top_srcdir)/config/grc_gr_gpio.m4 \
	$(top_srcdir)/config/grc_gr_gsm_fr_vocoder.m4 \
	$(top_srcdir)/config/grc_gr_msdd6000.m4 \
	$(top_srcdir)/config/grc_gr_noaa.m4 \
	$(top_srcdir)/config/grc_gr_pager.m4 \
	$(top_srcdir)/config/grc_gr_qtgui.m4 \
	$(top_srcdir)/config/grc_gr_radar_mono.m4 \
	$(top_srcdir)/config/grc_gr_radio_astronomy.m4 \
	$(top_srcdir)/config/grc_gr_sounder.m4 \
	$(top_srcdir)/config/grc_gr_trellis.m4 \
	$(top_srcdir)/config/grc_gr_uhd.m4 \
	$(top_srcdir)/config/grc_gr_usrp.m4 \
	$(top_srcdir)/config/grc_gr_usrp2.m4 \
	$(top_srcdir)/config/grc_gr_utils.m4 \
	$(top_srcdir)/config/grc_gr_video_sdl.m4 \
	$(top_srcdir)/config/grc_gr_wxgui.m4 \
	$(top_srcdir)/config/grc_grc.m4 \
	$(top_srcdir)/config/grc_gruel.m4 \
	$(top_srcdir)/config/grc_usrp.m4 \
	$(top_srcdir)/config/grc_usrp2.m4 \
	$(top_srcdir)/config/grc_volk.m4 $(top_srcdir)/config/lf_cc.m4 \
	$(top_srcdir)/config/lf_cxx.m4 \
	$(top_srcdir)/config/lf_warnings.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/macosx_audiounit.m4 \
	$(top_srcdir)/config/mkstemp.m4 \
	$(top_srcdir)/config/onceonly.m4 $(top_srcdir)/config/pkg.m4 \
	$(top_srcdir)/config/sdl.m4 \
	$(top_srcdir)/config/usrp_fusb_tech.m4 \
	$(top_srcdir)/config/usrp_libusb.m4 \
	$(top_srcdir)/config/usrp_sdcc.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__pmt_swig_python_PYTHON_DIST) \
	$(pmt_swig_swiginclude_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pmt_swig_pylibdir)" \
	"$(DESTDIR)$(pmt_swig_pythondir)" \
	"$(DESTDIR)$(pmt_swig_swigincludedir)"
LTLIBRARIES = $(pmt_swig_pylib_LTLIBRARIES)
am__DEPENDENCIES_1 =
_pmt_swig_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(pmt_swig_la_swig_libadd)
am___pmt_swig_la_SOURCES_DIST = python/pmt_swig.cc
am__pmt_swig_la_OBJECTS = _pmt_swig_la-pmt_swig.lo
_pmt_swig_la_OBJECTS = $(am__pmt_swig_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
_pmt_swig_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(_pmt_swig_la_CXXFLAGS) \
	$(CXXFLAGS) $(_pmt_swig_la_LDFLAGS) $(LDFLAGS) -o $@
am__pmt_swig_la_rpath = -rpath $(pmt_swig_pylibdir)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(_pmt_swig_la_SOURCES)
DIST_SOURCES = $(am___pmt_swig_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__pmt_swig_python_PYTHON_DIST = pmt_swig.py
am__py_compile = PYTHON=$(PYTHON) $(SHELL) $(py_compile)
am__pep3147_tweak = \
  sed -e 's|\.py$$||' -e 's|[^/]*$$|__pycache__/&.*.py|'
py_compile = $(top_srcdir)/py-compile
HEADERS = $(pmt_swig_swiginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.swig.gen \
	$(top_srcdir)/Makefile.common $(top_srcdir)/Makefile.swig \
	$(top_srcdir)/depcomp $(top_srcdir)/py-compile \
	$(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/me/gnuradio-3.4.0/missing aclocal-1.15
ALLOCA = 
ALSA_CFLAGS = -I/usr/include/alsa
ALSA_CPPFLAGS =  -I/usr/include/alsa
ALSA_INCLUDEDIR = /usr/include
ALSA_LIBS = -lasound -lm -ldl -lpthread -lrt
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/me/gnuradio-3.4.0/missing autoconf
AUTOHEADER = ${SHELL} /home/me/gnuradio-3.4.0/missing autoheader

# Make rebuilds less verbose with stuff we can safely ignore
# about GNU make only extensions.
AUTOMAKE = ${SHELL} /home/me/gnuradio-3.4.0/missing automake-1.15 -Wno-portability -Wnone
AWK = gawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_CXXFLAGS = -pthread
BOOST_DATE_TIME_LIB = -lboost_date_time
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BUILD_DATE = Tue, 13 Mar 2018 18:32:00
CBLAS_LIBS = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CFLAGS =  -pthread
COMEDI_CFLAGS = 
COMEDI_CPPFLAGS = 
COMEDI_INCLUDEDIR = 
COMEDI_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG = 
CPPUNIT_CPPFLAGS = 
CPPUNIT_INCLUDEDIR = /usr/include
CPPUNIT_INCLUDES = 
CPPUNIT_LIBS = -lcppunit -ldl
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -pthread
CXX_FOR_BUILD = g++
CYGPATH_W = echo
DEFINES = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOCVER = 3.4.0
DOT = 
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FFTW3F_CFLAGS = 
FFTW3F_CPPFLAGS = 
FFTW3F_INCLUDEDIR = /usr/include
FFTW3F_LIBS = -lfftw3f -lm
FGREP = /bin/grep -F
FUSB_TECH = linux
GIT = /usr/bin/git
GIT_COMMIT = 
GIT_DESCRIBE = 
GIT_SEQNO = 
GIT_TAG = 
GREP = /bin/grep
GR_ARCH_BIGENDIAN = 0
GR_HAVE_ARPA_INET = 1
GR_HAVE_BYTESWAP = 1
GR_HAVE_NETINET_IN = 1
GR_PREFSDIR = /usr/local/etc/gnuradio/conf.d
GSL_CFLAGS = 
GSL_CPPFLAGS = 
GSL_INCLUDEDIR = 
GSL_LIBS = 
GUILE = 
GUILE_CFLAGS = 
GUILE_CONFIG = 
GUILE_LIBS = Wl,-Bsymbolic-functions -lguile -lgmp -lcrypt
GUILE_PKDATADIR = 
GUILE_PKLIBDIR = 
HAVE_DOT = NO
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IPC_LIBS = -lltdl 
JACK_CFLAGS = 
JACK_CPPFLAGS = 
JACK_INCLUDEDIR = 
JACK_LIBS = 
LD = /usr/bin/ld
LDFLAGS = -lboost_system -lboost_filesystem
LIBGNURADIO_CORE_EXTRA_LDFLAGS = 
LIBOBJS = 
LIBS = -lltdl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUSB_PKG_CONFIG_NAME = libusb
LIBVER = 3.4.0
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/me/gnuradio-3.4.0/missing makeinfo
MANIFEST_TOOL = :
MD_CPU = x86
MD_SUBCPU = x86_64
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
NO_UNDEFINED = 
OBJDUMP = objdump
OBJEXT = o
OSS_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = gnuradio
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PORTAUDIO_CFLAGS = 
PORTAUDIO_CPPFLAGS = 
PORTAUDIO_INCLUDEDIR = 
PORTAUDIO_LIBS = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python
PYTHON_CPPFLAGS = -I/usr/include/python2.7
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_LDFLAGS = 
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
QMAKE_INCLUDES = 
QTCORE_CFLAGS = 
QTCORE_CPPFLAGS = 
QTCORE_INCLUDEDIR = 
QTCORE_LIBS = 
QTGUI_CFLAGS = 
QTGUI_CPPFLAGS = 
QTGUI_INCLUDEDIR = 
QTGUI_LIBS = 
QTOPENGL_CFLAGS = 
QTOPENGL_CPPFLAGS = 
QTOPENGL_INCLUDEDIR = 
QTOPENGL_LIBS = 
QT_INCLUDES = 
QT_LIBS = 
QT_MOC_EXEC = 
QT_UIC_EXEC = 
QWT_CFLAGS = 
QWT_LIBS = 
RANLIB = ranlib
RELEASE = 3.4.0
RM_PROG = /bin/rm
SDL_CFLAGS = 
SDL_CONFIG = 
SDL_CPPFLAGS = 
SDL_INCLUDEDIR = 
SDL_LIBS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHM_OPEN_LIBS = -lrt -lltdl 
SPU_GCC_PROG = 
STRIP = strip
SWIG = /usr/bin/swig -c++
SWIG_GUILE_CPPFLAGS = 
SWIG_GUILE_LIB = 
SWIG_GUILE_OPT = 
SWIG_PYTHON_CPPFLAGS = 
SWIG_PYTHON_LIB = 
SWIG_PYTHON_OPT = 
SYSCONFDIR = /usr/local/etc
UHD_CFLAGS = 
UHD_CPPFLAGS = 
UHD_INCLUDEDIR = 
UHD_LIBS = 
USB_CFLAGS = 
USB_CPPFLAGS = 
USB_INCLUDEDIR = /usr/include
USB_INCLUDES = -I/usr/include
USB_LIBS = -lusb
USE_LIBUSB1 = 0
USRP2_INCLUDES = -I${abs_top_srcdir}/usrp2/host/include 		-I${abs_top_srcdir}/usrp2/firmware/include
USRP2_LA = ${abs_top_builddir}/usrp2/host/lib/libusrp2.la
VERSION = 3.4.0
WINAUDIO_LIBS = -lwinmm
XAS = asx8051 -plosgff
XCC = sdcc -mmcs51 --no-xinit-opt
XDG_UTILS = true
XMLTO = 
abs_builddir = /home/me/gnuradio-3.4.0/gruel/src/swig
abs_srcdir = /home/me/gnuradio-3.4.0/gruel/src/swig
abs_top_builddir = /home/me/gnuradio-3.4.0
abs_top_srcdir = /home/me/gnuradio-3.4.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
autoconf_default_CFLAGS = -g -O2
autoconf_default_CXXFLAGS = -g -O2
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_dirs = config gruel usrp
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
docs_INCLUDEDIR = 
docs_INCLUDES = 
docs_LA = 
docs_LDFLAG = 
docs_LIBDIRPATH = 
dvidir = ${docdir}
enable_dot = no
enable_html_docs = YES
enable_latex_docs = NO
enable_xml_docs = YES
exec_prefix = ${prefix}
gcell_INCLUDEDIR = 
gcell_INCLUDES = -I${abs_top_srcdir}/gcell/include
gcell_LA = ${abs_top_builddir}/gcell/lib/libgcell.la
gcell_LDFLAG = 
gcell_LIBDIRPATH = 
gcell_spu_INCLUDES = -I${abs_top_srcdir}/gcell/include
gcell_spu_LA = ${abs_top_builddir}/gcell/lib/spu/libgcell_spu.a
generate_docs = docs
gnuradio_core_I = 
gnuradio_core_INCLUDEDIR = 
gnuradio_core_INCLUDES = -I${abs_top_srcdir}/gnuradio-core/src/lib/runtime -I${abs_top_srcdir}/gnuradio-core/src/lib/general -I${abs_top_builddir}/gnuradio-core/src/lib/general -I${abs_top_srcdir}/gnuradio-core/src/lib/gengen -I${abs_top_builddir}/gnuradio-core/src/lib/gengen -I${abs_top_srcdir}/gnuradio-core/src/lib/filter -I${abs_top_builddir}/gnuradio-core/src/lib/filter -I${abs_top_srcdir}/gnuradio-core/src/lib/missing -I${abs_top_srcdir}/gnuradio-core/src/lib/reed-solomon -I${abs_top_srcdir}/gnuradio-core/src/lib/viterbi -I${abs_top_srcdir}/gnuradio-core/src/lib/io -I${abs_top_srcdir}/gnuradio-core/src/lib/g72x -I${abs_top_srcdir}/gnuradio-core/src/lib/swig -I${abs_top_srcdir}/gnuradio-core/src/lib/hier -I${abs_top_builddir}/gnuradio-core/src/lib/swig
gnuradio_core_LA = ${abs_top_builddir}/gnuradio-core/src/lib/libgnuradio-core.la
gnuradio_core_LDFLAG = 
gnuradio_core_LIBDIRPATH = ${abs_top_builddir}/gnuradio-core/src/lib:${abs_top_builddir}/gnuradio-core/src/lib/.libs
gnuradio_core_PYDIRPATH = ${abs_top_srcdir}/gnuradio-core/src/python
gnuradio_core_SWIGDIRPATH = ${abs_top_builddir}/gnuradio-core/src/lib/swig:${abs_top_builddir}/gnuradio-core/src/lib/swig/.libs:${abs_top_srcdir}/gnuradio-core/src/lib/swig
gnuradio_examples_INCLUDEDIR = 
gnuradio_examples_INCLUDES = 
gnuradio_examples_LA = 
gnuradio_examples_LDFLAG = 
gnuradio_examples_LIBDIRPATH = 
gr_atsc_INCLUDEDIR = 
gr_atsc_INCLUDES = 
gr_atsc_LA = 
gr_atsc_LDFLAG = 
gr_atsc_LIBDIRPATH = 
gr_audio_INCLUDEDIR = 
gr_audio_INCLUDES = 
gr_audio_LA = 
gr_audio_LDFLAG = 
gr_audio_LIBDIRPATH = 
gr_comedi_INCLUDEDIR = 
gr_comedi_INCLUDES = 
gr_comedi_LA = 
gr_comedi_LDFLAG = 
gr_comedi_LIBDIRPATH = 
gr_cvsd_vocoder_INCLUDEDIR = 
gr_cvsd_vocoder_INCLUDES = 
gr_cvsd_vocoder_LA = 
gr_cvsd_vocoder_LDFLAG = 
gr_cvsd_vocoder_LIBDIRPATH = 
gr_gcell_INCLUDEDIR = 
gr_gcell_INCLUDES = 
gr_gcell_LA = 
gr_gcell_LDFLAG = 
gr_gcell_LIBDIRPATH = 
gr_gpio_INCLUDEDIR = 
gr_gpio_INCLUDES = 
gr_gpio_LA = 
gr_gpio_LDFLAG = 
gr_gpio_LIBDIRPATH = 
gr_gsm_fr_vocoder_INCLUDEDIR = 
gr_gsm_fr_vocoder_INCLUDES = 
gr_gsm_fr_vocoder_LA = 
gr_gsm_fr_vocoder_LDFLAG = 
gr_gsm_fr_vocoder_LIBDIRPATH = 
gr_libdir_suffix = 64
gr_msdd6000_INCLUDEDIR = 
gr_msdd6000_INCLUDES = 
gr_msdd6000_LA = 
gr_msdd6000_LDFLAG = 
gr_msdd6000_LIBDIRPATH = 
gr_noaa_INCLUDEDIR = 
gr_noaa_INCLUDES = 
gr_noaa_LA = 
gr_noaa_LDFLAG = 
gr_noaa_LIBDIRPATH = 
gr_pager_INCLUDEDIR = 
gr_pager_INCLUDES = 
gr_pager_LA = 
gr_pager_LDFLAG = 
gr_pager_LIBDIRPATH = 
gr_qtgui_INCLUDEDIR = 
gr_qtgui_INCLUDES = 
gr_qtgui_LA = 
gr_qtgui_LDFLAG = 
gr_qtgui_LIBDIRPATH = 
gr_radar_mono_INCLUDEDIR = 
gr_radar_mono_INCLUDES = 
gr_radar_mono_LA = 
gr_radar_mono_LDFLAG = 
gr_radar_mono_LIBDIRPATH = 
gr_radio_astronomy_INCLUDEDIR = 
gr_radio_astronomy_INCLUDES = 
gr_radio_astronomy_LA = 
gr_radio_astronomy_LDFLAG = 
gr_radio_astronomy_LIBDIRPATH = 
gr_sounder_INCLUDEDIR = 
gr_sounder_INCLUDES = 
gr_sounder_LA = 
gr_sounder_LDFLAG = 
gr_sounder_LIBDIRPATH = 
gr_trellis_INCLUDEDIR = 
gr_trellis_INCLUDES = 
gr_trellis_LA = 
gr_trellis_LDFLAG = 
gr_trellis_LIBDIRPATH = 
gr_uhd_INCLUDEDIR = 
gr_uhd_INCLUDES = 
gr_uhd_LA = 
gr_uhd_LDFLAG = 
gr_uhd_LIBDIRPATH = 
gr_usrp2_INCLUDEDIR = 
gr_usrp2_INCLUDES = 
gr_usrp2_LA = 
gr_usrp2_LDFLAG = 
gr_usrp2_LIBDIRPATH = 
gr_usrp_INCLUDEDIR = 
gr_usrp_INCLUDES = 
gr_usrp_LA = 
gr_usrp_LDFLAG = 
gr_usrp_LIBDIRPATH = 
gr_utils_INCLUDEDIR = 
gr_utils_INCLUDES = 
gr_utils_LA = 
gr_utils_LDFLAG = 
gr_utils_LIBDIRPATH = 
gr_video_sdl_INCLUDEDIR = 
gr_video_sdl_INCLUDES = 
gr_video_sdl_LA = 
gr_video_sdl_LDFLAG = 
gr_video_sdl_LIBDIRPATH = 
gr_wxgui_INCLUDEDIR = 
gr_wxgui_INCLUDES = 
gr_wxgui_LA = 
gr_wxgui_LDFLAG = 
gr_wxgui_LIBDIRPATH = 
grc_INCLUDEDIR = 
grc_INCLUDES = 
grc_LA = 
grc_LDFLAG = 
grc_LIBDIRPATH = 
gruel_INCLUDEDIR = 
gruel_INCLUDES = -I${abs_top_srcdir}/gruel/src/include -I${abs_top_builddir}/gruel/src/include
gruel_LA = ${abs_top_builddir}/gruel/src/lib/libgruel.la
gruel_LDFLAG = 
gruel_LIBDIRPATH = ${abs_top_builddir}/gruel/src/lib:${abs_top_builddir}/gruel/src/lib/.libs
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/me/gnuradio-3.4.0/install-sh
lf_CFLAGS =  -Wall -Werror-implicit-function-declaration
lf_CXXFLAGS =  -Wall -Woverloaded-virtual
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/gnuradio
pkgpythondir = ${pythondir}/gnuradio
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
skipped_dirs =  volk gcell gnuradio-core usrp2 gr-usrp gr-usrp2 gr-gcell gr-msdd6000 gr-audio gr-atsc gr-comedi gr-cvsd-vocoder gr-gpio gr-gsm-fr-vocoder gr-noaa gr-pager gr-radar-mono gr-radio-astronomy gr-trellis gr-video-sdl gr-wxgui gr-qtgui gr-sounder gr-utils gnuradio-examples grc gr-uhd docs
srcdir = .
subdirs =  usrp2/firmware
swig_CXXFLAGS = -g -O1 -Wno-strict-aliasing -Wno-parentheses
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
usrp2_INCLUDEDIR = 
usrp2_INCLUDES = 
usrp2_LA = 
usrp2_LDFLAG = 
usrp2_LIBDIRPATH = 
usrp_INCLUDEDIR = 
usrp_INCLUDES =  		-I${abs_top_srcdir}/usrp/host/include 		-I${abs_top_builddir}/usrp/host/include 		-I${abs_top_srcdir}/usrp/firmware/include
usrp_LA = ${abs_top_builddir}/usrp/host/lib/libusrp.la
usrp_LDFLAG = 
usrp_LIBDIRPATH = 
volk_INCLUDEDIR = 
volk_INCLUDES = 
volk_LA = 
volk_LDFLAG = 
volk_LIBDIRPATH = 
with_GUILE_LOAD_PATH = 
with_INCLUDES = 
with_LIBDIRPATH = 
with_PYDIRPATH = 
with_SWIGDIRPATH = 
with_SWIG_INCLUDES = 
with_dirs = 

# Every Makefile starts with common vars so we can
# consistently use +=

# N.B. Only $(swig_built_sources), not $(swig_all_built_sources)
BUILT_SOURCES = $(swig_built_sources)
MOSTLYCLEANFILES = $(BUILT_SOURCES) $(STAMPS) *.pyc *.pyo *~ *.tmp \
	*.loT .unittests/* .unittests/python/* $(DEPDIR)/*.S*
CLEANFILES = guile.log $(swig_all_built_sources) python/*.lo \
	python/*.o python/*.d guile/*.lo guile/*.o guile/*.d
DISTCLEANFILES = 
EXTRA_DIST = 

# Other common defines; use "+=" to add to these
STAMPS = 
AM_CFLAGS = -g -O2  -Wall -Werror-implicit-function-declaration
AM_CXXFLAGS = -g -O2  -Wall -Woverloaded-virtual

# Sets ABI version in SONAME and appends -LIBVER to filename
LTVERSIONFLAGS = -version-info 0:0:0 -release $(LIBVER)

# includes
grincludedir = $(includedir)/gnuradio

# swig includes
swigincludedir = $(grincludedir)/swig

# Guile scheme code ends up under here:
guiledir = $(prefix)/share/guile/site

# Install the gnuradio stuff in the appropriate subdirectory
# This usually ends up at:
#   ${prefix}/lib/python${python_version}/site-packages/gnuradio
grpythondir = $(pythondir)/gnuradio
grpyexecdir = $(pyexecdir)/gnuradio

# Install the non-gnuradio usrp stuff in the appropriate subdirectory
# This usually ends up at:
#   ${prefix}/lib/python${python_version}/site-packages/usrpm
usrppythondir = $(pythondir)/usrpm
usrppyexecdir = $(pyexecdir)/usrpm

# gcell includes
gcellincludedir = $(includedir)/gcell
gcellspuincludedir = $(includedir)/gcell/spu

# Cell spu libs
libspudir = $(libdir)spu

# This used to be set in configure.ac but is now defined here for all 
# Makefiles when this fragment is included.
STD_DEFINES_AND_INCLUDES = $(DEFINES) $(GNURADIO_INCLUDES) \
	$(GRUEL_INCLUDES) $(VOLK_INCLUDES) $(BOOST_CPPFLAGS)


# when including for compilation from pre-installed libraries and such,
# need to make sure those are put last on the compile command
WITH_INCLUDES = 
WITH_SWIG_INCLUDES = 

# Where to find gnuradio include files in the current build tree
# top_srcdir for original stuff, top_builddir for generated files
GNURADIO_INCLUDES = -I${abs_top_srcdir}/gnuradio-core/src/lib/runtime -I${abs_top_srcdir}/gnuradio-core/src/lib/general -I${abs_top_builddir}/gnuradio-core/src/lib/general -I${abs_top_srcdir}/gnuradio-core/src/lib/gengen -I${abs_top_builddir}/gnuradio-core/src/lib/gengen -I${abs_top_srcdir}/gnuradio-core/src/lib/filter -I${abs_top_builddir}/gnuradio-core/src/lib/filter -I${abs_top_srcdir}/gnuradio-core/src/lib/missing -I${abs_top_srcdir}/gnuradio-core/src/lib/reed-solomon -I${abs_top_srcdir}/gnuradio-core/src/lib/viterbi -I${abs_top_srcdir}/gnuradio-core/src/lib/io -I${abs_top_srcdir}/gnuradio-core/src/lib/g72x -I${abs_top_srcdir}/gnuradio-core/src/lib/swig -I${abs_top_srcdir}/gnuradio-core/src/lib/hier -I${abs_top_builddir}/gnuradio-core/src/lib/swig

# How to link in GNU Radio core library from inside the tree
GNURADIO_CORE_LA = ${abs_top_builddir}/gnuradio-core/src/lib/libgnuradio-core.la

# How to link in the GRUEL library from inside the tree
GRUEL_INCLUDES = -I${abs_top_srcdir}/gruel/src/include -I${abs_top_builddir}/gruel/src/include
GRUEL_LA = ${abs_top_builddir}/gruel/src/lib/libgruel.la

# How to link in the VOLK library from inside the tree
VOLK_INCLUDES = 
VOLK_LA = 

# How to link in the USRP library from inside the tree
USRP_INCLUDES =  		-I${abs_top_srcdir}/usrp/host/include 		-I${abs_top_builddir}/usrp/host/include 		-I${abs_top_srcdir}/usrp/firmware/include
USRP_LA = ${abs_top_builddir}/usrp/host/lib/libusrp.la

# How to link the gcell library from inside the tree (the PPU part)
GCELL_INCLUDES = -I${abs_top_srcdir}/gcell/include
GCELL_LA = ${abs_top_builddir}/gcell/lib/libgcell.la

# How to link the gcell library from inside the tree (the SPU part)
GCELL_SPU_INCLUDES = -I${abs_top_srcdir}/gcell/include
GCELL_SPU_LA = ${abs_top_builddir}/gcell/lib/spu/libgcell_spu.a

# libtool aware wrapper for ppu-embedspu
GCELL_EMBEDSPU_LIBTOOL = /home/me/gnuradio-3.4.0/gcell/lib/runtime/gcell-embedspu-libtool

# Fix for BSD make not defining $(RM).  We define it now in configure.ac
# using AM_PATH_PROG, but now here have to add a -f to be like GNU make
RM = $(RM_PROG) -f
RUN_GUILE = GUILE_LOAD_PATH="/home/me/gnuradio-3.4.0/gruel/src/scheme"  -e main -s

# Base directory for example applications
exampledir = $(datadir)/gnuradio/examples
gr_docdir = $(docdir)-$(DOCVER)

# System configuration files
gr_prefsdir = $(GR_PREFSDIR)

# Data directory for grc block wrappers
grc_blocksdir = $(pkgdatadir)/grc/blocks
pmt_swig_pythondir = $(pythondir)/$(pmt_swig_pythondir_category)
pmt_swig_pylibdir = $(pyexecdir)/$(pmt_swig_pylibdir_category)

# The .so libraries for the guile modules get installed whereever guile
# is installed, usually /usr/lib/guile/gnuradio/
# FIXME: determince whether these should be installed with gnuradio.
pmt_swig_scmlibdir = $(libdir)

# The scm files for the guile modules get installed where ever guile
# is installed, usually /usr/share/guile/site/gnuradio_core_runtime
# FIXME: determince whether these should be installed with gnuradio.
pmt_swig_scmdir = $(guiledir)
pmt_swig_swigincludedir = $(swigincludedir)
pmt_swig_swiginclude_HEADERS = \
	pmt_swig.i			\
	$(pmt_swig_swiginclude_headers)

pmt_swig_pylib_LTLIBRARIES = \
	_pmt_swig.la

_pmt_swig_la_SOURCES = \
	python/pmt_swig.cc		\
	$(pmt_swig_la_swig_sources)

pmt_swig_python_PYTHON = \
	pmt_swig.py			\
	$(pmt_swig_python)

_pmt_swig_la_LIBADD = \
	$(STD_SWIG_LA_LIB_ADD)		\
	$(pmt_swig_la_swig_libadd)

_pmt_swig_la_LDFLAGS = \
	$(STD_SWIG_LA_LD_FLAGS)		\
	$(pmt_swig_la_swig_ldflags)

_pmt_swig_la_CXXFLAGS = \
	$(STD_SWIG_CXX_FLAGS)		\
	-I$(top_builddir) 		\
	$(pmt_swig_la_swig_cxxflags)

SWIG_PYTHON_FLAGS = \
	-fvirtual	\
	-python		\
	-modern		\
	-keyword	\
	-w511		\
	-outdir .

STD_SWIG_PYTHON_ARGS = \
	$(SWIG_PYTHON_FLAGS)			\
	$(STD_DEFINES_AND_INCLUDES)		\
	$(WITH_SWIG_INCLUDES)			\
	$(WITH_INCLUDES)


# NOTE: -Linkage passive and -Linkage module don't define SWIG_init()
SWIG_GUILE_FLAGS = \
	-guile		\
	-scm		\
	-scmstub	\
	-package gnuradio \
	-Linkage module \
	-proxy \
	-goopsprefix gr: \
	-emit-slot-accessors \
	-emit-setters \
	-outdir .

STD_SWIG_GUILE_ARGS = \
	$(SWIG_GUILE_FLAGS)			\
	$(STD_DEFINES_AND_INCLUDES)		\
	$(WITH_SWIG_INCLUDES)			\
	$(WITH_INCLUDES)

STD_SWIG_LA_LD_FLAGS = \
	$(PYTHON_LDFLAGS)	\
	-module			\
	-avoid-version		\
	$(NO_UNDEFINED)

STD_SWIG_LA_LIB_ADD = -lstdc++
STD_SWIG_CXX_FLAGS = -g -O1 -Wno-strict-aliasing -Wno-parentheses

# We drive the dependencies off of swig_built_sources.  This variable
# ends up containing only the generated .py and/or .scm files, not the .h
# or .cc files.  This allows us to use the pattern rules defined
# below to generate all the pieces without the parallel make
# problems that occur when both the .py's and .cc's are in swig_built_sources.
swig_built_sources = $(am__append_1) $(am__append_3)

# swig_all_built_sources contains swig_built_sources plus the .cc and .h files.
# It contains the files to remove from the distribution and the files to
# remove for make clean.
swig_all_built_sources = $(am__append_2) $(am__append_4)

# Create a list of .py files based on the top level .i files.
PYTHON_GEN = $(foreach IFILE,$(TOP_SWIG_IFILES), $(subst .i,.py,$(IFILE)))

# Create a list of .scm files based on the top level .i files.
#GUILE_GEN = $(foreach IFILE,$(TOP_SWIG_IFILES), $(patsubst %.i,gnuradio/%.scm,$(IFILE)))

# Don't distribute any of the swig generated files
no_dist_files = $(swig_all_built_sources)
SUFFIXES = .i .scm .py
AM_CPPFLAGS = \
	-I$(top_srcdir)/gruel/src/lib \
	$(STD_DEFINES_AND_INCLUDES) \
	$(PYTHON_CPPFLAGS) \
	$(WITH_INCLUDES)


##############################
# SWIG interface and library
TOP_SWIG_IFILES = \
	pmt_swig.i


# Install so that they end up available as:
#   import gruel.pmt
# This ends up at:
#   ${prefix}/lib/python${python_version}/site-packages/gruel/pmt
pmt_swig_pythondir_category = \
	gruel/pmt


# additional libraries for linking with the SWIG-generated library
pmt_swig_la_swig_libadd = \
	$(abs_top_builddir)/gruel/src/lib/pmt/libpmt.la


# additional SWIG files to be installed
pmt_swig_swiginclude_headers = \
	gr_intrusive_ptr.i

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .i .scm .py .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(top_srcdir)/Makefile.swig $(srcdir)/Makefile.swig.gen $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu gruel/src/swig/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu gruel/src/swig/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.common $(top_srcdir)/Makefile.swig $(srcdir)/Makefile.swig.gen $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-pmt_swig_pylibLTLIBRARIES: $(pmt_swig_pylib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pmt_swig_pylib_LTLIBRARIES)'; test -n "$(pmt_swig_pylibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pmt_swig_pylibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pmt_swig_pylibdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pmt_swig_pylibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pmt_swig_pylibdir)"; \
	}

uninstall-pmt_swig_pylibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pmt_swig_pylib_LTLIBRARIES)'; test -n "$(pmt_swig_pylibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pmt_swig_pylibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pmt_swig_pylibdir)/$$f"; \
	done

clean-pmt_swig_pylibLTLIBRARIES:
	-test -z "$(pmt_swig_pylib_LTLIBRARIES)" || rm -f $(pmt_swig_pylib_LTLIBRARIES)
	@list='$(pmt_swig_pylib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

_pmt_swig.la: $(_pmt_swig_la_OBJECTS) $(_pmt_swig_la_DEPENDENCIES) $(EXTRA__pmt_swig_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(_pmt_swig_la_LINK) $(am__pmt_swig_la_rpath) $(_pmt_swig_la_OBJECTS) $(_pmt_swig_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/_pmt_swig_la-pmt_swig.Plo

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

_pmt_swig_la-pmt_swig.lo: python/pmt_swig.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(_pmt_swig_la_CXXFLAGS) $(CXXFLAGS) -MT _pmt_swig_la-pmt_swig.lo -MD -MP -MF $(DEPDIR)/_pmt_swig_la-pmt_swig.Tpo -c -o _pmt_swig_la-pmt_swig.lo `test -f 'python/pmt_swig.cc' || echo '$(srcdir)/'`python/pmt_swig.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/_pmt_swig_la-pmt_swig.Tpo $(DEPDIR)/_pmt_swig_la-pmt_swig.Plo
#	$(AM_V_CXX)source='python/pmt_swig.cc' object='_pmt_swig_la-pmt_swig.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(_pmt_swig_la_CXXFLAGS) $(CXXFLAGS) -c -o _pmt_swig_la-pmt_swig.lo `test -f 'python/pmt_swig.cc' || echo '$(srcdir)/'`python/pmt_swig.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pmt_swig_pythonPYTHON: $(pmt_swig_python_PYTHON)
	@$(NORMAL_INSTALL)
	@list='$(pmt_swig_python_PYTHON)'; dlist=; list2=; test -n "$(pmt_swig_pythondir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pmt_swig_pythondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pmt_swig_pythondir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pmt_swig_pythondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pmt_swig_pythondir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pmt_swig_pythondir)" $$dlist; \
	else :; fi

uninstall-pmt_swig_pythonPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pmt_swig_python_PYTHON)'; test -n "$(pmt_swig_pythondir)" || list=; \
	py_files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$py_files" || exit 0; \
	dir='$(DESTDIR)$(pmt_swig_pythondir)'; \
	pyc_files=`echo "$$py_files" | sed 's|$$|c|'`; \
	pyo_files=`echo "$$py_files" | sed 's|$$|o|'`; \
	py_files_pep3147=`echo "$$py_files" | $(am__pep3147_tweak)`; \
	echo "$$py_files_pep3147";\
	pyc_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|c|'`; \
	pyo_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|o|'`; \
	st=0; \
	for files in \
	  "$$py_files" \
	  "$$pyc_files" \
	  "$$pyo_files" \
	  "$$pyc_files_pep3147" \
	  "$$pyo_files_pep3147" \
	; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pmt_swig_swigincludeHEADERS: $(pmt_swig_swiginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pmt_swig_swiginclude_HEADERS)'; test -n "$(pmt_swig_swigincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pmt_swig_swigincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pmt_swig_swigincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pmt_swig_swigincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pmt_swig_swigincludedir)" || exit $$?; \
	done

uninstall-pmt_swig_swigincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pmt_swig_swiginclude_HEADERS)'; test -n "$(pmt_swig_swigincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pmt_swig_swigincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(pmt_swig_pylibdir)" "$(DESTDIR)$(pmt_swig_pythondir)" "$(DESTDIR)$(pmt_swig_swigincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-pmt_swig_pylibLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pmt_swig_pylibLTLIBRARIES \
	install-pmt_swig_pythonPYTHON \
	install-pmt_swig_swigincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pmt_swig_pylibLTLIBRARIES \
	uninstall-pmt_swig_pythonPYTHON \
	uninstall-pmt_swig_swigincludeHEADERS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-libtool clean-pmt_swig_pylibLTLIBRARIES \
	cscopelist-am ctags ctags-am dist-hook distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pmt_swig_pylibLTLIBRARIES \
	install-pmt_swig_pythonPYTHON \
	install-pmt_swig_swigincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-pmt_swig_pylibLTLIBRARIES \
	uninstall-pmt_swig_pythonPYTHON \
	uninstall-pmt_swig_swigincludeHEADERS

.PRECIOUS: Makefile


# Base directory for documentation (docdir undefined in autoconf < 1.60)
docdir ?= $(datadir)/doc/$(PACKAGE)

# Don't distribute the files defined in the variable 'no_dist_files'

dist-hook:
	@for file in $(no_dist_files); do \
		echo $(RM) $(distdir)/$$file; \
		$(RM) $(distdir)/$$file; \
	done

pmt_swig_pythondir_category ?= gruel/pmt_swig
pmt_swig_pylibdir_category ?= $(pmt_swig_pythondir_category)

python/pmt_swig.cc: pmt_swig.py
pmt_swig.py: pmt_swig.i

# Include the python dependencies for this file
-include python/pmt_swig.d

# Compile a .i to what guile needs. We use -o to set the output file name,
# or even with -outdir guile in SWIG_GUILE_ARGS, swig keeps putting a 
# gnuradio_core_*_wrap.cxx in the source directory.
gnuradio/%.scm : %.i
	@echo "Compile .i to .scm"
	@test -d "guile" || $(mkinstalldirs) "guile"
	@test -d "gnuradio" || $(mkinstalldirs) "gnuradio"
	$(SWIG) $(STD_SWIG_GUILE_ARGS) $($*_swig_args) \
		-MD -MF guile/$*.Std \
		-module $* -o guile/$*.cc $<
	$(SED) -e 's|guile/\(.*\)\.cc:|gnuradio/\1.scm:|' guile/$*.Std > guile/$*.d
	$(SED) -i -e 's/<--dummy-[0-9]\+-->/<top>/g' gnuradio/$*.scm
	$(SED) -i -e 's/^(export /(export-safely /' gnuradio/$*.scm
	$(RM) guile/$*.Std

# Compile a .i file to what python needs
.i.py:
	@echo "Compile .i to .py"
	@test -d "python" || $(mkinstalldirs) "python"
	$(SWIG) $(STD_SWIG_PYTHON_ARGS) $($*_swig_args) \
		-MD -MF python/$*.Std \
		-module $* -o python/$*.cc -oh python/$*.h $<
	$(SED) -e 's|python/\(.*\)\.cc:|\1.py:|' python/$*.Std > python/$*.d
	$(RM) python/$*.Std

generate-makefile-swig $(srcdir)/Makefile.swig.gen: $(top_srcdir)/Makefile.swig.gen.t
	@do_recreate=0; \
	if test -f $(srcdir)/Makefile.swig.gen; then \
		if $(RM) $(srcdir)/Makefile.swig.gen 2>/dev/null; then \
			if touch $(srcdir)/Makefile.swig.gen 2>/dev/null; then \
				do_recreate=1; \
			fi; \
		fi; \
	else \
		if touch $(srcdir)/Makefile.swig.gen 2>/dev/null; then \
			do_recreate=1; \
		fi; \
	fi; \
	if test "$$do_recreate" == "1"; then \
		echo "Regenerating $(srcdir)/Makefile.swig.gen"; \
		for TFILE in $(TOP_SWIG_IFILES); do \
			TNAME=`python -c "import os.path as op; (dN, fN) = op.split ('$$TFILE'); (fbN, fE) = op.splitext (fN); print fbN;"`; \
			$(SED) -e 's|@NAME@|'$$TNAME'|g;' < $(top_srcdir)/Makefile.swig.gen.t >> $(srcdir)/Makefile.swig.gen; \
			echo "" >> $(srcdir)/Makefile.swig.gen; \
		done; \
	else \
		echo "Cannot recreate $(srcdir)/Makefile.swig.gen because the directory or file is write-protected."; \
		exit -1; \
	fi;

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
